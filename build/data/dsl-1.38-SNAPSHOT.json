{
    "version": "1.38-SNAPSHOT",
    "root": {
        "name": "Jenkins Job DSL API",
        "contextClass": "javaposse.jobdsl.dsl.DslFactory"
    },
    "contexts": {
        "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext",
            "methods": [
                {
                    "name": "blocksInheritance",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "blocksInheritance",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "blocksInheritance(boolean blocksInheritance = true)",
                            "availableSince": "1.35",
                            "html": "Blocks inheritance of the global authorization matrix.\r\n     ",
                            "firstSentenceCommentText": "Blocks inheritance of the global authorization matrix."
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "job('example') {\r\n    authorization {\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "permission",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "javaposse.jobdsl.dsl.helpers.Permissions"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "text": "permission(javaposse.jobdsl.dsl.helpers.Permissions permission, String user)",
                            "deprecated": true
                        },
                        {
                            "parameters": [
                                {
                                    "name": "permissionEnumName",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "text": "permission(String permissionEnumName, String user)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "String"
                                }
                            ],
                            "text": "permission(String permission)",
                            "html": "Adds a specific permission.\r\n     ",
                            "firstSentenceCommentText": "Adds a specific permission."
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "permissionAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "text": "permissionAll(String user)",
                            "html": "Adds all available permissions for the user.",
                            "firstSentenceCommentText": "Adds all available permissions for the user."
                        }
                    ],
                    "examples": "// add all permissions for user joe\r\njob('example') {\r\n    authorization {\r\n        permissionAll('joe')\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.BuildBlockerContext": {
            "type": "javaposse.jobdsl.dsl.BuildBlockerContext",
            "methods": [
                {
                    "name": "blockLevel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "blockLevel",
                                    "type": "String"
                                }
                            ],
                            "text": "blockLevel(String blockLevel)",
                            "html": "Possible values are <TT>'GLOBAL'</TT> and <TT>'NODE'</TT> (default).",
                            "firstSentenceCommentText": "Possible values are 'GLOBAL' and 'NODE' (default)."
                        }
                    ],
                    "plugin": "build-blocker-plugin"
                },
                {
                    "name": "scanQueueFor",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scanQueueFor",
                                    "type": "String"
                                }
                            ],
                            "text": "scanQueueFor(String scanQueueFor)",
                            "html": "Possible values are <TT>'ALL'</TT>, <TT>'BUILDABLE'</TT> and <TT>'DISABLED'</TT> (default).",
                            "firstSentenceCommentText": "Possible values are 'ALL', 'BUILDABLE' and 'DISABLED' (default)."
                        }
                    ],
                    "plugin": "build-blocker-plugin"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContributorsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContributorsContext",
            "methods": [
                {
                    "name": "populateToolInstallations",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "populateToolInstallations()",
                            "html": "Populates the locations of installed tools as environment variables.",
                            "firstSentenceCommentText": "Populates the locations of installed tools as environment variables."
                        }
                    ],
                    "plugin": "shared-objects",
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        contributors {\r\n            populateToolInstallations()\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext",
            "methods": [
                {
                    "name": "contributors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contributorsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "contributors(Closure contributorsClosure)",
                            "availableSince": "1.30",
                            "html": "Add environment and build variable contributors provided by other plugins.\r\n     ",
                            "firstSentenceCommentText": "Add environment and build variable contributors provided by other plugins.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContributorsContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        contributors {\r\n            populateToolInstallations()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "env",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "text": "env(Object key, Object value)",
                            "html": "Adds an environment variable to the build.",
                            "firstSentenceCommentText": "Adds an environment variable to the build."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        env('TWO', '2')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "envs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<Object, Object>"
                                }
                            ],
                            "text": "envs(Map<Object, Object> map)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        envs(FOO: 'bar', TEST: '123')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "groovy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "groovy(String script)",
                            "availableSince": "1.30",
                            "html": "Evaluates a Groovy script and inject a map result. The groovy script must return a map Java object.\r\n     ",
                            "firstSentenceCommentText": "Evaluates a Groovy script and inject a map result. "
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        groovy('''\r\n            def a = 1\r\n            return [TWO: 2 * a]\r\n        ''')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "keepBuildVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepBuildVariables",
                                    "type": "boolean"
                                }
                            ],
                            "text": "keepBuildVariables(boolean keepBuildVariables)",
                            "availableSince": "1.21",
                            "html": "Inject Jenkins build variables and also environment contributors and build variable contributors provided by\r\n other plugins.\r\n     ",
                            "firstSentenceCommentText": "Inject Jenkins build variables and also environment contributors and build variable contributors provided by\r\n other plugins."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "keepSystemVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepSystemVariables",
                                    "type": "boolean"
                                }
                            ],
                            "text": "keepSystemVariables(boolean keepSystemVariables)",
                            "availableSince": "1.21",
                            "html": "Injects Jenkins system variables and environment variables defined as global properties and as node properties.\r\n     ",
                            "firstSentenceCommentText": "Injects Jenkins system variables and environment variables defined as global properties and as node properties."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        keepSystemVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "loadFilesFromMaster",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "loadFilesFromMaster",
                                    "type": "boolean"
                                }
                            ],
                            "text": "loadFilesFromMaster(boolean loadFilesFromMaster)",
                            "availableSince": "1.21",
                            "html": "Load files (properties or scripts) from the master node.\r\n     ",
                            "firstSentenceCommentText": "Load files (properties or scripts) from the master node."
                        }
                    ]
                },
                {
                    "name": "overrideBuildParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overrideBuildParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "overrideBuildParameters(boolean overrideBuildParameters = true)",
                            "availableSince": "1.30",
                            "html": "Allows environment variables to override build parameters.\r\n     ",
                            "firstSentenceCommentText": "Allows environment variables to override build parameters."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        overrideBuildParameters()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertiesFilePath",
                                    "type": "String"
                                }
                            ],
                            "text": "propertiesFile(String propertiesFilePath)",
                            "html": "Adds environment variables from a properties file.",
                            "firstSentenceCommentText": "Adds environment variables from a properties file."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        propertiesFile('build.properties')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "script(String script)",
                            "html": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on.",
                            "firstSentenceCommentText": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        script('''\r\n           mkdir -p tests\r\n           rm -rf /tmp/tests.tmp\r\n        ''')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "scriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptFilePath",
                                    "type": "String"
                                }
                            ],
                            "text": "scriptFile(String scriptFilePath)",
                            "html": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on.",
                            "firstSentenceCommentText": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on."
                        }
                    ],
                    "examples": "job('example') {\r\n    environmentVariables {\r\n        scriptFile('env.sh')\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext",
            "methods": [
                {
                    "name": "resourceNumber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourceNumber",
                                    "type": "int"
                                }
                            ],
                            "text": "resourceNumber(int resourceNumber)",
                            "html": "Number of resources to request. By default all resources are requested.",
                            "firstSentenceCommentText": "Number of resources to request. "
                        }
                    ]
                },
                {
                    "name": "resourcesVariable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourcesVariable",
                                    "type": "String"
                                }
                            ],
                            "text": "resourcesVariable(String resourcesVariable)",
                            "html": "Name for the Jenkins variable to store the reserved resources in.",
                            "firstSentenceCommentText": "Name for the Jenkins variable to store the reserved resources in."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.LogRotatorContext": {
            "type": "javaposse.jobdsl.dsl.LogRotatorContext",
            "methods": [
                {
                    "name": "artifactDaysToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int"
                                }
                            ],
                            "text": "artifactDaysToKeep(int artifactDaysToKeep)",
                            "html": "If specified, artifacts from builds older than this number of days will be deleted, but the logs, history,\r\n reports, etc for the build will be kept.",
                            "firstSentenceCommentText": "If specified, artifacts from builds older than this number of days will be deleted, but the logs, history,\r\n reports, etc for the build will be kept."
                        }
                    ]
                },
                {
                    "name": "artifactNumToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int"
                                }
                            ],
                            "text": "artifactNumToKeep(int artifactNumToKeep)",
                            "html": "If specified, only up to this number of builds have their artifacts retained.",
                            "firstSentenceCommentText": "If specified, only up to this number of builds have their artifacts retained."
                        }
                    ]
                },
                {
                    "name": "daysToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int"
                                }
                            ],
                            "text": "daysToKeep(int daysToKeep)",
                            "html": "If specified, build records are only kept up to this number of days.",
                            "firstSentenceCommentText": "If specified, build records are only kept up to this number of days."
                        }
                    ]
                },
                {
                    "name": "numToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "numToKeep",
                                    "type": "int"
                                }
                            ],
                            "text": "numToKeep(int numToKeep)",
                            "html": "If specified, only up to this number of build records are kept.",
                            "firstSentenceCommentText": "If specified, only up to this number of build records are kept."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.ClearCaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.ClearCaseContext",
            "methods": [
                {
                    "name": "configSpec",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configSpec",
                                    "type": "String..."
                                }
                            ],
                            "text": "configSpec(String... configSpec)",
                            "html": "Sets the config spec that will be used when creating the view.",
                            "firstSentenceCommentText": "Sets the config spec that will be used when creating the view."
                        }
                    ]
                },
                {
                    "name": "loadRules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "loadRules",
                                    "type": "String..."
                                }
                            ],
                            "text": "loadRules(String... loadRules)",
                            "html": "Sets the load rules for the view, which specify the path names of directories and files to load from the VOB.",
                            "firstSentenceCommentText": "Sets the load rules for the view, which specify the path names of directories and files to load from the VOB."
                        }
                    ]
                },
                {
                    "name": "mkviewOptionalParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mkviewOptionalParameter",
                                    "type": "String..."
                                }
                            ],
                            "text": "mkviewOptionalParameter(String... mkviewOptionalParameter)",
                            "html": "Specifies additional arguments when creating a snapshot view using <TT>mkview</TT>.",
                            "firstSentenceCommentText": "Specifies additional arguments when creating a snapshot view using mkview."
                        }
                    ]
                },
                {
                    "name": "viewName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewName",
                                    "type": "String"
                                }
                            ],
                            "text": "viewName(String viewName)",
                            "html": "Creates a view in the workspace with the specified view tag.",
                            "firstSentenceCommentText": "Creates a view in the workspace with the specified view tag."
                        }
                    ]
                },
                {
                    "name": "viewPath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewPath",
                                    "type": "String"
                                }
                            ],
                            "text": "viewPath(String viewPath)",
                            "html": "Create a view in the workspace with the specified view path name. If left empty, the view tag will be used as\r\n view path.",
                            "firstSentenceCommentText": "Create a view in the workspace with the specified view path name. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.GitBrowserContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.GitBrowserContext",
            "methods": [
                {
                    "name": "gitLab",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "text": "gitLab(String url, String version)",
                            "availableSince": "1.35",
                            "html": "Use GitLab as repository browser.\r\n     ",
                            "firstSentenceCommentText": "Use GitLab as repository browser."
                        }
                    ]
                },
                {
                    "name": "gitblit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "gitblit(String url, String projectName)",
                            "availableSince": "1.35",
                            "html": "Use Gitblit as repository browser.\r\n     ",
                            "firstSentenceCommentText": "Use Gitblit as repository browser."
                        }
                    ]
                },
                {
                    "name": "stash",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "text": "stash(String url)",
                            "html": "Use Stash as repository browser.",
                            "firstSentenceCommentText": "Use Stash as repository browser."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.GitMergeOptionsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.GitMergeOptionsContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "text": "branch(String branch)",
                            "html": "Sets the name of the branch to merge.",
                            "firstSentenceCommentText": "Sets the name of the branch to merge."
                        }
                    ]
                },
                {
                    "name": "remote",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remote",
                                    "type": "String"
                                }
                            ],
                            "text": "remote(String remote)",
                            "html": "Sets the name of the repository that contains the branch to merge.",
                            "firstSentenceCommentText": "Sets the name of the repository that contains the branch to merge."
                        }
                    ]
                },
                {
                    "name": "strategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategy",
                                    "type": "String"
                                }
                            ],
                            "text": "strategy(String strategy)",
                            "html": "Selects the merge strategy.\r\n\r\n Valid values are <TT>'default'</TT> (default), <TT>'resolve'</TT>, <TT>'recursive'</TT>, <TT>'octopus'</TT>,\r\n <TT>'ours'</TT> and <TT>'subtree'</TT>.",
                            "firstSentenceCommentText": "Selects the merge strategy."
                        }
                    ],
                    "plugin": "git"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.RemoteContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.RemoteContext",
            "methods": [
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "credentials(String credentials)",
                            "html": "Sets credentials for authentication with the remote repository.",
                            "firstSentenceCommentText": "Sets credentials for authentication with the remote repository."
                        }
                    ]
                },
                {
                    "name": "github",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ownerAndProject",
                                    "type": "String"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'https'"
                                },
                                {
                                    "name": "host",
                                    "type": "String",
                                    "defaultValue": "'github.com'"
                                }
                            ],
                            "text": "github(String ownerAndProject, String protocol = 'https', String host = 'github.com')",
                            "html": "Sets a remote URL for a GitHub repository.\r\n\r\n The URL will be derived from the <TT>ownerAndProject</TT>, <TT>protocol</TT> and <TT>host</TT> parameters.\r\n Supported protocols are <TT>'https'</TT>, <TT>'ssh'</TT> and <TT>'git'</TT>.",
                            "firstSentenceCommentText": "Sets a remote URL for a GitHub repository."
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "html": "Sets a name for the remote.",
                            "firstSentenceCommentText": "Sets a name for the remote."
                        }
                    ]
                },
                {
                    "name": "refspec",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "refspec",
                                    "type": "String"
                                }
                            ],
                            "text": "refspec(String refspec)",
                            "html": "Sets a refspec for the remote.",
                            "firstSentenceCommentText": "Sets a refspec for the remote."
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "text": "url(String url)",
                            "html": "Sets the remote URL.",
                            "firstSentenceCommentText": "Sets the remote URL."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.StrategyContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.StrategyContext",
            "methods": [
                {
                    "name": "ancestry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxAge",
                                    "type": "int"
                                },
                                {
                                    "name": "commit",
                                    "type": "String"
                                }
                            ],
                            "text": "ancestry(int maxAge, String commit)",
                            "html": "Selects commits to be build by maximum age and ancestor commit.",
                            "firstSentenceCommentText": "Selects commits to be build by maximum age and ancestor commit."
                        }
                    ],
                    "plugin": "git"
                },
                {
                    "name": "gerritTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "gerritTrigger()",
                            "html": "This strategy must be selected when using the\r\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Gerrit+Trigger\">Gerrit Trigger Plugin</a>.",
                            "firstSentenceCommentText": "This strategy must be selected when using the\r\n Gerrit Trigger Plugin."
                        }
                    ],
                    "plugin": "gerrit-trigger"
                },
                {
                    "name": "inverse",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "inverse()",
                            "html": "Build all branches except for those which match the branch specifiers.",
                            "firstSentenceCommentText": "Build all branches except for those which match the branch specifiers."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.GitContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.GitContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "text": "branch(String branch)",
                            "html": "Specify the branches to examine for changes and to build.",
                            "firstSentenceCommentText": "Specify the branches to examine for changes and to build."
                        }
                    ]
                },
                {
                    "name": "branches",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branches",
                                    "type": "String..."
                                }
                            ],
                            "text": "branches(String... branches)",
                            "html": "Specify the branches to examine for changes and to build.",
                            "firstSentenceCommentText": "Specify the branches to examine for changes and to build."
                        }
                    ]
                },
                {
                    "name": "browser",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitBrowserClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "browser(Closure gitBrowserClosure)",
                            "availableSince": "1.26",
                            "html": "Adds a repository browser for browsing the details of changes in an external system.\r\n     ",
                            "firstSentenceCommentText": "Adds a repository browser for browsing the details of changes in an external system.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.GitBrowserContext"
                        }
                    ]
                },
                {
                    "name": "clean",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clean",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "clean(boolean clean = true)",
                            "html": "Clean up the workspace before every checkout by deleting all untracked files and directories, including those\r\n which are specified in <TT>.gitignore</TT>. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Clean up the workspace before every checkout by deleting all untracked files and directories, including those\r\n which are specified in .gitignore. "
                        }
                    ]
                },
                {
                    "name": "cloneTimeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cloneTimeout",
                                    "type": "int"
                                }
                            ],
                            "text": "cloneTimeout(int cloneTimeout)",
                            "availableSince": "1.28",
                            "html": "Specify a timeout (in minutes) for clone and fetch operations.\r\n     ",
                            "firstSentenceCommentText": "Specify a timeout (in minutes) for clone and fetch operations."
                        }
                    ],
                    "plugin": "git"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML. The <TT>scm</TT> node is passed into the configure block.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "createTag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "createTag",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "createTag(boolean createTag = true)",
                            "html": "Create a tag in the workspace for every build to unambiguously mark the commit that was built.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Create a tag in the workspace for every build to unambiguously mark the commit that was built.\r\n "
                        }
                    ]
                },
                {
                    "name": "ignoreNotifyCommit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignoreNotifyCommit",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "ignoreNotifyCommit(boolean ignoreNotifyCommit = true)",
                            "availableSince": "1.33",
                            "html": "If set, the repository will be ignored when the notifyCommit-URL is accessed. Defaults to <TT>false</TT>.\r\n     ",
                            "firstSentenceCommentText": "If set, the repository will be ignored when the notifyCommit-URL is accessed. "
                        }
                    ]
                },
                {
                    "name": "localBranch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "localBranch",
                                    "type": "String"
                                }
                            ],
                            "text": "localBranch(String localBranch)",
                            "availableSince": "1.25",
                            "html": "If given, checkout the revision to build as HEAD on this branch.\r\n     ",
                            "firstSentenceCommentText": "If given, checkout the revision to build as HEAD on this branch."
                        }
                    ]
                },
                {
                    "name": "mergeOptions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remote",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "text": "mergeOptions(String remote = null, String branch)",
                            "html": "Allows to perform a merge to a particular branch before building.",
                            "firstSentenceCommentText": "Allows to perform a merge to a particular branch before building."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "gitMergeOptionsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "mergeOptions(Closure gitMergeOptionsClosure)",
                            "availableSince": "1.37",
                            "html": "Allows to perform a merge to a particular branch before building.\r\n When Git Plugin version 2.0 or later is used, this can be called multiple times to merge more than one branch.\r\n     ",
                            "firstSentenceCommentText": "Allows to perform a merge to a particular branch before building.\r\n ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.GitMergeOptionsContext"
                        }
                    ]
                },
                {
                    "name": "pruneBranches",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pruneBranches",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "pruneBranches(boolean pruneBranches = true)",
                            "html": "Prunes obsolete local branches. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Prunes obsolete local branches. "
                        }
                    ]
                },
                {
                    "name": "recursiveSubmodules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recursive",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "recursiveSubmodules(boolean recursive = true)",
                            "availableSince": "1.33",
                            "html": "Retrieve all submodules recursively. Defaults to <TT>false</TT>.\r\n     ",
                            "firstSentenceCommentText": "Retrieve all submodules recursively. "
                        }
                    ]
                },
                {
                    "name": "reference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reference",
                                    "type": "String"
                                }
                            ],
                            "text": "reference(String reference)",
                            "html": "Specify a folder containing a repository that will be used by Git as a reference during clone operations.",
                            "firstSentenceCommentText": "Specify a folder containing a repository that will be used by Git as a reference during clone operations."
                        }
                    ]
                },
                {
                    "name": "relativeTargetDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "relativeTargetDir",
                                    "type": "String"
                                }
                            ],
                            "text": "relativeTargetDir(String relativeTargetDir)",
                            "html": "Specify a local directory (relative to the workspace root) where the Git repository will be checked out.",
                            "firstSentenceCommentText": "Specify a local directory (relative to the workspace root) where the Git repository will be checked out."
                        }
                    ]
                },
                {
                    "name": "remote",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "remote(Closure remoteClosure)",
                            "html": "Adds a remote. Can be repeated to add multiple remotes.",
                            "firstSentenceCommentText": "Adds a remote. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.RemoteContext"
                        }
                    ]
                },
                {
                    "name": "remotePoll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remotePoll",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "remotePoll(boolean remotePoll = true)",
                            "html": "Uses <TT>git ls-remote</TT> polling mechanism to compare the latest built commit SHA with the remote branch\r\n without cloning a local copy of the repo. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Uses git ls-remote polling mechanism to compare the latest built commit SHA with the remote branch\r\n without cloning a local copy of the repo. "
                        }
                    ]
                },
                {
                    "name": "shallowClone",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shallowClone",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shallowClone(boolean shallowClone = true)",
                            "html": "Perform shallow clone, so that git will not download history of the project. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Perform shallow clone, so that git will not download history of the project. "
                        }
                    ]
                },
                {
                    "name": "strategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategyClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "strategy(Closure strategyClosure)",
                            "availableSince": "1.30",
                            "html": "Sets the strategy that Jenkins will use to choose what branches to build in what order.\r\n     ",
                            "firstSentenceCommentText": "Sets the strategy that Jenkins will use to choose what branches to build in what order.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.StrategyContext"
                        }
                    ]
                },
                {
                    "name": "wipeOutWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "wipeOutWorkspace",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "wipeOutWorkspace(boolean wipeOutWorkspace = true)",
                            "html": "Delete the contents of the workspace before building, ensuring a fully fresh workspace.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Delete the contents of the workspace before building, ensuring a fully fresh workspace.\r\n "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.HgContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.HgContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "text": "branch(String branch)",
                            "html": "Checkout selected branch.",
                            "firstSentenceCommentText": "Checkout selected branch."
                        }
                    ]
                },
                {
                    "name": "clean",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clean",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "clean(boolean clean = true)",
                            "html": "Do a clean checkout. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Do a clean checkout. "
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML. The <TT>scm</TT> node is passed into the configure block.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "credentials(String credentials)",
                            "html": "Use pre-defined credentials.",
                            "firstSentenceCommentText": "Use pre-defined credentials."
                        }
                    ]
                },
                {
                    "name": "disableChangeLog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableChangeLog",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disableChangeLog(boolean disableChangeLog = true)",
                            "html": "Disable the change log. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Disable the change log. "
                        }
                    ]
                },
                {
                    "name": "installation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "text": "installation(String installation)",
                            "html": "Use a specific installation of Mercurial.",
                            "firstSentenceCommentText": "Use a specific installation of Mercurial."
                        }
                    ]
                },
                {
                    "name": "modules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "modules",
                                    "type": "String..."
                                }
                            ],
                            "text": "modules(String... modules)",
                            "html": "Checkout selected modules.",
                            "firstSentenceCommentText": "Checkout selected modules."
                        }
                    ]
                },
                {
                    "name": "subdirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "subdirectory",
                                    "type": "String"
                                }
                            ],
                            "text": "subdirectory(String subdirectory)",
                            "html": "Checkout into subdirectory.",
                            "firstSentenceCommentText": "Checkout into subdirectory."
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tag",
                                    "type": "String"
                                }
                            ],
                            "text": "tag(String tag)",
                            "html": "Checkout selected tag.",
                            "firstSentenceCommentText": "Checkout selected tag."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.RTCContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.RTCContext",
            "methods": [
                {
                    "name": "buildDefinition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildDefinition",
                                    "type": "String"
                                }
                            ],
                            "text": "buildDefinition(String buildDefinition)",
                            "html": "Use a build definition for RTC integration.",
                            "firstSentenceCommentText": "Use a build definition for RTC integration."
                        }
                    ]
                },
                {
                    "name": "buildWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildWorkspace",
                                    "type": "String"
                                }
                            ],
                            "text": "buildWorkspace(String buildWorkspace)",
                            "html": "Fetch from a build workspace.",
                            "firstSentenceCommentText": "Fetch from a build workspace."
                        }
                    ]
                },
                {
                    "name": "connection",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildTool",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                },
                                {
                                    "name": "serverURI",
                                    "type": "String"
                                },
                                {
                                    "name": "timeout",
                                    "type": "int"
                                }
                            ],
                            "text": "connection(String buildTool, String credentials, String serverURI, int timeout)",
                            "html": "Overrides the global RTC repository connection.",
                            "firstSentenceCommentText": "Overrides the global RTC repository connection."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.SvnLocationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.SvnLocationContext",
            "methods": [
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "credentials(String credentials)",
                            "html": "Sets credentials for authentication with the remote server.",
                            "firstSentenceCommentText": "Sets credentials for authentication with the remote server."
                        }
                    ],
                    "plugin": "subversion"
                },
                {
                    "name": "depth",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "depth",
                                    "type": "javaposse.jobdsl.dsl.helpers.scm.SvnDepth"
                                }
                            ],
                            "text": "depth(javaposse.jobdsl.dsl.helpers.scm.SvnDepth depth)",
                            "html": "Specifies the depth for sparse checkouts.\r\n\r\n Valid values are <TT>SvnDepth.INFINITY</TT> (default), <TT>SvnDepth.EMPTY</TT>, <TT>SvnDepth.IMMEDIATES</TT>,\r\n <TT>SvnDepth.FILES</TT> and <TT>SvnDepth.AS_IT_IS</TT>.",
                            "firstSentenceCommentText": "Specifies the depth for sparse checkouts."
                        }
                    ]
                },
                {
                    "name": "directory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "directory",
                                    "type": "String"
                                }
                            ],
                            "text": "directory(String directory)",
                            "html": "The directoy to checkout to. By default, files are checked out into the workspace directory.",
                            "firstSentenceCommentText": "The directoy to checkout to. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.SvnContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.SvnContext",
            "methods": [
                {
                    "name": "checkoutStrategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategy",
                                    "type": "javaposse.jobdsl.dsl.helpers.scm.SvnCheckoutStrategy"
                                }
                            ],
                            "text": "checkoutStrategy(javaposse.jobdsl.dsl.helpers.scm.SvnCheckoutStrategy strategy)",
                            "html": "The checkout strategy that should be used.  This is a global setting for all locations.\r\n\r\n Valid values are <TT>SvnCheckoutStrategy.UPDATE</TT> (default), <TT>SvnCheckoutStrategy.CHECKOUT</TT>,\r\n <TT>SvnCheckoutStrategy.UPDATE_WITH_CLEAN</TT> and <TT>SvnCheckoutStrategy.UPDATE_WITH_REVERT</TT>.\r\n     ",
                            "firstSentenceCommentText": "The checkout strategy that should be used.  "
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure closure)",
                            "html": "Sets a closure to be called when the XML node structure is created.\r\n The SVN node is passed to the closure as the first parameter.\r\n     ",
                            "firstSentenceCommentText": "Sets a closure to be called when the XML node structure is created.\r\n "
                        }
                    ]
                },
                {
                    "name": "excludedCommitMessages",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "String..."
                                }
                            ],
                            "text": "excludedCommitMessages(String... patterns)",
                            "html": "Add a list of excluded commit messages.  Each call adds to the list of excluded commit\r\n messages.\r\n     ",
                            "firstSentenceCommentText": "Add a list of excluded commit messages.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "excludedCommitMessages(Iterable<String> patterns)",
                            "html": "Add a list of excluded commit messages.  Each call adds to the list of excluded commit\r\n messages.\r\n     ",
                            "firstSentenceCommentText": "Add a list of excluded commit messages.  "
                        }
                    ]
                },
                {
                    "name": "excludedRegions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "String..."
                                }
                            ],
                            "text": "excludedRegions(String... patterns)",
                            "html": "Add a list of excluded regions.  Each call adds to the list of excluded regions.\r\n     ",
                            "firstSentenceCommentText": "Add a list of excluded regions.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "excludedRegions(Iterable<String> patterns)",
                            "html": "Add a list of excluded regions.  Each call adds to the list of excluded regions.\r\n     ",
                            "firstSentenceCommentText": "Add a list of excluded regions.  "
                        }
                    ]
                },
                {
                    "name": "excludedRevisionProperty",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "revisionProperty",
                                    "type": "String"
                                }
                            ],
                            "text": "excludedRevisionProperty(String revisionProperty)",
                            "html": "Set an excluded revision property.\r\n     ",
                            "firstSentenceCommentText": "Set an excluded revision property."
                        }
                    ]
                },
                {
                    "name": "excludedUsers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "users",
                                    "type": "String..."
                                }
                            ],
                            "text": "excludedUsers(String... users)",
                            "html": "Add a list of excluded users.  Each call adds to the list of excluded users.\r\n     ",
                            "firstSentenceCommentText": "Add a list of excluded users.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "users",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "excludedUsers(Iterable<String> users)",
                            "html": "Add a list of excluded users.  Each call adds to the list of excluded users.\r\n     ",
                            "firstSentenceCommentText": "Add a list of excluded users.  "
                        }
                    ]
                },
                {
                    "name": "includedRegions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "String..."
                                }
                            ],
                            "text": "includedRegions(String... patterns)",
                            "html": "Add a list of included regions.  Each call adds to the list of included regions.\r\n     ",
                            "firstSentenceCommentText": "Add a list of included regions.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "includedRegions(Iterable<String> patterns)",
                            "html": "Add a list of included regions.  Each call adds to the list of included regions.\r\n     ",
                            "firstSentenceCommentText": "Add a list of included regions.  "
                        }
                    ]
                },
                {
                    "name": "location",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "svnUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "svnLocationClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "location(String svnUrl, Closure svnLocationClosure = null)",
                            "html": "At least one location must be specified. Additional locations can be specified by calling <a href='#location'>location</a>\r\n multiple times.\r\n     ",
                            "firstSentenceCommentText": "At least one location must be specified. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.SvnLocationContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.ScmContext": {
            "type": "javaposse.jobdsl.dsl.helpers.ScmContext",
            "methods": [
                {
                    "name": "baseClearCase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "baseClearCase(Closure closure = null)",
                            "availableSince": "1.24",
                            "html": "Adds a ClearCase SCM source.\r\n     ",
                            "firstSentenceCommentText": "Adds a ClearCase SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.ClearCaseContext"
                        }
                    ],
                    "plugin": "clearcase",
                    "examples": "// defining config spec and load rules\r\njob('example-1') {\r\n    scm {\r\n        baseClearCase {\r\n            configSpec('''element * CHECKEDOUT\r\nelement * /main/LATEST''')\r\n            loadRules('/vob/some_vob')\r\n        }\r\n    }\r\n}\r\n\r\n// defining config spec and load rules with multiple methods calls\r\njob('example-1') {\r\n    scm {\r\n        baseClearCase {\r\n            configSpec('element * CHECKEDOUT')\r\n            configSpec('element * /main/LATEST')\r\n            loadRules('/vob/some_vob')\r\n            loadRules('/vob/another_vob')\r\n        }\r\n    }\r\n}\r\n\r\n// defining config spec and load rules using varargs parameters\r\njob('example-1') {\r\n    scm {\r\n        baseClearCase {\r\n            configSpec('element * CHECKEDOUT', 'element * /main/LATEST')\r\n            loadRules('/vob/some_vob', '/vob/another_vob')\r\n        }\r\n    }\r\n}\r\n\r\n// reading the config spec from a file in the seed job's workspace\r\njob('example-1') {\r\n    scm {\r\n        baseClearCase {\r\n            configSpec(readFileFromWorkspace('configSpec.txt'))\r\n            loadRules('/vob/some_vob')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "cloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parentProject",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                }
                            ],
                            "text": "cloneWorkspace(String parentProject, String criteria = 'Any')",
                            "availableSince": "1.16",
                            "html": "Add a SCM source which copies the workspace of another project.\r\n\r\n Valid criteria are <TT>'Any'</TT>, <TT>'Not Failed'</TT> and <TT>'Successful'</TT>.\r\n     ",
                            "firstSentenceCommentText": "Add a SCM source which copies the workspace of another project."
                        }
                    ],
                    "plugin": "clone-workspace-scm"
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "git(Closure gitClosure)",
                            "availableSince": "1.20",
                            "html": "Adds a Git SCM source.\r\n     ",
                            "firstSentenceCommentText": "Adds a Git SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.GitContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "git(String url, Closure configure = null)",
                            "html": "Adds a Git SCM source.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\r\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Git SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "git(String url, String branch, Closure configure = null)",
                            "html": "Adds a Git SCM source.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\r\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Git SCM source."
                        }
                    ],
                    "plugin": "git",
                    "examples": "// checkout repo1 to a sub directory and clean the workspace after checkout\r\njob('example-1') {\r\n    scm {\r\n        git {\r\n            remote {\r\n                name('remoteB')\r\n                url('git@server:account/repo1.git')\r\n            }\r\n            clean()\r\n            relativeTargetDir('repo1')\r\n        }\r\n    }\r\n}\r\n\r\n// add the upstream repository as second remote and\r\n// merge branch featureA with master\r\njob('example-2') {\r\n    scm {\r\n        git {\r\n            remote {\r\n                name('origin')\r\n                url('git@serverA:account/repo1.git')\r\n            }\r\n            remote {\r\n                name('upstream')\r\n                url('git@serverB:account/repo1.git')\r\n            }\r\n            branch('featureA')\r\n            mergeOptions('upstream', 'master')\r\n        }\r\n    }\r\n}\r\n\r\n// add user name and email options\r\njob('example-3') {\r\n    scm {\r\n        git('git@git') { node -> // is hudson.plugins.git.GitSCM\r\n            node / gitConfigName('DSL User')\r\n            node / gitConfigEmail('me@me.com')\r\n        }\r\n    }\r\n}\r\n\r\n// add Git SCM for a GitHub repository with authentication\r\njob('example-4') {\r\n    scm {\r\n        git {\r\n            remote {\r\n                github('account/repo', 'ssh')\r\n                credentials('github-ci-key')\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "github",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ownerAndProject",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'https'"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "github(String ownerAndProject, String branch = null, String protocol = 'https', Closure closure)",
                            "availableSince": "1.15\r\n",
                            "html": "Adds a Git SCM source for a GitHub repository.\r\n     ",
                            "firstSentenceCommentText": "Adds a Git SCM source for a GitHub repository."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "ownerAndProject",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'https'"
                                },
                                {
                                    "name": "host",
                                    "type": "String",
                                    "defaultValue": "'github.com'"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "github(String ownerAndProject, String branch = null, String protocol = 'https', String host = 'github.com', Closure closure = null)",
                            "availableSince": "1.15\r\n",
                            "html": "Adds a Git SCM source for a GitHub repository.\r\n\r\n The Git URL will be derived from the <TT>ownerAndProject</TT>, <TT>protocol</TT> and <TT>host</TT> parameters.\r\n Supported protocols are <TT>'https'</TT>, <TT>'ssh'</TT> and <TT>'git'</TT>.\r\n\r\n This will also configure the source browser to point to GitHub and set the GitHub project URL.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\r\n node is passed into the configure block.\r\n     ",
                            "firstSentenceCommentText": "Adds a Git SCM source for a GitHub repository."
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "hg",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "hg(String url, String branch = null, Closure configure = null)",
                            "html": "Adds a Mercurial SCM source.",
                            "firstSentenceCommentText": "Adds a Mercurial SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "hgClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "hg(String url, Closure hgClosure)",
                            "availableSince": "1.33",
                            "html": "Adds a Mercurial SCM source.\r\n     ",
                            "firstSentenceCommentText": "Adds a Mercurial SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.HgContext"
                        }
                    ],
                    "plugin": "mercurial",
                    "examples": "// checkout feature_branch1\r\njob('example-1') {\r\n    scm {\r\n        hg('http://scm', 'feature_branch1')\r\n    }\r\n}\r\n\r\n// clean checkout module1 from feature_branch1\r\njob('example-2') {\r\n    scm {\r\n        hg('http://scm') {\r\n            branch('feature_branch1')\r\n            modules('module1')\r\n            clean(true)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "p4",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewspec",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "p4(String viewspec, Closure configure = null)",
                            "html": "Add Perforce SCM source.\r\n     ",
                            "firstSentenceCommentText": "Add Perforce SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "viewspec",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "p4(String viewspec, String user, Closure configure = null)",
                            "html": "Add Perforce SCM source.\r\n     ",
                            "firstSentenceCommentText": "Add Perforce SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "viewspec",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "p4(String viewspec, String user, String password, Closure configure = null)",
                            "html": "Add Perforce SCM source.\r\n\r\n The client name will be set to <TT>builds-${JOB_NAME</TT>}.\r\n\r\n For security reasons, do not use a hard-coded password. See\r\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\r\n details about handling credentials in DSL scripts.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\r\n node is passed into the configure block.\r\n\r\n The configure block must be used to set additional options.\r\n     ",
                            "firstSentenceCommentText": "Add Perforce SCM source."
                        }
                    ],
                    "plugin": "perforce",
                    "examples": "p4('//depot/Tools/build') { node ->\r\n    node / p4Port('perforce:1666')\r\n    node / p4Tool('/usr/bin/p4')\r\n    node / exposeP4Passwd('false')\r\n    node / pollOnlyOnMaster('true')\r\n}\r\n"
                },
                {
                    "name": "rtc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "rtc(Closure closure)",
                            "availableSince": "1.28",
                            "html": "Adds a Team Concert SCM source.\r\n     ",
                            "firstSentenceCommentText": "Adds a Team Concert SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.RTCContext"
                        }
                    ],
                    "plugin": "teamconcert",
                    "examples": "job('example-1') {\r\n    scm {\r\n        rtc {\r\n            buildDefinition('buildDefinitionInRTC')\r\n        }\r\n    }\r\n}\r\n\r\njob('example-2') {\r\n    scm {\r\n        rtc {\r\n            buildWorkspace('some-workspace')\r\n            connection('my-build-tool', 'build-user', 'https://localhost:9444/ccm', 60)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "svn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "svnUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "svn(String svnUrl, Closure configure = null)",
                            "html": "Adds a Subversion SCM source.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\r\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Subversion SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "svnUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "localDir",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "svn(String svnUrl, String localDir, Closure configure = null)",
                            "html": "Adds a Subversion SCM source.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\r\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Subversion SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "svnClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "svn(Closure svnClosure)",
                            "availableSince": "1.30",
                            "html": "Adds a Subversion SCM source.\r\n     ",
                            "firstSentenceCommentText": "Adds a Subversion SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.SvnContext"
                        }
                    ],
                    "plugin": "subversion",
                    "examples": "// checkout a project into the workspace directory\r\njob('example-1') {\r\n    scm {\r\n        svn('https://svn.mydomain.com/repo/project1/trunk')\r\n    }\r\n}\r\n\r\n// checkout multiple projects\r\njob('example-2') {\r\n    scm {\r\n        svn {\r\n            location('https://svn.mydomain.com/repo/project1/trunk')\r\n            location('https://svn.mydomain.com/repo/project2/trunk') {\r\n                directory('proj2')\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// do a sparse checkout\r\njob('example-3') {\r\n    scm {\r\n        svn {\r\n            location('https://svn.mydomain.com/repo/project/trunk') {\r\n                directory('proj2')\r\n                depth(SvnDepth.EMPTY)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// using a different checkout strategy\r\njob('example-4') {\r\n    scm {\r\n        svn {\r\n            location('https://svn.mydomain.com/repo/project1/trunk')\r\n            checkoutStrategy(SvnCheckoutStrategy.CHECKOUT)\r\n        }\r\n    }\r\n}\r\n\r\n// configure excluded and included regions\r\njob('example-5') {\r\n    scm {\r\n        svn {\r\n            location('https://svn.mydomain.com/repo/project1/trunk')\r\n            excludedRegions('/project1/trunk/.*\\\\.html')\r\n            includedRegions('/project1/trunk/src/.*\\\\.java', '/project1/trunk/src/.*\\\\.groovy')\r\n        }\r\n    }\r\n}\r\n\r\n// configure excluded users, commit messages, and an excluded revision property\r\njob('example-6') {\r\n    scm {\r\n        svn {\r\n            location('https://svn.mydomain.com/repo/project1/trunk')\r\n            excludedUsers('jsmith')\r\n            excludedUsers('jdoe', 'sally')\r\n            excludedCommitMessages('[Bb][Aa][Dd]')\r\n            excludedRevisionProperty('mycompany:dontbuild')\r\n        }\r\n    }\r\n}\r\n\r\n// configure repository browser\r\njob('example-7') {\r\n    scm {\r\n        svn {\r\n            location('https://svn.mydomain.com/repo/project1/trunk')\r\n            configure { scmNode ->\r\n                scmNode / browser(class: 'hudson.scm.browsers.FishEyeSVN') {\r\n                    url('http://mycompany.com/fisheye/repo_name')\r\n                    rootModule('my_root_module')\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.NotificationEndpointContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationEndpointContext",
            "methods": [
                {
                    "name": "event",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "event",
                                    "type": "String"
                                }
                            ],
                            "text": "event(String event)",
                            "html": "Sets the job lifecycle event triggering notification.\r\n\r\n Possible values are <TT>'all'</TT>, <TT>'started'</TT>, <TT>'completed'</TT> and <TT>'finalized'</TT>.",
                            "firstSentenceCommentText": "Sets the job lifecycle event triggering notification."
                        }
                    ],
                    "plugin": "notification"
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeout",
                                    "type": "int"
                                }
                            ],
                            "text": "timeout(int timeout)",
                            "html": "Sets a timeout in milliseconds.",
                            "firstSentenceCommentText": "Sets a timeout in milliseconds."
                        }
                    ],
                    "plugin": "notification"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext",
            "methods": [
                {
                    "name": "endpoint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'HTTP'"
                                },
                                {
                                    "name": "format",
                                    "type": "String",
                                    "defaultValue": "'JSON'"
                                }
                            ],
                            "text": "endpoint(String url, String protocol = 'HTTP', String format = 'JSON')",
                            "html": "Adds an endpoint which will receive notifications about the job status.\r\n     ",
                            "firstSentenceCommentText": "Adds an endpoint which will receive notifications about the job status."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'HTTP'"
                                },
                                {
                                    "name": "format",
                                    "type": "String",
                                    "defaultValue": "'JSON'"
                                },
                                {
                                    "name": "notificationEndpointClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "endpoint(String url, String protocol = 'HTTP', String format = 'JSON', Closure notificationEndpointClosure)",
                            "html": "Adds an endpoint which will receive notifications about the job status.\r\n\r\n Possible values for the protocol argument are <TT>'HTTP'</TT>, <TT>'TCP'</TT>, and <TT>'UDP'</TT>.\r\n Possible values for the format argument are <TT>'JSON'</TT> and <TT>'XML'</TT>.",
                            "firstSentenceCommentText": "Adds an endpoint which will receive notifications about the job status.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationEndpointContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext",
            "methods": [
                {
                    "name": "fallbackScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fallbackScript",
                                    "type": "String"
                                }
                            ],
                            "text": "fallbackScript(String fallbackScript)",
                            "html": "Provides alternate parameter value options in case the main script fails.",
                            "firstSentenceCommentText": "Provides alternate parameter value options in case the main script fails."
                        }
                    ]
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "script(String script)",
                            "html": "Sets the script that will dynamically generate the parameter value options.",
                            "firstSentenceCommentText": "Sets the script that will dynamically generate the parameter value options."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext",
            "methods": [
                {
                    "name": "parameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "parameter(String name, String value)",
                            "html": "Adds parameter values for the Scriptler script.",
                            "firstSentenceCommentText": "Adds parameter values for the Scriptler script."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceContext",
            "methods": [
                {
                    "name": "choiceType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "choiceType",
                                    "type": "String"
                                }
                            ],
                            "text": "choiceType(String choiceType)",
                            "html": "Selects one of four different rendering options for the option values.\r\n\r\n Must be one of <TT>'SINGLE_SELECT'</TT> (default), <TT>'MULTI_SELECT'</TT>, <TT>'CHECKBOX'</TT> or <TT>'RADIO'</TT>.",
                            "firstSentenceCommentText": "Selects one of four different rendering options for the option values."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "filterable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterable(boolean filterable = true)",
                            "html": "If set, provides a text box filter in the UI control where a text filter can be typed.",
                            "firstSentenceCommentText": "If set, provides a text box filter in the UI control where a text filter can be typed."
                        }
                    ]
                },
                {
                    "name": "groovyScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "groovyScript(Closure closure)",
                            "html": "Use a Groovy script to generate value options.",
                            "firstSentenceCommentText": "Use a Groovy script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext"
                        }
                    ]
                },
                {
                    "name": "scriptlerScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "scriptlerScript(String scriptId, Closure closure = null)",
                            "html": "Use a Scriptler script to generate value options.",
                            "firstSentenceCommentText": "Use a Scriptler script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveContext",
            "methods": [
                {
                    "name": "choiceType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "choiceType",
                                    "type": "String"
                                }
                            ],
                            "text": "choiceType(String choiceType)",
                            "html": "Selects one of four different rendering options for the option values.\r\n\r\n Must be one of <TT>'SINGLE_SELECT'</TT> (default), <TT>'MULTI_SELECT'</TT>, <TT>'CHECKBOX'</TT> or <TT>'RADIO'</TT>.",
                            "firstSentenceCommentText": "Selects one of four different rendering options for the option values."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "filterable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterable(boolean filterable = true)",
                            "html": "If set, provides a text box filter in the UI control where a text filter can be typed.",
                            "firstSentenceCommentText": "If set, provides a text box filter in the UI control where a text filter can be typed."
                        }
                    ]
                },
                {
                    "name": "groovyScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "groovyScript(Closure closure)",
                            "html": "Use a Groovy script to generate value options.",
                            "firstSentenceCommentText": "Use a Groovy script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext"
                        }
                    ]
                },
                {
                    "name": "referencedParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "referencedParameters",
                                    "type": "String"
                                }
                            ],
                            "text": "referencedParameter(String referencedParameters)",
                            "html": "Specifies a list of job parameters that trigger an auto-refresh.",
                            "firstSentenceCommentText": "Specifies a list of job parameters that trigger an auto-refresh."
                        }
                    ]
                },
                {
                    "name": "scriptlerScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "scriptlerScript(String scriptId, Closure closure = null)",
                            "html": "Use a Scriptler script to generate value options.",
                            "firstSentenceCommentText": "Use a Scriptler script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveReferenceContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveReferenceContext",
            "methods": [
                {
                    "name": "choiceType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "choiceType",
                                    "type": "String"
                                }
                            ],
                            "text": "choiceType(String choiceType)",
                            "html": "Selects one of four different rendering options for the option values.\r\n\r\n Must be one of <TT>'TEXT_BOX'</TT> (default), <TT>'FORMATTED_HTML'</TT>, <TT>'FORMATTED_HIDDEN_HTML'</TT>,\r\n <TT>'ORDERED_LIST'</TT> or <TT>'UNORDERED_LIST'</TT>.",
                            "firstSentenceCommentText": "Selects one of four different rendering options for the option values."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "groovyScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "groovyScript(Closure closure)",
                            "html": "Use a Groovy script to generate value options.",
                            "firstSentenceCommentText": "Use a Groovy script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext"
                        }
                    ]
                },
                {
                    "name": "omitValueField",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "omitValueField",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "omitValueField(boolean omitValueField = true)",
                            "html": "Omits the hidden value field.",
                            "firstSentenceCommentText": "Omits the hidden value field."
                        }
                    ]
                },
                {
                    "name": "referencedParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "referencedParameters",
                                    "type": "String"
                                }
                            ],
                            "text": "referencedParameter(String referencedParameters)",
                            "html": "Specifies a list of job parameters that trigger an auto-refresh.",
                            "firstSentenceCommentText": "Specifies a list of job parameters that trigger an auto-refresh."
                        }
                    ]
                },
                {
                    "name": "scriptlerScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "scriptlerScript(String scriptId, Closure closure = null)",
                            "html": "Use a Scriptler script to generate value options.",
                            "firstSentenceCommentText": "Use a Scriptler script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.CredentialsParameterContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.CredentialsParameterContext",
            "methods": [
                {
                    "name": "defaultValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultValue",
                                    "type": "String"
                                }
                            ],
                            "text": "defaultValue(String defaultValue)",
                            "html": "Sets the default value for the parameter.",
                            "firstSentenceCommentText": "Sets the default value for the parameter."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "required",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "required",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "required(boolean required = true)",
                            "html": "If set, a value must be selected.",
                            "firstSentenceCommentText": "If set, a value must be selected."
                        }
                    ]
                },
                {
                    "name": "type",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": "String"
                                }
                            ],
                            "text": "type(String type)",
                            "html": "Specifies the type of credentials which should be selectable by the parameter.\r\n\r\n Must be a fully-qualified Java class name of a credentials type. Possible values include\r\n <TT>'com.cloudbees.plugins.credentials.common.StandardCredentials'</TT> (default, allows any type to be chosen),\r\n <TT>'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl'</TT>, or\r\n <TT>'com.cloudbees.plugins.credentials.impl.CertificateCredentialsImpl'</TT>. Additional credentials types are\r\n provided by other plugins, e.g.\r\n <TT>'com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey'</TT> is provided by the\r\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/SSH+Credentials+Plugin\">SSH Credentials Plugin</a> and\r\n <TT>'org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl'</TT> and\r\n <TT>'org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl'</TT> are provided by the\r\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Plain+Credentials+Plugin\">Plain Credentials Plugin</a>.",
                            "firstSentenceCommentText": "Specifies the type of credentials which should be selectable by the parameter."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.GitParamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.GitParamContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "text": "branch(String branch)",
                            "html": "Set the name of branch to look in.",
                            "firstSentenceCommentText": "Set the name of branch to look in."
                        }
                    ]
                },
                {
                    "name": "defaultValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultValue",
                                    "type": "String"
                                }
                            ],
                            "text": "defaultValue(String defaultValue)",
                            "html": "Sets a default value for the parameter.",
                            "firstSentenceCommentText": "Sets a default value for the parameter."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "sortMode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sortMode",
                                    "type": "String"
                                }
                            ],
                            "text": "sortMode(String sortMode)",
                            "html": "Specifies the sort order for tags.\r\n\r\n Must be one of <TT>'NONE'</TT> (default), <TT>'ASCENDING_SMART'</TT>, <TT>'DESCENDING_SMART'</TT>,\r\n <TT>'ASCENDING'</TT> or <TT>'DESCENDING'</TT>.",
                            "firstSentenceCommentText": "Specifies the sort order for tags."
                        }
                    ]
                },
                {
                    "name": "tagFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tagFilter",
                                    "type": "String"
                                }
                            ],
                            "text": "tagFilter(String tagFilter)",
                            "html": "Specifies a filter for tags.",
                            "firstSentenceCommentText": "Specifies a filter for tags."
                        }
                    ]
                },
                {
                    "name": "type",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": "String"
                                }
                            ],
                            "text": "type(String type)",
                            "html": "Specifies the type of selectable values.\r\n\r\n Must be one of <TT>'TAG'</TT> (default), <TT>'BRANCH'</TT>, <TT>'BRANCH_TAG'</TT> or <TT>'REVISION'</TT>.",
                            "firstSentenceCommentText": "Specifies the type of selectable values."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.LabelParamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.LabelParamContext",
            "methods": [
                {
                    "name": "allNodes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "trigger",
                                    "type": "String",
                                    "defaultValue": "'allCases'"
                                },
                                {
                                    "name": "eligibility",
                                    "type": "String",
                                    "defaultValue": "'AllNodeEligibility'"
                                }
                            ],
                            "text": "allNodes(String trigger = 'allCases', String eligibility = 'AllNodeEligibility')",
                            "html": "Defines in which case a build on the next node should be triggered.\r\n\r\n The <TT>trigger</TT> argument defines in which case a build on the next node should be triggered, must be one of\r\n <TT>'allCases'</TT>, <TT>'success'</TT> or <TT>'unstable'</TT>.\r\n\r\n The <TT>eligibility</TT> argument defines how selected offline nodes should be handled, must be one of\r\n <TT>'AllNodeEligibility'</TT>, <TT>'IgnoreOfflineNodeEligibility'</TT> or\r\n <TT>'IgnoreTempOfflineNodeEligibility'</TT>.",
                            "firstSentenceCommentText": "Defines in which case a build on the next node should be triggered."
                        }
                    ]
                },
                {
                    "name": "defaultValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultValue",
                                    "type": "String"
                                }
                            ],
                            "text": "defaultValue(String defaultValue)",
                            "html": "Sets the default value for the parameter.",
                            "firstSentenceCommentText": "Sets the default value for the parameter."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.NodeParamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.NodeParamContext",
            "methods": [
                {
                    "name": "allowedNodes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodes",
                                    "type": "List<String>"
                                }
                            ],
                            "text": "allowedNodes(List<String> nodes)",
                            "html": "Specifies the nodes available for selection when job gets triggered manually. Defaults to all nodes if omitted.",
                            "firstSentenceCommentText": "Specifies the nodes available for selection when job gets triggered manually. "
                        }
                    ]
                },
                {
                    "name": "defaultNodes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodes",
                                    "type": "List<String>"
                                }
                            ],
                            "text": "defaultNodes(List<String> nodes)",
                            "html": "Specifies the nodes used when job gets triggered by anything else then manually. Empty by default.",
                            "firstSentenceCommentText": "Specifies the nodes used when job gets triggered by anything else then manually. "
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "eligibility",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "eligibility",
                                    "type": "String"
                                }
                            ],
                            "text": "eligibility(String eligibility)",
                            "html": "Defines how selected offline nodes should be handled.\r\n\r\n Must be one of <TT>'AllNodeEligibility'</TT> (default), <TT>'IgnoreOfflineNodeEligibility'</TT> or\r\n <TT>'IgnoreTempOfflineNodeEligibility'</TT>.",
                            "firstSentenceCommentText": "Defines how selected offline nodes should be handled."
                        }
                    ]
                },
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "trigger",
                                    "type": "String"
                                }
                            ],
                            "text": "trigger(String trigger)",
                            "html": "Defines in which case a build on the next node should be triggered.\r\n\r\n Must be one of <TT>'allCases'</TT>, <TT>'success'</TT>, <TT>'unstable'</TT>,\r\n <TT>'allowMultiSelectionForConcurrentBuilds'</TT> or <TT>'multiSelectionDisallowed'</TT> (default).",
                            "firstSentenceCommentText": "Defines in which case a build on the next node should be triggered."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.BuildParametersContext": {
            "type": "javaposse.jobdsl.dsl.helpers.BuildParametersContext",
            "methods": [
                {
                    "name": "activeChoiceParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "activeChoiceParam(String parameterName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\r\n script or a script from the Scriptler catalog.\r\n     ",
                            "firstSentenceCommentText": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\r\n script or a script from the Scriptler catalog.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceContext"
                        }
                    ],
                    "plugin": "uno-choice",
                    "examples": "job('example-1') {\r\n    parameters {\r\n        activeChoiceParam('CHOICE-1') {\r\n            description('Allows user choose from multiple choices')\r\n            filterable()\r\n            choiceType('SINGLE_SELECT')\r\n            groovyScript {\r\n                script('[\"choice1\", \"choice2\"]')\r\n                fallbackScript('\"fallback choice\"')\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\njob('example-2') {\r\n    parameters {\r\n        activeChoiceParam('CHOICE-1') {\r\n            description('Allows user choose from multiple choices')\r\n            filterable()\r\n            choiceType('SINGLE_SELECT')\r\n            scriptlerScript('scriptler-script1.groovy') {\r\n                parameter('param1', 'value1')\r\n                parameter('param2', 'value2')\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "activeChoiceReactiveParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "activeChoiceReactiveParam(String parameterName, Closure closure = null)",
                            "availableSince": "1.38",
                            "html": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\r\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\r\n controls change.\r\n     ",
                            "firstSentenceCommentText": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\r\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\r\n controls change.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveContext"
                        }
                    ],
                    "plugin": "uno-choice",
                    "examples": "job('example-1') {\r\n    parameters {\r\n        activeChoiceReactiveParam('CHOICE-1') {\r\n            description('Allows user choose from multiple choices')\r\n            filterable()\r\n            choiceType('SINGLE_SELECT')\r\n            groovyScript {\r\n                script('[\"choice1\", \"choice2\"]')\r\n                fallbackScript('\"fallback choice\"')\r\n            }\r\n            referencedParameter('BOOLEAN-PARAM-1')\r\n            referencedParameter('BOOLEAN-PARAM-2')\r\n        }\r\n    }\r\n}\r\n\r\njob('example-2') {\r\n    parameters {\r\n        activeChoiceReactiveParam('CHOICE-1') {\r\n            scriptlerScript('scriptler-script1.groovy') {\r\n                parameter('param1', 'value1')\r\n                parameter('param2', 'value2')\r\n            }\r\n            referencedParameter('BOOLEAN-PARAM-1')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "activeChoiceReactiveReferenceParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "activeChoiceReactiveReferenceParam(String parameterName, Closure closure = null)",
                            "availableSince": "1.38",
                            "html": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\r\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\r\n controls change.\r\n     ",
                            "firstSentenceCommentText": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\r\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\r\n controls change.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveReferenceContext"
                        }
                    ],
                    "plugin": "uno-choice",
                    "examples": "job('example-1') {\r\n    parameters {\r\n        activeChoiceReactiveReferenceParam('CHOICE-1') {\r\n            description('Allows user choose from multiple choices')\r\n            omitValueField()\r\n            choiceType('FORMATTED_HIDDEN_HTML')\r\n            groovyScript {\r\n                script('[\"choice1\", \"choice2\"]')\r\n                fallbackScript('\"fallback choice\"')\r\n            }\r\n            referencedParameter('BOOLEAN-PARAM-1')\r\n            referencedParameter('BOOLEAN-PARAM-2')\r\n        }\r\n    }\r\n}\r\n\r\njob('example-2') {\r\n    parameters {\r\n        activeChoiceReactiveReferenceParam('CHOICE-1') {\r\n            scriptlerScript('scriptler-script1.groovy') {\r\n                parameter('param1', 'value1')\r\n                parameter('param2', 'value2')\r\n            }\r\n            referencedParameter('BOOLEAN-PARAM-1')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "booleanParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "booleanParam(String parameterName, boolean defaultValue = false, String description = null)",
                            "html": "Defines a simple boolean parameter.",
                            "firstSentenceCommentText": "Defines a simple boolean parameter."
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('RUN_TESTS', true, 'uncheck to disable tests')\r\n    }\r\n}"
                },
                {
                    "name": "choiceParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "options",
                                    "type": "List<String>"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "choiceParam(String parameterName, List<String> options, String description = null)",
                            "html": "Defines a simple string parameter, which can be selected from a list.",
                            "firstSentenceCommentText": "Defines a simple string parameter, which can be selected from a list."
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        choiceParam('myParameterName', ['option 1 (default)', 'option 2', 'option 3'], 'my description')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "credentialsParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "credentialsParam(String paramName, Closure closure = null)",
                            "availableSince": "1.38",
                            "html": "Defines a credentials parameter. The string value will be the UUID of the credential.\r\n     ",
                            "firstSentenceCommentText": "Defines a credentials parameter. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.CredentialsParameterContext"
                        }
                    ],
                    "plugin": "credentials",
                    "examples": "job('example') {\r\n    parameters {\r\n        credentialsParam('DEPLOY_KEY') {\r\n            type('com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey')\r\n            required()\r\n            defaultValue('ssh-key-staging')\r\n            description('SSH Key for deploying build artifacts')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "fileParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileLocation",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "fileParam(String fileLocation, String description = null)",
                            "html": "Defines a parameters that accepts a file submission.",
                            "firstSentenceCommentText": "Defines a parameters that accepts a file submission."
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        fileParam('test/upload.zip', 'my description')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "gitParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "gitParam(String parameterName, Closure closure = null)",
                            "availableSince": "1.31",
                            "html": "Defines a parameter that allows select a Git tag (or revision number).\r\n     ",
                            "firstSentenceCommentText": "Defines a parameter that allows select a Git tag (or revision number).",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.GitParamContext"
                        }
                    ],
                    "plugin": "git-parameter",
                    "examples": "job('example') {\r\n    parameters {\r\n        gitParam('sha') {\r\n            description('Revision commit SHA')\r\n            type('REVISION')\r\n            branch('master')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "labelParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "labelParamClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "labelParam(String parameterName, Closure labelParamClosure = null)",
                            "availableSince": "1.30",
                            "html": "Defines a parameter to select a label used to identify/restrict the node where this job should run on.\r\n     ",
                            "firstSentenceCommentText": "Defines a parameter to select a label used to identify/restrict the node where this job should run on.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.LabelParamContext"
                        }
                    ],
                    "plugin": "nodelabelparameter",
                    "examples": "job('example-1') {\r\n    parameters {\r\n        labelParam('MY_LABEL')\r\n    }\r\n}\r\n\r\n// runs on all nodes which are labeled with \"linux\" and are online\r\njob('example-2') {\r\n    parameters {\r\n        labelParam('MY_LABEL') {\r\n            defaultValue('linux')\r\n            description('Select nodes')\r\n            allNodes('allCases', 'IgnoreOfflineNodeEligibility')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "listTagsParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "scmUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "tagFilterRegex",
                                    "type": "String"
                                },
                                {
                                    "name": "sortNewestFirst",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sortZtoA",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "maxTagsToDisplay",
                                    "type": "String",
                                    "defaultValue": "'all'"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "listTagsParam(String parameterName, String scmUrl, String tagFilterRegex, boolean sortNewestFirst = false, boolean sortZtoA = false, String maxTagsToDisplay = 'all', String defaultValue = null, String description = null)",
                            "html": "Defines a parameter that allows to select a Subversion tag from which to create the working copy for the project.",
                            "firstSentenceCommentText": "Defines a parameter that allows to select a Subversion tag from which to create the working copy for the project."
                        }
                    ],
                    "plugin": "subversion",
                    "examples": "job('example') {\r\n    parameters {\r\n        listTagsParam('myParameterName', \"http://kenai.com/svn/myProject/tags\", /^mytagsfilterregex/, true, true)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "nodeParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeParamClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "nodeParam(String parameterName, Closure nodeParamClosure = null)",
                            "availableSince": "1.26",
                            "html": "Defines a parameter to select a list of nodes where the job could potentially be executed on.\r\n     ",
                            "firstSentenceCommentText": "Defines a parameter to select a list of nodes where the job could potentially be executed on.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.NodeParamContext"
                        }
                    ],
                    "plugin": "nodelabelparameter",
                    "examples": "// allows to select a single node from all nodes available\r\njob('example-1') {\r\n    parameters {\r\n        nodeParam('TEST_HOST')\r\n    }\r\n}\r\n\r\n// runs on node1 by default and can be run on node1, node2 or node3 when triggered manually\r\njob('example-2') {\r\n    parameters {\r\n        nodeParam('TEST_HOST') {\r\n            description('select test host')\r\n            defaultNodes(['node1'])\r\n            allowedNodes(['node1', 'node2', 'node3'])\r\n            trigger('multiSelectionDisallowed')\r\n            eligibility('IgnoreOfflineNodeEligibility')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "runParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "jobToRun",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "filter",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "runParam(String parameterName, String jobToRun, String description = null, String filter = null)",
                            "html": "Defines a run parameter, where users can pick a single run of a certain project.",
                            "firstSentenceCommentText": "Defines a run parameter, where users can pick a single run of a certain project."
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        runParam('myParameterName', 'myJobName', 'my description', 'SUCCESSFUL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "stringParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "stringParam(String parameterName, String defaultValue = null, String description = null)",
                            "html": "Defines a simple text parameter, where users can enter a string value.",
                            "firstSentenceCommentText": "Defines a simple text parameter, where users can enter a string value."
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        stringParam('myParameterName', 'my default stringParam value', 'my description')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "textParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "textParam(String parameterName, String defaultValue = null, String description = null)",
                            "html": "Defines a simple text parameter, where users can enter a multi-line string value.",
                            "firstSentenceCommentText": "Defines a simple text parameter, where users can enter a multi-line string value."
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        textParam('myParameterName', 'my default textParam value', 'my description')\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.properties.SidebarLinkContext": {
            "type": "javaposse.jobdsl.dsl.helpers.properties.SidebarLinkContext",
            "methods": [
                {
                    "name": "link",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "text",
                                    "type": "String"
                                },
                                {
                                    "name": "icon",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "link(String url, String text, String icon = null)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext",
            "methods": [
                {
                    "name": "customIcon",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "iconFileName",
                                    "type": "String"
                                }
                            ],
                            "text": "customIcon(String iconFileName)",
                            "availableSince": "1.33",
                            "html": "Allows to configure a custom icon for each job.\r\n\r\n The argument must point to a custom icon placed in the <TT>JENKINS_HOME/userContent/customIcon</TT> directory.\r\n User content can be uploaded by using\r\n javaposse.jobdsl.dsl.DslFactory#userContent(java.lang.String, java.io.InputStream).\r\n     ",
                            "firstSentenceCommentText": "Allows to configure a custom icon for each job."
                        }
                    ],
                    "plugin": "custom-job-icon",
                    "examples": "userContent('customIcon/job.png', streamFileFromWorkspace('icons/job.png'))\r\n\r\njob('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "sidebarLinks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sidebarLinkClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "sidebarLinks(Closure sidebarLinkClosure)",
                            "availableSince": "1.33",
                            "html": "Adds links in the sidebar of the project page.\r\n\r\n The icon may be a plain filename of an image in Jenkins' <TT>images/24x24</TT> directory (such as\r\n <TT>help.gif</TT>, <TT>document.gif</TT> or <TT>refresh.gif</TT>), or <TT>/userContent/filename.ext</TT> for a custom\r\n icon placed in the <TT>JENKINS_HOME/userContent</TT> directory. User content can also be uploaded by using\r\n javaposse.jobdsl.dsl.DslFactory#userContent(java.lang.String, java.io.InputStream).\r\n     ",
                            "firstSentenceCommentText": "Adds links in the sidebar of the project page.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.SidebarLinkContext"
                        }
                    ],
                    "plugin": "sidebar-link",
                    "examples": "userContent('wiki.png', streamFileFromWorkspace('images/wiki.png'))\r\n\r\njob('example') {\r\n    properties {\r\n        sidebarLinks {\r\n            // use built-in image\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n            // use uploaded image\r\n            link('https://wiki.acme.org/', 'Wiki', '/userContent/wiki.png')\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext",
            "methods": [
                {
                    "name": "canRunOnFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "canRunOnFailed",
                                    "type": "Object",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "canRunOnFailed(Object canRunOnFailed = true)"
                        }
                    ]
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeCheckstyle",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "checkstyle(boolean includeCheckstyle = true)"
                        }
                    ]
                },
                {
                    "name": "computeNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "computeNew",
                                    "type": "Object"
                                }
                            ],
                            "text": "computeNew(Object computeNew)"
                        }
                    ]
                },
                {
                    "name": "defaultEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "encoding",
                                    "type": "String"
                                }
                            ],
                            "text": "defaultEncoding(String encoding)"
                        }
                    ]
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeDry",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "dry(boolean includeDry = true)"
                        }
                    ]
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeFindbugs",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "findbugs(boolean includeFindbugs = true)"
                        }
                    ]
                },
                {
                    "name": "healthLimits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer"
                                },
                                {
                                    "name": "unHealthy",
                                    "type": "Integer"
                                }
                            ],
                            "text": "healthLimits(Integer healthy, Integer unHealthy)"
                        }
                    ]
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includePmd",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "pmd(boolean includePmd = true)"
                        }
                    ]
                },
                {
                    "name": "shouldDetectModules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDetectModules",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shouldDetectModules(boolean shouldDetectModules = true)"
                        }
                    ]
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeTasks",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "tasks(boolean includeTasks = true)"
                        }
                    ]
                },
                {
                    "name": "thresholdLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "limit",
                                    "type": "String"
                                }
                            ],
                            "text": "thresholdLimit(String limit)"
                        }
                    ]
                },
                {
                    "name": "thresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMap",
                                    "type": "Map"
                                }
                            ],
                            "text": "thresholds(Map thresholdMap)"
                        }
                    ]
                },
                {
                    "name": "useDeltaValues",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDeltaValues",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useDeltaValues(boolean useDeltaValues = true)"
                        }
                    ]
                },
                {
                    "name": "useStableBuildAsReference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useStableBuildAsReference",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useStableBuildAsReference(boolean useStableBuildAsReference = true)"
                        }
                    ]
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeWarnings",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "warnings(boolean includeWarnings = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext",
            "methods": [
                {
                    "name": "canRunOnFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "canRunOnFailed",
                                    "type": "Object",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "canRunOnFailed(Object canRunOnFailed = true)"
                        }
                    ]
                },
                {
                    "name": "computeNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "computeNew",
                                    "type": "Object"
                                }
                            ],
                            "text": "computeNew(Object computeNew)"
                        }
                    ]
                },
                {
                    "name": "defaultEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "encoding",
                                    "type": "String"
                                }
                            ],
                            "text": "defaultEncoding(String encoding)"
                        }
                    ]
                },
                {
                    "name": "healthLimits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer"
                                },
                                {
                                    "name": "unHealthy",
                                    "type": "Integer"
                                }
                            ],
                            "text": "healthLimits(Integer healthy, Integer unHealthy)"
                        }
                    ]
                },
                {
                    "name": "shouldDetectModules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDetectModules",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shouldDetectModules(boolean shouldDetectModules = true)"
                        }
                    ]
                },
                {
                    "name": "thresholdLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "limit",
                                    "type": "String"
                                }
                            ],
                            "text": "thresholdLimit(String limit)"
                        }
                    ]
                },
                {
                    "name": "thresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMap",
                                    "type": "Map"
                                }
                            ],
                            "text": "thresholds(Map thresholdMap)"
                        }
                    ]
                },
                {
                    "name": "useDeltaValues",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDeltaValues",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useDeltaValues(boolean useDeltaValues = true)"
                        }
                    ]
                },
                {
                    "name": "useStableBuildAsReference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useStableBuildAsReference",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useStableBuildAsReference(boolean useStableBuildAsReference = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext",
            "methods": [
                {
                    "name": "allowEmpty",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowEmpty",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "allowEmpty(boolean allowEmpty = true)"
                        }
                    ]
                },
                {
                    "name": "defaultExcludes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultExcludes",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "defaultExcludes(boolean defaultExcludes = true)",
                            "availableSince": "1.33"
                        }
                    ]
                },
                {
                    "name": "exclude",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                }
                            ],
                            "text": "exclude(String glob)"
                        }
                    ]
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fingerprint",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "fingerprint(boolean fingerprint = true)",
                            "availableSince": "1.33"
                        }
                    ]
                },
                {
                    "name": "latestOnly",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "latestOnly",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "latestOnly(boolean latestOnly = true)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "onlyIfSuccessful",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyIfSuccessful",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "onlyIfSuccessful(boolean onlyIfSuccessful = true)",
                            "availableSince": "1.33"
                        }
                    ]
                },
                {
                    "name": "pattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                }
                            ],
                            "text": "pattern(String glob)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext",
            "methods": [
                {
                    "name": "javadocDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocDir",
                                    "type": "String"
                                }
                            ],
                            "text": "javadocDir(String javadocDir)"
                        }
                    ]
                },
                {
                    "name": "keepAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepAll",
                                    "type": "boolean"
                                }
                            ],
                            "text": "keepAll(boolean keepAll)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.TestDataPublishersContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.TestDataPublishersContext",
            "methods": [
                {
                    "name": "allowClaimingOfFailedTests",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "allowClaimingOfFailedTests()"
                        }
                    ],
                    "plugin": "claim"
                },
                {
                    "name": "publishFlakyTestsReport",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "publishFlakyTestsReport()",
                            "availableSince": "1.30"
                        }
                    ],
                    "plugin": "flaky-test-handler"
                },
                {
                    "name": "publishTestAttachments",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "publishTestAttachments()"
                        }
                    ],
                    "plugin": "junit-attachments"
                },
                {
                    "name": "publishTestStabilityData",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "publishTestStabilityData()"
                        }
                    ],
                    "plugin": "test-stability"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext",
            "methods": [
                {
                    "name": "retainLongStdout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "retain",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "retainLongStdout(boolean retain = true)"
                        }
                    ]
                },
                {
                    "name": "testDataPublishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "testDataPublishersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "testDataPublishers(Closure testDataPublishersClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.TestDataPublishersContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext",
            "methods": [
                {
                    "name": "deleteOutputFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteOutputFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "deleteOutputFiles(boolean deleteOutputFiles = true)"
                        }
                    ]
                },
                {
                    "name": "failIfNotNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failIfNotNew",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failIfNotNew(boolean failIfNotNew = true)"
                        }
                    ]
                },
                {
                    "name": "pattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "text": "pattern(String pattern)"
                        }
                    ]
                },
                {
                    "name": "skipNoTestFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "skipNoTestFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "skipNoTestFiles(boolean skipNoTestFiles = true)"
                        }
                    ]
                },
                {
                    "name": "stopProcessingIfError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stopProcessingIfError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "stopProcessingIfError(boolean stopProcessingIfError = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitCustomToolContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitCustomToolContext",
            "methods": [
                {
                    "name": "deleteOutputFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteOutputFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "deleteOutputFiles(boolean deleteOutputFiles = true)"
                        }
                    ]
                },
                {
                    "name": "failIfNotNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failIfNotNew",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failIfNotNew(boolean failIfNotNew = true)"
                        }
                    ]
                },
                {
                    "name": "pattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "text": "pattern(String pattern)"
                        }
                    ]
                },
                {
                    "name": "skipNoTestFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "skipNoTestFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "skipNoTestFiles(boolean skipNoTestFiles = true)"
                        }
                    ]
                },
                {
                    "name": "stopProcessingIfError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stopProcessingIfError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "stopProcessingIfError(boolean stopProcessingIfError = true)"
                        }
                    ]
                },
                {
                    "name": "stylesheet",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stylesheet",
                                    "type": "String"
                                }
                            ],
                            "text": "stylesheet(String stylesheet)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext",
            "methods": [
                {
                    "name": "failure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failure",
                                    "type": "int"
                                }
                            ],
                            "text": "failure(int failure)"
                        }
                    ]
                },
                {
                    "name": "failureNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failureNew",
                                    "type": "int"
                                }
                            ],
                            "text": "failureNew(int failureNew)"
                        }
                    ]
                },
                {
                    "name": "unstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstable",
                                    "type": "int"
                                }
                            ],
                            "text": "unstable(int unstable)"
                        }
                    ]
                },
                {
                    "name": "unstableNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstableNew",
                                    "type": "int"
                                }
                            ],
                            "text": "unstableNew(int unstableNew)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext",
            "methods": [
                {
                    "name": "aUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "aUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "boostTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "boostTest(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "cTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "cTest(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "check",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "check(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "cppTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "cppTest(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "cppUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "cppUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "customTool",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "customTool(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitCustomToolContext"
                        }
                    ]
                },
                {
                    "name": "embUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "embUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "failedThresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "failedThresholds(Closure thresholdsClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext"
                        }
                    ]
                },
                {
                    "name": "fpcUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "fpcUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "googleTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "googleTest(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "gtester",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "gtester(Closure resultFileClosure)",
                            "availableSince": "1.36",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ],
                    "plugin": "xunit"
                },
                {
                    "name": "jUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "mbUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "mbUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "msTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "msTest(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "nUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "nUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "phpUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "phpUnit(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "qTestLib",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "qTestLib(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "skippedThresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "skippedThresholds(Closure thresholdsClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext"
                        }
                    ]
                },
                {
                    "name": "thresholdMode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMode",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext.ThresholdMode"
                                }
                            ],
                            "text": "thresholdMode(javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext.ThresholdMode thresholdMode)"
                        }
                    ]
                },
                {
                    "name": "timeMargin",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeMargin",
                                    "type": "int"
                                }
                            ],
                            "text": "timeMargin(int timeMargin)"
                        }
                    ]
                },
                {
                    "name": "unitTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "unitTest(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "valgrind",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "valgrind(Closure resultFileClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext",
            "methods": [
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "boolParam(String name, boolean defaultValue = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "booleanParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "booleanParam(String name, boolean defaultValue = false)"
                        }
                    ]
                },
                {
                    "name": "currentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "currentBuild()"
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "gitRevision(boolean combineQueuedCommits = false)"
                        }
                    ],
                    "plugin": "git"
                },
                {
                    "name": "matrixSubset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyFilter",
                                    "type": "String"
                                }
                            ],
                            "text": "matrixSubset(String groovyFilter)"
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "text": "nodeLabel(String paramName, String nodeLabel)"
                        }
                    ],
                    "plugin": "nodelabelparameter"
                },
                {
                    "name": "predefinedProp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "predefinedProp(String key, String value)"
                        }
                    ]
                },
                {
                    "name": "predefinedProps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "predefinedPropsMap",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "predefinedProps(Map<String, String> predefinedPropsMap)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "predefinedProps",
                                    "type": "String"
                                }
                            ],
                            "text": "predefinedProps(String predefinedProps)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "propertiesFile(String fileName, boolean failTriggerOnMissing = false)"
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "sameNode()"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "sameNode",
                                    "type": "boolean"
                                }
                            ],
                            "text": "sameNode(boolean sameNode)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "subversionRevision(boolean includeUpstreamParameters = false)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext",
            "methods": [
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext",
            "methods": [
                {
                    "name": "autoUpdateHealth",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoUpdateHealth",
                                    "type": "boolean"
                                }
                            ],
                            "text": "autoUpdateHealth(boolean autoUpdateHealth)"
                        }
                    ]
                },
                {
                    "name": "autoUpdateStability",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoUpdateStability",
                                    "type": "boolean"
                                }
                            ],
                            "text": "autoUpdateStability(boolean autoUpdateStability)"
                        }
                    ]
                },
                {
                    "name": "classTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "text": "classTarget(Integer healthy = 8000000, Integer unhealthy = 0, Integer failing = 0)"
                        }
                    ]
                },
                {
                    "name": "conditionalTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "text": "conditionalTarget(Integer healthy = 8000000, Integer unhealthy = 0, Integer failing = 0)"
                        }
                    ]
                },
                {
                    "name": "failNoReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failNoReports",
                                    "type": "boolean"
                                }
                            ],
                            "text": "failNoReports(boolean failNoReports)"
                        }
                    ]
                },
                {
                    "name": "failUnhealthy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failUnhealthy",
                                    "type": "boolean"
                                }
                            ],
                            "text": "failUnhealthy(boolean failUnhealthy)"
                        }
                    ]
                },
                {
                    "name": "failUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failUnstable",
                                    "type": "boolean"
                                }
                            ],
                            "text": "failUnstable(boolean failUnstable)"
                        }
                    ]
                },
                {
                    "name": "fileTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "text": "fileTarget(Integer healthy = 8000000, Integer unhealthy = 0, Integer failing = 0)"
                        }
                    ]
                },
                {
                    "name": "lineTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "text": "lineTarget(Integer healthy = 8000000, Integer unhealthy = 0, Integer failing = 0)"
                        }
                    ]
                },
                {
                    "name": "methodTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "text": "methodTarget(Integer healthy = 8000000, Integer unhealthy = 0, Integer failing = 0)"
                        }
                    ]
                },
                {
                    "name": "onlyStable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyStable",
                                    "type": "boolean"
                                }
                            ],
                            "text": "onlyStable(boolean onlyStable)"
                        }
                    ]
                },
                {
                    "name": "packageTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "text": "packageTarget(Integer healthy = 8000000, Integer unhealthy = 0, Integer failing = 0)"
                        }
                    ]
                },
                {
                    "name": "sourceEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourceEncoding",
                                    "type": "String"
                                }
                            ],
                            "text": "sourceEncoding(String sourceEncoding)"
                        }
                    ]
                },
                {
                    "name": "zoomCoverageChart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "zoomCoverageChart",
                                    "type": "boolean"
                                }
                            ],
                            "text": "zoomCoverageChart(boolean zoomCoverageChart)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext",
            "methods": [
                {
                    "name": "commitMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commitMessage",
                                    "type": "String"
                                }
                            ],
                            "text": "commitMessage(String commitMessage)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext",
            "methods": [
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "boolParam(String paramName, boolean defaultValue = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "condition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "condition",
                                    "type": "String"
                                }
                            ],
                            "text": "condition(String condition)"
                        }
                    ]
                },
                {
                    "name": "currentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "currentBuild()",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "gitRevision(boolean combineQueuedCommits = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "matrixSubset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyFilter",
                                    "type": "String"
                                }
                            ],
                            "text": "matrixSubset(String groovyFilter)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "text": "nodeLabel(String paramName, String nodeLabel)",
                            "deprecated": true,
                            "availableSince": "1.26"
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext"
                        }
                    ]
                },
                {
                    "name": "predefinedProp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "predefinedProp(String key, String value)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "predefinedProps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "predefinedPropsMap",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "predefinedProps(Map<String, String> predefinedPropsMap)",
                            "deprecated": true
                        },
                        {
                            "parameters": [
                                {
                                    "name": "predefinedProps",
                                    "type": "String"
                                }
                            ],
                            "text": "predefinedProps(String predefinedProps)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propFile",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "propertiesFile(String propFile, boolean failTriggerOnMissing = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sameNode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "sameNode(boolean sameNode = true)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "subversionRevision(boolean includeUpstreamParameters = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "triggerWithNoParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "triggerWithNoParameters(boolean triggerWithNoParameters = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext",
            "methods": [
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, Closure downstreamTriggerClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, String condition, Closure downstreamTriggerClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, String condition, boolean triggerWithNoParameters, Closure downstreamTriggerClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "blockingThresholds",
                                    "type": "Map<String, String>"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, String condition, boolean triggerWithNoParameters, Map<String, String> blockingThresholds, Closure downstreamTriggerClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext",
            "methods": [
                {
                    "name": "blockThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "text": "blockThreshold(IntRange range)"
                        }
                    ]
                },
                {
                    "name": "classThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "text": "classThreshold(IntRange range)"
                        }
                    ]
                },
                {
                    "name": "conditionThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "text": "conditionThreshold(IntRange range)"
                        }
                    ]
                },
                {
                    "name": "lineThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "text": "lineThreshold(IntRange range)"
                        }
                    ]
                },
                {
                    "name": "maxBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "text": "maxBlock(int max)"
                        }
                    ]
                },
                {
                    "name": "maxClass",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "text": "maxClass(int max)"
                        }
                    ]
                },
                {
                    "name": "maxCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "text": "maxCondition(int max)"
                        }
                    ]
                },
                {
                    "name": "maxLine",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "text": "maxLine(int max)"
                        }
                    ]
                },
                {
                    "name": "maxMethod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "text": "maxMethod(int max)"
                        }
                    ]
                },
                {
                    "name": "methodThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "text": "methodThreshold(IntRange range)"
                        }
                    ]
                },
                {
                    "name": "minBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "text": "minBlock(int min)"
                        }
                    ]
                },
                {
                    "name": "minClass",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "text": "minClass(int min)"
                        }
                    ]
                },
                {
                    "name": "minCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "text": "minCondition(int min)"
                        }
                    ]
                },
                {
                    "name": "minLine",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "text": "minLine(int min)"
                        }
                    ]
                },
                {
                    "name": "minMethod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "text": "minMethod(int min)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.EmailContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure configureClosure)"
                        }
                    ]
                },
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "args",
                                    "type": "Map"
                                }
                            ],
                            "text": "trigger(Map args)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "triggerName",
                                    "type": "String"
                                },
                                {
                                    "name": "subject",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "body",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "recipientList",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sendToDevelopers",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sendToRequester",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeCulprits",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sendToRecipientList",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String triggerName, String subject = null, String body = null, String recipientList = null, Boolean sendToDevelopers = null, Boolean sendToRequester = null, Boolean includeCulprits = null, Boolean sendToRecipientList = null)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RunConditionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext",
            "methods": [
                {
                    "name": "alwaysRun",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "alwaysRun()"
                        }
                    ]
                },
                {
                    "name": "and",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosures",
                                    "type": "Closure..."
                                }
                            ],
                            "text": "and(Closure... conditionClosures)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "batch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "batch(String command)",
                            "availableSince": "1.23"
                        }
                    ]
                },
                {
                    "name": "booleanCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                }
                            ],
                            "text": "booleanCondition(String token)"
                        }
                    ]
                },
                {
                    "name": "cause",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildCause",
                                    "type": "String"
                                },
                                {
                                    "name": "exclusiveCondition",
                                    "type": "boolean"
                                }
                            ],
                            "text": "cause(String buildCause, boolean exclusiveCondition)"
                        }
                    ]
                },
                {
                    "name": "expression",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "expression",
                                    "type": "String"
                                },
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "text": "expression(String expression, String label)"
                        }
                    ]
                },
                {
                    "name": "fileExists",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "file",
                                    "type": "String"
                                },
                                {
                                    "name": "baseDir",
                                    "type": "javaposse.jobdsl.dsl.helpers.step.condition.FileExistsCondition.BaseDir"
                                }
                            ],
                            "text": "fileExists(String file, javaposse.jobdsl.dsl.helpers.step.condition.FileExistsCondition.BaseDir baseDir)",
                            "availableSince": "1.23"
                        }
                    ]
                },
                {
                    "name": "filesMatch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includes",
                                    "type": "String"
                                },
                                {
                                    "name": "excludes",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "baseDir",
                                    "type": "javaposse.jobdsl.dsl.helpers.step.condition.FileExistsCondition.BaseDir",
                                    "defaultValue": "BaseDir.WORKSPACE"
                                }
                            ],
                            "text": "filesMatch(String includes, String excludes = '', javaposse.jobdsl.dsl.helpers.step.condition.FileExistsCondition.BaseDir baseDir = BaseDir.WORKSPACE)",
                            "availableSince": "1.36"
                        }
                    ]
                },
                {
                    "name": "neverRun",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "neverRun()"
                        }
                    ]
                },
                {
                    "name": "not",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "not(Closure conditionClosure)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "or",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosures",
                                    "type": "Closure..."
                                }
                            ],
                            "text": "or(Closure... conditionClosures)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "shell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "shell(String command)",
                            "availableSince": "1.23"
                        }
                    ]
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "worstResult",
                                    "type": "String"
                                },
                                {
                                    "name": "bestResult",
                                    "type": "String"
                                }
                            ],
                            "text": "status(String worstResult, String bestResult)"
                        }
                    ]
                },
                {
                    "name": "stringsMatch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "arg1",
                                    "type": "String"
                                },
                                {
                                    "name": "arg2",
                                    "type": "String"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "boolean"
                                }
                            ],
                            "text": "stringsMatch(String arg1, String arg2, boolean ignoreCase)"
                        }
                    ]
                },
                {
                    "name": "time",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "earliestHours",
                                    "type": "int"
                                },
                                {
                                    "name": "earliestMinutes",
                                    "type": "int"
                                },
                                {
                                    "name": "latestHours",
                                    "type": "int"
                                },
                                {
                                    "name": "latestMinutes",
                                    "type": "int"
                                },
                                {
                                    "name": "useBuildTime",
                                    "type": "boolean"
                                }
                            ],
                            "text": "time(int earliestHours, int earliestMinutes, int latestHours, int latestMinutes, boolean useBuildTime)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext",
            "methods": [
                {
                    "name": "aborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "aborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "aborted(boolean aborted = true)"
                        }
                    ]
                },
                {
                    "name": "chat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "chat",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "chat(boolean chat = true)"
                        }
                    ]
                },
                {
                    "name": "failure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failure(boolean failure = true)"
                        }
                    ]
                },
                {
                    "name": "fixed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fixed",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "fixed(boolean fixed = true)"
                        }
                    ]
                },
                {
                    "name": "notBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notBuilt(boolean notBuilt = true)"
                        }
                    ]
                },
                {
                    "name": "success",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "success",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "success(boolean success = true)"
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tag",
                                    "type": "String"
                                }
                            ],
                            "text": "tag(String tag)"
                        }
                    ]
                },
                {
                    "name": "tags",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tags",
                                    "type": "String[]"
                                }
                            ],
                            "text": "tags(String[] tags)"
                        }
                    ]
                },
                {
                    "name": "unstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "unstable(boolean unstable = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.TagToPushContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.TagToPushContext",
            "methods": [
                {
                    "name": "create",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "create",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "create(boolean create = true)"
                        }
                    ]
                },
                {
                    "name": "message",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "message",
                                    "type": "String"
                                }
                            ],
                            "text": "message(String message)"
                        }
                    ]
                },
                {
                    "name": "update",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "update",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "update(boolean update = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetRepo",
                                    "type": "String"
                                },
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "branch(String targetRepo, String name)"
                        }
                    ]
                },
                {
                    "name": "forcePush",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "forcePush",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "forcePush(boolean forcePush = true)",
                            "availableSince": "1.27"
                        }
                    ],
                    "plugin": "git"
                },
                {
                    "name": "pushMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pushMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "pushMerge(boolean pushMerge = true)"
                        }
                    ]
                },
                {
                    "name": "pushOnlyIfSuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pushOnlyIfSuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "pushOnlyIfSuccess(boolean pushOnlyIfSuccess = true)"
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetRepo",
                                    "type": "String"
                                },
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "tag(String targetRepo, String name, Closure closure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.TagToPushContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext",
            "methods": [
                {
                    "name": "behavior",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior"
                                }
                            ],
                            "text": "behavior(javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior behavior)"
                        }
                    ]
                },
                {
                    "name": "sandbox",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sandbox",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "sandbox(boolean sandbox = true)"
                        }
                    ],
                    "plugin": "groovy-postbuild"
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "script(String script)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext",
            "methods": [
                {
                    "name": "completeJobMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "completeJobMessage",
                                    "type": "String"
                                }
                            ],
                            "text": "completeJobMessage(String completeJobMessage)"
                        }
                    ]
                },
                {
                    "name": "notifyAborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyAborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyAborted(boolean notifyAborted = true)"
                        }
                    ]
                },
                {
                    "name": "notifyBackToNormal",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBackToNormal",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyBackToNormal(boolean notifyBackToNormal = true)"
                        }
                    ]
                },
                {
                    "name": "notifyBuildStart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBuildStart",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyBuildStart(boolean notifyBuildStart = true)"
                        }
                    ]
                },
                {
                    "name": "notifyFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyFailure(boolean notifyFailure = true)"
                        }
                    ]
                },
                {
                    "name": "notifyNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyNotBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyNotBuilt(boolean notifyNotBuilt = true)"
                        }
                    ]
                },
                {
                    "name": "notifySuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifySuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifySuccess(boolean notifySuccess = true)"
                        }
                    ]
                },
                {
                    "name": "notifyUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyUnstable(boolean notifyUnstable = true)"
                        }
                    ]
                },
                {
                    "name": "rooms",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rooms",
                                    "type": "String..."
                                }
                            ],
                            "text": "rooms(String... rooms)"
                        }
                    ]
                },
                {
                    "name": "startJobMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "startJobMessage",
                                    "type": "String"
                                }
                            ],
                            "text": "startJobMessage(String startJobMessage)"
                        }
                    ]
                },
                {
                    "name": "token",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                }
                            ],
                            "text": "token(String token)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.IrcContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext",
            "methods": [
                {
                    "name": "channel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "notificationOnly",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "channel(String name, String password = '', boolean notificationOnly = false)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "args",
                                    "type": "Map"
                                }
                            ],
                            "text": "channel(Map args)"
                        }
                    ]
                },
                {
                    "name": "notificationMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationMessage",
                                    "type": "String"
                                }
                            ],
                            "text": "notificationMessage(String notificationMessage)"
                        }
                    ]
                },
                {
                    "name": "notifyScmCommitters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyScmCommitters(boolean value = true)"
                        }
                    ]
                },
                {
                    "name": "notifyScmCulprits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyScmCulprits(boolean value = true)"
                        }
                    ]
                },
                {
                    "name": "notifyScmFixers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyScmFixers(boolean value = true)"
                        }
                    ]
                },
                {
                    "name": "notifyUpstreamCommitters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyUpstreamCommitters(boolean value = true)"
                        }
                    ]
                },
                {
                    "name": "strategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategy",
                                    "type": "String"
                                }
                            ],
                            "text": "strategy(String strategy)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext",
            "methods": [
                {
                    "name": "changeBuildStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "change",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "changeBuildStatus(boolean change = true)",
                            "availableSince": "1.22"
                        }
                    ]
                },
                {
                    "name": "classPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classPattern",
                                    "type": "String"
                                }
                            ],
                            "text": "classPattern(String classPattern)"
                        }
                    ]
                },
                {
                    "name": "exclusionPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "exclusionPattern",
                                    "type": "String"
                                }
                            ],
                            "text": "exclusionPattern(String exclusionPattern)"
                        }
                    ]
                },
                {
                    "name": "execPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execPattern",
                                    "type": "String"
                                }
                            ],
                            "text": "execPattern(String execPattern)"
                        }
                    ]
                },
                {
                    "name": "inclusionPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "inclusionPattern",
                                    "type": "String"
                                }
                            ],
                            "text": "inclusionPattern(String inclusionPattern)"
                        }
                    ]
                },
                {
                    "name": "maximumBranchCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumBranchCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "maximumBranchCoverage(String maximumBranchCoverage)"
                        }
                    ]
                },
                {
                    "name": "maximumClassCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumClassCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "maximumClassCoverage(String maximumClassCoverage)"
                        }
                    ]
                },
                {
                    "name": "maximumComplexityCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumComplexityCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "maximumComplexityCoverage(String maximumComplexityCoverage)"
                        }
                    ]
                },
                {
                    "name": "maximumInstructionCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumInstructionCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "maximumInstructionCoverage(String maximumInstructionCoverage)"
                        }
                    ]
                },
                {
                    "name": "maximumLineCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumLineCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "maximumLineCoverage(String maximumLineCoverage)"
                        }
                    ]
                },
                {
                    "name": "maximumMethodCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumMethodCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "maximumMethodCoverage(String maximumMethodCoverage)"
                        }
                    ]
                },
                {
                    "name": "minimumBranchCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumBranchCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "minimumBranchCoverage(String minimumBranchCoverage)"
                        }
                    ]
                },
                {
                    "name": "minimumClassCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumClassCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "minimumClassCoverage(String minimumClassCoverage)"
                        }
                    ]
                },
                {
                    "name": "minimumComplexityCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumComplexityCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "minimumComplexityCoverage(String minimumComplexityCoverage)"
                        }
                    ]
                },
                {
                    "name": "minimumInstructionCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumInstructionCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "minimumInstructionCoverage(String minimumInstructionCoverage)"
                        }
                    ]
                },
                {
                    "name": "minimumLineCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumLineCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "minimumLineCoverage(String minimumLineCoverage)"
                        }
                    ]
                },
                {
                    "name": "minimumMethodCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumMethodCoverage",
                                    "type": "String"
                                }
                            ],
                            "text": "minimumMethodCoverage(String minimumMethodCoverage)"
                        }
                    ]
                },
                {
                    "name": "sourcePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourcePattern",
                                    "type": "String"
                                }
                            ],
                            "text": "sourcePattern(String sourcePattern)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext",
            "methods": [
                {
                    "name": "evenIfDownstreamUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "evenIfDownstreamUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "evenIfDownstreamUnstable(boolean evenIfDownstreamUnstable = true)"
                        }
                    ]
                },
                {
                    "name": "projects",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String..."
                                }
                            ],
                            "text": "projects(String... projects)"
                        }
                    ]
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure publisherClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext",
            "methods": [
                {
                    "name": "deleteOnMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteOnMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "deleteOnMerge(boolean deleteOnMerge = true)",
                            "availableSince": "1.38"
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "disallowOwnCode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disallowOwnCode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disallowOwnCode(boolean disallowOwnCode = true)"
                        }
                    ]
                },
                {
                    "name": "failOnNonMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnNonMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failOnNonMerge(boolean failOnNonMerge = true)",
                            "availableSince": "1.38"
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "mergeComment",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mergeComment",
                                    "type": "String"
                                }
                            ],
                            "text": "mergeComment(String mergeComment)"
                        }
                    ]
                },
                {
                    "name": "onlyAdminsMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyAdminsMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "onlyAdminsMerge(boolean onlyAdminsMerge = true)"
                        }
                    ]
                },
                {
                    "name": "onlyTriggerPhrase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyTriggerPhrase",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "onlyTriggerPhrase(boolean onlyTriggerPhrase = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotCSVSeriesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotCSVSeriesContext",
            "methods": [
                {
                    "name": "excludeColumns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnNames",
                                    "type": "String..."
                                }
                            ],
                            "text": "excludeColumns(String... columnNames)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "columnIndexes",
                                    "type": "int..."
                                }
                            ],
                            "text": "excludeColumns(int... columnIndexes)"
                        }
                    ]
                },
                {
                    "name": "includeColumns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnNames",
                                    "type": "String..."
                                }
                            ],
                            "text": "includeColumns(String... columnNames)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "columnIndexes",
                                    "type": "int..."
                                }
                            ],
                            "text": "includeColumns(int... columnIndexes)"
                        }
                    ]
                },
                {
                    "name": "showTable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showTable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showTable(boolean showTable = true)"
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "text": "url(String url)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotPropertiesSeriesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotPropertiesSeriesContext",
            "methods": [
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "text": "label(String label)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotXMLSeriesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotXMLSeriesContext",
            "methods": [
                {
                    "name": "nodeType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodeType",
                                    "type": "String"
                                }
                            ],
                            "text": "nodeType(String nodeType)"
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "text": "url(String url)"
                        }
                    ]
                },
                {
                    "name": "xpath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xpath",
                                    "type": "String"
                                }
                            ],
                            "text": "xpath(String xpath)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotContext",
            "methods": [
                {
                    "name": "csvFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "plotSeriesClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "csvFile(String fileName, Closure plotSeriesClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotCSVSeriesContext"
                        }
                    ]
                },
                {
                    "name": "excludeZero",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludeZero",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "excludeZero(boolean excludeZero = true)"
                        }
                    ]
                },
                {
                    "name": "keepRecords",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepRecords",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepRecords(boolean keepRecords = true)"
                        }
                    ]
                },
                {
                    "name": "logarithmic",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logarithmic",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "logarithmic(boolean logarithmic = true)"
                        }
                    ]
                },
                {
                    "name": "numberOfBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "numberOfBuilds",
                                    "type": "int"
                                }
                            ],
                            "text": "numberOfBuilds(int numberOfBuilds)"
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "plotSeriesClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "propertiesFile(String fileName, Closure plotSeriesClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotPropertiesSeriesContext"
                        }
                    ]
                },
                {
                    "name": "style",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "style",
                                    "type": "String"
                                }
                            ],
                            "text": "style(String style)"
                        }
                    ]
                },
                {
                    "name": "title",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "title",
                                    "type": "String"
                                }
                            ],
                            "text": "title(String title)"
                        }
                    ]
                },
                {
                    "name": "useDescriptions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDescriptions",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useDescriptions(boolean useDescriptions = true)"
                        }
                    ]
                },
                {
                    "name": "xmlFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "plotSeriesClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "xmlFile(String fileName, Closure plotSeriesClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotXMLSeriesContext"
                        }
                    ]
                },
                {
                    "name": "yAxis",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "yAxis",
                                    "type": "String"
                                }
                            ],
                            "text": "yAxis(String yAxis)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext",
            "methods": [
                {
                    "name": "plot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "group",
                                    "type": "String"
                                },
                                {
                                    "name": "dataStore",
                                    "type": "String"
                                },
                                {
                                    "name": "plotClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "plot(String group, String dataStore, Closure plotClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.AntContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.AntContext",
            "methods": [
                {
                    "name": "antInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antInstallationName",
                                    "type": "String"
                                }
                            ],
                            "text": "antInstallation(String antInstallationName)",
                            "html": "Specifies the name of the Ant installation to be used for this build step.",
                            "firstSentenceCommentText": "Specifies the name of the Ant installation to be used for this build step."
                        }
                    ]
                },
                {
                    "name": "buildFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                }
                            ],
                            "text": "buildFile(String buildFile)",
                            "html": "Specifies the build file to be invoked. Defaults to <TT>build.gradle</TT>.",
                            "firstSentenceCommentText": "Specifies the build file to be invoked. "
                        }
                    ]
                },
                {
                    "name": "javaOpt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opt",
                                    "type": "String"
                                }
                            ],
                            "text": "javaOpt(String opt)",
                            "html": "Specifies custom <TT>ANT_OPTS</TT>. Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Specifies custom ANT_OPTS. "
                        }
                    ]
                },
                {
                    "name": "javaOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opts",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "javaOpts(Iterable<String> opts)",
                            "html": "Specifies custom <TT>ANT_OPTS</TT>.  Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Specifies custom ANT_OPTS.  "
                        }
                    ]
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "text": "prop(Object key, Object value)",
                            "html": "Specifies a property for the Ant build. Can be called multiple times to add more properties.",
                            "firstSentenceCommentText": "Specifies a property for the Ant build. "
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "props(Map<String, String> map)",
                            "html": "Specifies properties for the Ant build. Can be called multiple times to add more properites.",
                            "firstSentenceCommentText": "Specifies properties for the Ant build. "
                        }
                    ]
                },
                {
                    "name": "target",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                }
                            ],
                            "text": "target(String target)",
                            "html": "Specifies an Ant target to be invoked. Can be called multiple times to add more targets.",
                            "firstSentenceCommentText": "Specifies an Ant target to be invoked. "
                        }
                    ]
                },
                {
                    "name": "targets",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "targets(Iterable<String> targets)",
                            "html": "Specifies Ant targets to be invoked. Can be called multiple times to add more targets.",
                            "firstSentenceCommentText": "Specifies Ant targets to be invoked. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext",
            "methods": [
                {
                    "name": "clangInstallationName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clangInstallationName",
                                    "type": "String"
                                }
                            ],
                            "text": "clangInstallationName(String clangInstallationName)"
                        }
                    ]
                },
                {
                    "name": "configuration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configuration",
                                    "type": "String"
                                }
                            ],
                            "text": "configuration(String configuration)"
                        }
                    ]
                },
                {
                    "name": "scanBuildArgs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scanBuildArgs",
                                    "type": "String"
                                }
                            ],
                            "text": "scanBuildArgs(String scanBuildArgs)"
                        }
                    ]
                },
                {
                    "name": "scheme",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scheme",
                                    "type": "String"
                                }
                            ],
                            "text": "scheme(String scheme)"
                        }
                    ]
                },
                {
                    "name": "targetSdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetSdk",
                                    "type": "String"
                                }
                            ],
                            "text": "targetSdk(String targetSdk)"
                        }
                    ]
                },
                {
                    "name": "workspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspace",
                                    "type": "String"
                                }
                            ],
                            "text": "workspace(String workspace)"
                        }
                    ]
                },
                {
                    "name": "xcodeBuildArgs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xcodeBuildArgs",
                                    "type": "String"
                                }
                            ],
                            "text": "xcodeBuildArgs(String xcodeBuildArgs)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext",
            "methods": [
                {
                    "name": "condition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "condition(Closure conditionClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "runner",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "runnerName",
                                    "type": "String"
                                }
                            ],
                            "text": "runner(String runnerName)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "runner",
                                    "type": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext.EvaluationRunners"
                                }
                            ],
                            "text": "runner(javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext.EvaluationRunners runner)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stepContextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure stepContextClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext",
            "methods": [
                {
                    "name": "buildNumber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildNumber",
                                    "type": "int"
                                }
                            ],
                            "text": "buildNumber(int buildNumber)",
                            "html": "Specific build.",
                            "firstSentenceCommentText": "Specific build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "buildNumber",
                                    "type": "String"
                                }
                            ],
                            "text": "buildNumber(String buildNumber)",
                            "availableSince": "1.22"
                        }
                    ]
                },
                {
                    "name": "buildParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                }
                            ],
                            "text": "buildParameter(String parameterName)",
                            "html": "Specified by build parameter.",
                            "firstSentenceCommentText": "Specified by build parameter."
                        }
                    ]
                },
                {
                    "name": "latestSaved",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "latestSaved()",
                            "html": "Latest saved build (marked \"keep forever\").",
                            "firstSentenceCommentText": "Latest saved build (marked \"keep forever\")."
                        }
                    ]
                },
                {
                    "name": "latestSuccessful",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stable",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "latestSuccessful(boolean stable = false)",
                            "html": "Latest successful build.",
                            "firstSentenceCommentText": "Latest successful build."
                        }
                    ]
                },
                {
                    "name": "permalink",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "linkName",
                                    "type": "String"
                                }
                            ],
                            "text": "permalink(String linkName)",
                            "html": "Specified by permalink.\r\n     ",
                            "firstSentenceCommentText": "Specified by permalink."
                        }
                    ]
                },
                {
                    "name": "upstreamBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fallback",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "upstreamBuild(boolean fallback = false)",
                            "html": "Upstream build that triggered this job.\r\n     ",
                            "firstSentenceCommentText": "Upstream build that triggered this job."
                        }
                    ]
                },
                {
                    "name": "workspace",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "workspace()",
                            "html": "Copy from workspace of latest completed build.",
                            "firstSentenceCommentText": "Copy from workspace of latest completed build."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext",
            "methods": [
                {
                    "name": "buildSelector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectorClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "buildSelector(Closure selectorClosure)"
                        }
                    ]
                },
                {
                    "name": "excludePatterns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludePatterns",
                                    "type": "String..."
                                }
                            ],
                            "text": "excludePatterns(String... excludePatterns)"
                        }
                    ],
                    "plugin": "copyartifact"
                },
                {
                    "name": "fingerprintArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fingerprint",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "fingerprintArtifacts(boolean fingerprint = true)"
                        }
                    ],
                    "plugin": "copyartifact"
                },
                {
                    "name": "flatten",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flatten",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "flatten(boolean flatten = true)"
                        }
                    ]
                },
                {
                    "name": "includePatterns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includePatterns",
                                    "type": "String..."
                                }
                            ],
                            "text": "includePatterns(String... includePatterns)"
                        }
                    ]
                },
                {
                    "name": "optional",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "optional",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "optional(boolean optional = true)"
                        }
                    ]
                },
                {
                    "name": "targetDirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetDirectory",
                                    "type": "String"
                                }
                            ],
                            "text": "targetDirectory(String targetDirectory)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DebianContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DebianContext",
            "methods": [
                {
                    "name": "generateChangelog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nextVersion",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "alwaysBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "generateChangelog(String nextVersion = null, boolean alwaysBuild = false)"
                        }
                    ]
                },
                {
                    "name": "signPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "signPackage",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "signPackage(boolean signPackage = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerBlockContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerBlockContext",
            "methods": [
                {
                    "name": "buildStepFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "threshold",
                                    "type": "String"
                                }
                            ],
                            "text": "buildStepFailure(String threshold)"
                        }
                    ]
                },
                {
                    "name": "failure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "threshold",
                                    "type": "String"
                                }
                            ],
                            "text": "failure(String threshold)"
                        }
                    ]
                },
                {
                    "name": "unstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "threshold",
                                    "type": "String"
                                }
                            ],
                            "text": "unstable(String threshold)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerParameterFactoryContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerParameterFactoryContext",
            "methods": [
                {
                    "name": "forMatchingFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filePattern",
                                    "type": "String"
                                },
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "noFilesFoundAction",
                                    "type": "String",
                                    "defaultValue": "'SKIP'"
                                }
                            ],
                            "text": "forMatchingFiles(String filePattern, String parameterName, String noFilesFoundAction = 'SKIP')"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext",
            "methods": [
                {
                    "name": "block",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "block(Closure closure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerBlockContext"
                        }
                    ]
                },
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "boolParam(String paramName, boolean defaultValue = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "currentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "currentBuild()",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "gitRevision(boolean combineQueuedCommits = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "matrixSubset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyFilter",
                                    "type": "String"
                                }
                            ],
                            "text": "matrixSubset(String groovyFilter)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "text": "nodeLabel(String paramName, String nodeLabel)",
                            "deprecated": true,
                            "availableSince": "1.26"
                        }
                    ]
                },
                {
                    "name": "parameterFactories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameterFactories(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerParameterFactoryContext"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext"
                        }
                    ]
                },
                {
                    "name": "predefinedProp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "predefinedProp(String key, String value)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "predefinedProps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "predefinedPropsMap",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "predefinedProps(Map<String, String> predefinedPropsMap)",
                            "deprecated": true
                        },
                        {
                            "parameters": [
                                {
                                    "name": "predefinedProps",
                                    "type": "String"
                                }
                            ],
                            "text": "predefinedProps(String predefinedProps)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propFile",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "propertiesFile(String propFile, boolean failTriggerOnMissing = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sameNode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "sameNode(boolean sameNode = true)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "subversionRevision(boolean includeUpstreamParameters = false)",
                            "deprecated": true
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamContext",
            "methods": [
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, Closure downstreamTriggerClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, String condition, Closure downstreamTriggerClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, String condition, boolean triggerWithNoParameters, Closure downstreamTriggerClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "blockingThresholds",
                                    "type": "Map<String, String>"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "trigger(String projects, String condition, boolean triggerWithNoParameters, Map<String, String> blockingThresholds, Closure downstreamTriggerClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DslContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DslContext",
            "methods": [
                {
                    "name": "additionalClasspath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classpath",
                                    "type": "String"
                                }
                            ],
                            "text": "additionalClasspath(String classpath)",
                            "availableSince": "1.29"
                        }
                    ]
                },
                {
                    "name": "external",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "dslScripts",
                                    "type": "String..."
                                }
                            ],
                            "text": "external(String... dslScripts)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "dslScripts",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "external(Iterable<String> dslScripts)",
                            "availableSince": "1.29"
                        }
                    ]
                },
                {
                    "name": "ignoreExisting",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignore",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "ignoreExisting(boolean ignore = true)"
                        }
                    ]
                },
                {
                    "name": "lookupStrategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "lookupStrategy",
                                    "type": "String"
                                }
                            ],
                            "text": "lookupStrategy(String lookupStrategy)",
                            "availableSince": "1.33"
                        }
                    ]
                },
                {
                    "name": "removeAction",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "action",
                                    "type": "String"
                                }
                            ],
                            "text": "removeAction(String action)"
                        }
                    ]
                },
                {
                    "name": "removeViewAction",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "action",
                                    "type": "String"
                                }
                            ],
                            "text": "removeViewAction(String action)",
                            "availableSince": "1.35"
                        }
                    ]
                },
                {
                    "name": "text",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "text",
                                    "type": "String"
                                }
                            ],
                            "text": "text(String text)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext",
            "methods": [
                {
                    "name": "env",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "text": "env(Object key, Object value)",
                            "html": "Adds an environment variable to the build.",
                            "firstSentenceCommentText": "Adds an environment variable to the build."
                        }
                    ]
                },
                {
                    "name": "envs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<Object, Object>"
                                }
                            ],
                            "text": "envs(Map<Object, Object> map)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build."
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertiesFilePath",
                                    "type": "String"
                                }
                            ],
                            "text": "propertiesFile(String propertiesFilePath)",
                            "html": "Adds environment variables from a properties file.",
                            "firstSentenceCommentText": "Adds environment variables from a properties file."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.GradleContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.GradleContext",
            "methods": [
                {
                    "name": "buildFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                }
                            ],
                            "text": "buildFile(String buildFile)",
                            "html": "Specifies the name of the Gradle build script file. Defaults to <TT>build.gradle</TT>.",
                            "firstSentenceCommentText": "Specifies the name of the Gradle build script file. "
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure closure)",
                            "html": "Allows direct manipulation of the generated XML. The <TT>hudson.plugins.gradle.Gradle</TT> node is passed into the\r\n configure block.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the build step.",
                            "firstSentenceCommentText": "Sets a description for the build step."
                        }
                    ]
                },
                {
                    "name": "fromRootBuildScriptDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fromRootBuildScriptDir",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "fromRootBuildScriptDir(boolean fromRootBuildScriptDir = true)",
                            "html": "Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Defaults to true."
                        }
                    ]
                },
                {
                    "name": "gradleName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gradleName",
                                    "type": "String"
                                }
                            ],
                            "text": "gradleName(String gradleName)",
                            "html": "Specifies the name of the Gradle installation to use if not using the wrapper.",
                            "firstSentenceCommentText": "Specifies the name of the Gradle installation to use if not using the wrapper."
                        }
                    ]
                },
                {
                    "name": "makeExecutable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "makeExecutable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "makeExecutable(boolean makeExecutable = true)",
                            "html": "Sets the executable flag on the wrapper script file before invoking the file. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sets the executable flag on the wrapper script file before invoking the file. "
                        }
                    ]
                },
                {
                    "name": "rootBuildScriptDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rootBuildScriptDir",
                                    "type": "String"
                                }
                            ],
                            "text": "rootBuildScriptDir(String rootBuildScriptDir)",
                            "html": "Specifies the directory containing the <TT>build.gradle</TT>. Defaults to the workspace directory.",
                            "firstSentenceCommentText": "Specifies the directory containing the build.gradle. "
                        }
                    ]
                },
                {
                    "name": "switches",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "switches",
                                    "type": "String"
                                }
                            ],
                            "text": "switches(String switches)",
                            "html": "Specifies the Gradle switches to be invoked. Can be called multiple times to add more switches.",
                            "firstSentenceCommentText": "Specifies the Gradle switches to be invoked. "
                        }
                    ]
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String"
                                }
                            ],
                            "text": "tasks(String tasks)",
                            "html": "Specifies the Gradle tasks to be invoked. Can be called multiple times to add more tasks.",
                            "firstSentenceCommentText": "Specifies the Gradle tasks to be invoked. "
                        }
                    ]
                },
                {
                    "name": "useWrapper",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useWrapper",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useWrapper(boolean useWrapper = true)",
                            "html": "Use the Gradle wrapper to invoke the build script. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Use the Gradle wrapper to invoke the build script. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.GrailsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.GrailsContext",
            "methods": [
                {
                    "name": "forceUpgrade",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "forceUpgrade",
                                    "type": "boolean"
                                }
                            ],
                            "text": "forceUpgrade(boolean forceUpgrade)"
                        }
                    ]
                },
                {
                    "name": "grailsWorkDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "grailsWorkDir",
                                    "type": "String"
                                }
                            ],
                            "text": "grailsWorkDir(String grailsWorkDir)"
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)"
                        }
                    ]
                },
                {
                    "name": "nonInteractive",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nonInteractive",
                                    "type": "boolean"
                                }
                            ],
                            "text": "nonInteractive(boolean nonInteractive)"
                        }
                    ]
                },
                {
                    "name": "projectBaseDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectBaseDir",
                                    "type": "String"
                                }
                            ],
                            "text": "projectBaseDir(String projectBaseDir)"
                        }
                    ]
                },
                {
                    "name": "projectWorkDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectWorkDir",
                                    "type": "String"
                                }
                            ],
                            "text": "projectWorkDir(String projectWorkDir)"
                        }
                    ]
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "prop(String key, String value)"
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "props(Map<String, String> map)"
                        }
                    ]
                },
                {
                    "name": "serverPort",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "serverPort",
                                    "type": "String"
                                }
                            ],
                            "text": "serverPort(String serverPort)"
                        }
                    ]
                },
                {
                    "name": "target",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                }
                            ],
                            "text": "target(String target)"
                        }
                    ]
                },
                {
                    "name": "targets",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "addlTargets",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "targets(Iterable<String> addlTargets)"
                        }
                    ]
                },
                {
                    "name": "useWrapper",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useWrapper",
                                    "type": "boolean"
                                }
                            ],
                            "text": "useWrapper(boolean useWrapper)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.GroovyContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.GroovyContext",
            "methods": [
                {
                    "name": "classpath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classpath",
                                    "type": "String"
                                }
                            ],
                            "text": "classpath(String classpath)"
                        }
                    ]
                },
                {
                    "name": "groovyInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyInstallationName",
                                    "type": "String"
                                }
                            ],
                            "text": "groovyInstallation(String groovyInstallationName)"
                        }
                    ]
                },
                {
                    "name": "groovyParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "param",
                                    "type": "String"
                                }
                            ],
                            "text": "groovyParam(String param)"
                        }
                    ]
                },
                {
                    "name": "groovyParams",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "params",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "groovyParams(Iterable<String> params)"
                        }
                    ]
                },
                {
                    "name": "javaOpt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opt",
                                    "type": "String"
                                }
                            ],
                            "text": "javaOpt(String opt)"
                        }
                    ]
                },
                {
                    "name": "javaOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opts",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "javaOpts(Iterable<String> opts)"
                        }
                    ]
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "prop(String key, String value)"
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "props(Map<String, String> map)"
                        }
                    ]
                },
                {
                    "name": "scriptParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "param",
                                    "type": "String"
                                }
                            ],
                            "text": "scriptParam(String param)"
                        }
                    ]
                },
                {
                    "name": "scriptParams",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "params",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "scriptParams(Iterable<String> params)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext",
            "methods": [
                {
                    "name": "authentication",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "authentication",
                                    "type": "String"
                                }
                            ],
                            "text": "authentication(String authentication)"
                        }
                    ]
                },
                {
                    "name": "httpMode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "httpMode",
                                    "type": "String"
                                }
                            ],
                            "text": "httpMode(String httpMode)"
                        }
                    ]
                },
                {
                    "name": "logResponseBody",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logResponseBody",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "logResponseBody(boolean logResponseBody = true)"
                        }
                    ]
                },
                {
                    "name": "returnCodeBuildRelevant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "returnCodeBuildRelevant",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "returnCodeBuildRelevant(boolean returnCodeBuildRelevant = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.MavenContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.MavenContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure closure)",
                            "html": "Allows direct manipulation of the generated XML. The <TT>hudson.tasks.Maven</TT> node is passed into the configure\r\n block.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "goals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "goals",
                                    "type": "String"
                                }
                            ],
                            "text": "goals(String goals)",
                            "html": "Specifies the goals to execute including other command line options.\r\n When specified multiple times, the goals and options will be concatenated.\r\n     ",
                            "firstSentenceCommentText": "Specifies the goals to execute including other command line options.\r\n "
                        }
                    ]
                },
                {
                    "name": "localRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.common.MavenContext.LocalRepositoryLocation"
                                }
                            ],
                            "text": "localRepository(javaposse.jobdsl.dsl.helpers.common.MavenContext.LocalRepositoryLocation location)",
                            "deprecated": true,
                            "html": "Set to use isolated local Maven repositories.\r\n\r\n Possible values are <TT>LocalToWorkspace</TT> and <TT>LocalToExecutor</TT>.\r\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.LocalRepositoryLocation"
                                }
                            ],
                            "text": "localRepository(javaposse.jobdsl.dsl.helpers.LocalRepositoryLocation location)",
                            "availableSince": "1.31",
                            "html": "Set to use isolated local Maven repositories.\r\n\r\n Possible values for are <TT>LocalRepositoryLocation.LOCAL_TO_WORKSPACE</TT> and\r\n <TT>LocalRepositoryLocation.LOCAL_TO_EXECUTOR</TT>.\r\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories."
                        }
                    ]
                },
                {
                    "name": "mavenInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenInstallation(String name)",
                            "html": "Specifies the Maven installation for executing this step.\r\n     ",
                            "firstSentenceCommentText": "Specifies the Maven installation for executing this step."
                        }
                    ]
                },
                {
                    "name": "mavenOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mavenOpts",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenOpts(String mavenOpts)",
                            "html": "Specifies the JVM options needed when launching Maven as an external process.\r\n\r\n When specified multiple times, the options will be concatenated.\r\n     ",
                            "firstSentenceCommentText": "Specifies the JVM options needed when launching Maven as an external process."
                        }
                    ]
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "props",
                                    "type": "Map"
                                }
                            ],
                            "text": "properties(Map props)",
                            "availableSince": "1.21",
                            "html": "Adds properties for the Maven build.\r\n     ",
                            "firstSentenceCommentText": "Adds properties for the Maven build."
                        }
                    ]
                },
                {
                    "name": "property",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "property(String key, String value)",
                            "availableSince": "1.21",
                            "html": "Adds a property for the Maven build.\r\n     ",
                            "firstSentenceCommentText": "Adds a property for the Maven build."
                        }
                    ]
                },
                {
                    "name": "providedSettings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "settingsName",
                                    "type": "String"
                                }
                            ],
                            "text": "providedSettings(String settingsName)",
                            "availableSince": "1.25",
                            "html": "Specifies the managed Maven settings to be used.\r\n     ",
                            "firstSentenceCommentText": "Specifies the managed Maven settings to be used."
                        }
                    ],
                    "plugin": "config-file-provider"
                },
                {
                    "name": "rootPOM",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rootPOM",
                                    "type": "String"
                                }
                            ],
                            "text": "rootPOM(String rootPOM)",
                            "html": "Specifies the path to the root POM.\r\n     ",
                            "firstSentenceCommentText": "Specifies the path to the root POM."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshCredentialsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshCredentialsContext",
            "methods": [
                {
                    "name": "key",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                }
                            ],
                            "text": "key(String key)"
                        }
                    ]
                },
                {
                    "name": "pathToKey",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pathToKey",
                                    "type": "String"
                                }
                            ],
                            "text": "pathToKey(String pathToKey)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshTransferSetContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshTransferSetContext",
            "methods": [
                {
                    "name": "excludeFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludeFiles",
                                    "type": "String"
                                }
                            ],
                            "text": "excludeFiles(String excludeFiles)"
                        }
                    ]
                },
                {
                    "name": "execCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execCommand",
                                    "type": "String"
                                }
                            ],
                            "text": "execCommand(String execCommand)"
                        }
                    ]
                },
                {
                    "name": "execInPty",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execInPty",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "execInPty(boolean execInPty = true)"
                        }
                    ]
                },
                {
                    "name": "execTimeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execTimeout",
                                    "type": "long"
                                }
                            ],
                            "text": "execTimeout(long execTimeout)"
                        }
                    ]
                },
                {
                    "name": "flattenFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "flattenFiles(boolean flattenFiles = true)"
                        }
                    ]
                },
                {
                    "name": "makeEmptyDirs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "makeEmptyDirs",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "makeEmptyDirs(boolean makeEmptyDirs = true)"
                        }
                    ]
                },
                {
                    "name": "noDefaultExcludes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "noDefaultExcludes",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "noDefaultExcludes(boolean noDefaultExcludes = true)"
                        }
                    ]
                },
                {
                    "name": "patternSeparator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patternSeparator",
                                    "type": "String"
                                }
                            ],
                            "text": "patternSeparator(String patternSeparator)"
                        }
                    ]
                },
                {
                    "name": "remoteDirIsDateFormat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteDirIsDateFormat",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "remoteDirIsDateFormat(boolean remoteDirIsDateFormat = true)"
                        }
                    ]
                },
                {
                    "name": "remoteDirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteDirectory",
                                    "type": "String"
                                }
                            ],
                            "text": "remoteDirectory(String remoteDirectory)"
                        }
                    ]
                },
                {
                    "name": "removePrefix",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "prefix",
                                    "type": "String"
                                }
                            ],
                            "text": "removePrefix(String prefix)"
                        }
                    ]
                },
                {
                    "name": "sourceFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourceFiles",
                                    "type": "String"
                                }
                            ],
                            "text": "sourceFiles(String sourceFiles)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshServerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshServerContext",
            "methods": [
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "username",
                                    "type": "String"
                                },
                                {
                                    "name": "credentialsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "credentials(String username, Closure credentialsClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshCredentialsContext"
                        }
                    ]
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "text": "label(String label)"
                        }
                    ]
                },
                {
                    "name": "retry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "retries",
                                    "type": "int",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "delay",
                                    "type": "int",
                                    "defaultValue": "10000"
                                }
                            ],
                            "text": "retry(int retries = 0, int delay = 10000)"
                        }
                    ]
                },
                {
                    "name": "transferSet",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "transferSetClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "transferSet(Closure transferSetClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshTransferSetContext"
                        }
                    ]
                },
                {
                    "name": "verbose",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verbose",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "verbose(boolean verbose = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext",
            "methods": [
                {
                    "name": "alwaysPublishFromMaster",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alwaysPublishFromMaster",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "alwaysPublishFromMaster(boolean alwaysPublishFromMaster = true)"
                        }
                    ]
                },
                {
                    "name": "continueOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "continueOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "continueOnError(boolean continueOnError = true)"
                        }
                    ]
                },
                {
                    "name": "failOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failOnError(boolean failOnError = true)"
                        }
                    ]
                },
                {
                    "name": "parameterizedPublishing",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                }
                            ],
                            "text": "parameterizedPublishing(String parameterName)"
                        }
                    ]
                },
                {
                    "name": "server",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "serverClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "server(String name, Closure serverClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshServerContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.PythonContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.PythonContext",
            "methods": [
                {
                    "name": "command",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "command(String command)"
                        }
                    ]
                },
                {
                    "name": "ignoreExitCode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignoreExitCode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "ignoreExitCode(boolean ignoreExitCode = true)"
                        }
                    ]
                },
                {
                    "name": "nature",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nature",
                                    "type": "String"
                                }
                            ],
                            "text": "nature(String nature)"
                        }
                    ]
                },
                {
                    "name": "pythonName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pythonName",
                                    "type": "String"
                                }
                            ],
                            "text": "pythonName(String pythonName)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RakeContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RakeContext",
            "methods": [
                {
                    "name": "bundleExec",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "bundleExec",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "bundleExec(boolean bundleExec = true)"
                        }
                    ]
                },
                {
                    "name": "file",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "file",
                                    "type": "String"
                                }
                            ],
                            "text": "file(String file)"
                        }
                    ]
                },
                {
                    "name": "installation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "text": "installation(String installation)"
                        }
                    ]
                },
                {
                    "name": "libDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "libDir",
                                    "type": "String"
                                }
                            ],
                            "text": "libDir(String libDir)"
                        }
                    ]
                },
                {
                    "name": "silent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "silent",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "silent(boolean silent = true)"
                        }
                    ]
                },
                {
                    "name": "task",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "task",
                                    "type": "String"
                                }
                            ],
                            "text": "task(String task)"
                        }
                    ]
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "tasks(Iterable<String> tasks)"
                        }
                    ]
                },
                {
                    "name": "workingDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workingDir",
                                    "type": "String"
                                }
                            ],
                            "text": "workingDir(String workingDir)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext",
            "methods": [
                {
                    "name": "blockBuildUntilComplete",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "blockUntilBuildComplete",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "blockBuildUntilComplete(boolean blockUntilBuildComplete = true)",
                            "availableSince": "1.29"
                        }
                    ]
                },
                {
                    "name": "parameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "parameter(String name, String value)"
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameters",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "parameters(Map<String, String> parameters)"
                        }
                    ]
                },
                {
                    "name": "pollInterval",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pollInterval",
                                    "type": "int"
                                }
                            ],
                            "text": "pollInterval(int pollInterval)",
                            "availableSince": "1.29"
                        }
                    ]
                },
                {
                    "name": "preventRemoteBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "preventRemoteBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "preventRemoteBuildQueue(boolean preventRemoteBuildQueue = true)",
                            "availableSince": "1.29"
                        }
                    ]
                },
                {
                    "name": "shouldNotFailBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldNotFailBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shouldNotFailBuild(boolean shouldNotFailBuild = true)",
                            "availableSince": "1.29"
                        }
                    ]
                },
                {
                    "name": "token",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                }
                            ],
                            "text": "token(String token)",
                            "availableSince": "1.38"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorArtifactContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorArtifactContext",
            "methods": [
                {
                    "name": "artifactId",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactId",
                                    "type": "String"
                                }
                            ],
                            "text": "artifactId(String artifactId)",
                            "html": "Id of the Maven artifact.\r\n     ",
                            "firstSentenceCommentText": "Id of the Maven artifact."
                        }
                    ]
                },
                {
                    "name": "classifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classifier",
                                    "type": "String"
                                }
                            ],
                            "text": "classifier(String classifier)",
                            "html": "Optional Maven classifier.\r\n     ",
                            "firstSentenceCommentText": "Optional Maven classifier."
                        }
                    ]
                },
                {
                    "name": "extension",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "extension",
                                    "type": "String"
                                }
                            ],
                            "text": "extension(String extension)",
                            "html": "Artifact extension, defaults to <code>jar</code>.\r\n     ",
                            "firstSentenceCommentText": "Artifact extension, defaults to jar."
                        }
                    ]
                },
                {
                    "name": "groupId",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groupId",
                                    "type": "String"
                                }
                            ],
                            "text": "groupId(String groupId)",
                            "html": "Id of the Maven group.\r\n     ",
                            "firstSentenceCommentText": "Id of the Maven group."
                        }
                    ]
                },
                {
                    "name": "targetFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetFileName",
                                    "type": "String"
                                }
                            ],
                            "text": "targetFileName(String targetFileName)",
                            "html": "Optional target file name.\r\n     ",
                            "firstSentenceCommentText": "Optional target file name."
                        }
                    ]
                },
                {
                    "name": "version",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "text": "version(String version)",
                            "html": "Version of the artifact to download.\r\n     ",
                            "firstSentenceCommentText": "Version of the artifact to download."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext",
            "methods": [
                {
                    "name": "artifact",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "artifact(Closure artifactClosure)",
                            "html": "Configures the resolution of an artifact from an repository using the repository-connector plugin.",
                            "firstSentenceCommentText": "Configures the resolution of an artifact from an repository using the repository-connector plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorArtifactContext"
                        }
                    ]
                },
                {
                    "name": "enableRepoLogging",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "enableRepoLogging",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "enableRepoLogging(boolean enableRepoLogging = true)",
                            "html": "Enables logging for repository and transfer. Not enabled by default.",
                            "firstSentenceCommentText": "Enables logging for repository and transfer. "
                        }
                    ]
                },
                {
                    "name": "failOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failOnError(boolean failOnError = true)",
                            "html": "Fails the build on the first artifact, which can not be retrieved. Not enabled by default.",
                            "firstSentenceCommentText": "Fails the build on the first artifact, which can not be retrieved. "
                        }
                    ]
                },
                {
                    "name": "releaseUpdatePolicy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "updatePolicy",
                                    "type": "String"
                                }
                            ],
                            "text": "releaseUpdatePolicy(String updatePolicy)",
                            "html": "Maven release update policy, defaults to <code>daily</code>.\r\n     ",
                            "firstSentenceCommentText": "Maven release update policy, defaults to daily."
                        }
                    ]
                },
                {
                    "name": "snapshotUpdatePolicy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "updatePolicy",
                                    "type": "String"
                                }
                            ],
                            "text": "snapshotUpdatePolicy(String updatePolicy)",
                            "html": "Maven snapshot update policy, defaults to <code>daily</code>.\r\n     ",
                            "firstSentenceCommentText": "Maven snapshot update policy, defaults to daily."
                        }
                    ]
                },
                {
                    "name": "targetDirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetDirectory",
                                    "type": "String"
                                }
                            ],
                            "text": "targetDirectory(String targetDirectory)",
                            "html": "Defines the directory where the artifact gets stored. Not set by default.",
                            "firstSentenceCommentText": "Defines the directory where the artifact gets stored. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext",
            "methods": [
                {
                    "name": "binding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "binding(String name, String value)"
                        }
                    ]
                },
                {
                    "name": "classpath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classpath",
                                    "type": "String"
                                }
                            ],
                            "text": "classpath(String classpath)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext",
            "methods": [
                {
                    "name": "clear",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clear",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "clear(boolean clear = true)"
                        }
                    ]
                },
                {
                    "name": "command",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "command(String command)"
                        }
                    ]
                },
                {
                    "name": "ignoreExitCode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignoreExitCode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "ignoreExitCode(boolean ignoreExitCode = true)"
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)"
                        }
                    ]
                },
                {
                    "name": "nature",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nature",
                                    "type": "String"
                                }
                            ],
                            "text": "nature(String nature)"
                        }
                    ]
                },
                {
                    "name": "pythonName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pythonName",
                                    "type": "String"
                                }
                            ],
                            "text": "pythonName(String pythonName)"
                        }
                    ]
                },
                {
                    "name": "systemSitePackages",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "systemSitePackages",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "systemSitePackages(boolean systemSitePackages = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.StepContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.StepContext",
            "methods": [
                {
                    "name": "ant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(String targets, Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(String targets, String buildFile, Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antInstallation",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(String targets, String buildFile, String antInstallation, Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        }
                    ],
                    "plugin": "ant",
                    "examples": "job('example') {\r\n    steps {\r\n        ant {\r\n            target('test')\r\n            targets(['publish', 'deploy'])\r\n            prop('logging', 'info')\r\n            props('test.threads': 10, 'input.status':'release')\r\n            buildFile('dir1/build.xml')\r\n            javaOpt('-Xmx1g')\r\n            javaOpts(['-Dprop2=value2', '-Dprop3=value3'])\r\n            antInstallation('Ant 1.8')\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "batchFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "batchFile(String command)",
                            "html": "Runs a Windows batch script.\r\n\r\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\r\n the script from a file.",
                            "firstSentenceCommentText": "Runs a Windows batch script."
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        batchFile('echo Hello World!')\r\n        batchFile(readFileFromWorkspace('build.bat'))\r\n    }\r\n}\r\n"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regexp",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "buildDescription(String regexp, String description = null)",
                            "availableSince": "1.31",
                            "html": "Set a build description based upon a regular expression test of the log file.\r\n     ",
                            "firstSentenceCommentText": "Set a build description based upon a regular expression test of the log file."
                        }
                    ],
                    "plugin": "description-setter",
                    "examples": "job('example') {\r\n    steps {\r\n        buildDescription(/.*\\[INFO\\] Uploading project information for [^\\s]* ([^\\s]*)/)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "clangScanBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "clangScanBuild(Closure closure)",
                            "availableSince": "1.37",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext"
                        }
                    ],
                    "plugin": "clang-scanbuild-plugin"
                },
                {
                    "name": "conditionalSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionalStepsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "conditionalSteps(Closure conditionalStepsClosure)",
                            "availableSince": "1.20",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext"
                        }
                    ],
                    "plugin": "conditional-buildstep"
                },
                {
                    "name": "copyArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, String targetPath, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, String targetPath = '', boolean flattenFiles, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "optionalAllowed",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, String targetPath = '', boolean flattenFiles, boolean optionalAllowed, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, Closure copyArtifactClosure = null)",
                            "availableSince": "1.33",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext"
                        }
                    ],
                    "plugin": "copyartifact"
                },
                {
                    "name": "criticalBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "criticalBlock(Closure closure)",
                            "availableSince": "1.24",
                            "html": "Contains the build steps of the critical zone defined by the\r\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.\r\n     ",
                            "firstSentenceCommentText": "Contains the build steps of the critical zone defined by the\r\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "plugin": "Exclusion",
                    "examples": "job('example') {\r\n    wrappers {\r\n        exclusionResources('first', 'second')\r\n    }\r\n    steps {\r\n        criticalBlock {\r\n            shell('echo Hello World!')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "debianPackage(String path, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DebianContext"
                        }
                    ],
                    "plugin": "debian-package-builder"
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "downstreamParameterized(Closure downstreamClosure)",
                            "availableSince": "1.20",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamContext"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                },
                {
                    "name": "dsl",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "dsl(Closure configure)",
                            "availableSince": "1.16",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DslContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "scriptText",
                                    "type": "String"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "dsl(String scriptText, String removedJobAction = null, boolean ignoreExisting = false)",
                            "availableSince": "1.16"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "externalScripts",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "dsl(Iterable<String> externalScripts, String removedJobAction = null, boolean ignoreExisting = false)",
                            "availableSince": "1.16"
                        }
                    ]
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "availableSince": "1.21",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example') {\r\n    steps {\r\n        environmentVariables {\r\n            env('ONE', '1')\r\n            envs(FOO: 'bar', TEST: '123')\r\n            propertiesFile('env.properties')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "gradle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gradleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "gradle(Closure gradleClosure)",
                            "availableSince": "1.27",
                            "html": "Invokes a Gradle build script.\r\n     ",
                            "firstSentenceCommentText": "Invokes a Gradle build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GradleContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "switches",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapper",
                                    "type": "Boolean",
                                    "defaultValue": "true"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "gradle(String tasks = null, String switches = null, Boolean useWrapper = true, Closure configure = null)",
                            "html": "Invokes a Gradle build script.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\r\n <TT>hudson.plugins.gradle.Gradle</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Gradle build script."
                        }
                    ],
                    "plugin": "gradle",
                    "examples": "job('example') {\r\n    steps {\r\n        gradle('check')\r\n        gradle {\r\n            tasks('clean')\r\n            tasks('check')\r\n            switches('--info')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "grails",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "grails(Closure grailsClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targetsArg",
                                    "type": "String"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "grails(String targetsArg, Closure grailsClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targetsArg",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapperArg",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "grails(String targetsArg = null, boolean useWrapperArg = false, Closure grailsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        }
                    ],
                    "plugin": "grails"
                },
                {
                    "name": "groovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyCommand(String command, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyCommand(String command, String groovyName, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ]
                },
                {
                    "name": "groovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyScriptFile(String fileName, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyScriptFile(String fileName, String groovyName, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ]
                },
                {
                    "name": "httpRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "requestUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "httpRequest(String requestUrl, Closure closure = null)",
                            "availableSince": "1.28",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext"
                        }
                    ],
                    "plugin": "http_request"
                },
                {
                    "name": "maven",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "maven(Closure closure)",
                            "availableSince": "1.20",
                            "html": "Invokes a Maven build.\r\n     ",
                            "firstSentenceCommentText": "Invokes a Maven build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.MavenContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pom",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "maven(String targets = null, String pom = null, Closure configure = null)",
                            "html": "Invokes a Maven build.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\r\n <TT>hudson.tasks.Maven</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Maven build."
                        }
                    ],
                    "plugin": "maven-plugin",
                    "examples": "job('example') {\r\n    steps {\r\n        maven('verify')\r\n        maven('clean verify', 'module-a/pom.xml')\r\n        maven {\r\n            goals('clean')\r\n            goals('verify')\r\n            mavenOpts('-Xms256m')\r\n            mavenOpts('-Xmx512m')\r\n            localRepository(LocalRepositoryLocation.LOCAL_TO_WORKSPACE)\r\n            properties(skipTests: true)\r\n            mavenInstallation('Maven 3.1.1')\r\n            providedSettings('central-mirror')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "nodejsCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commandScript",
                                    "type": "String"
                                },
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "text": "nodejsCommand(String commandScript, String installation)",
                            "availableSince": "1.31",
                            "html": "Executes a NodeJS script. Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read scripts from a file.\r\n     ",
                            "firstSentenceCommentText": "Executes a NodeJS script. "
                        }
                    ],
                    "plugin": "nodejs",
                    "examples": "job('example') {\r\n    steps {\r\n        nodejsCommand('console.log(\"Hello World!\")', 'Node 0.12.0')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "powerShell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "powerShell(String command)",
                            "availableSince": "1.32",
                            "html": "Runs a Windows PowerShell script.\r\n\r\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\r\n the script from a file.\r\n     ",
                            "firstSentenceCommentText": "Runs a Windows PowerShell script."
                        }
                    ],
                    "plugin": "powershell",
                    "examples": "job('example') {\r\n    steps {\r\n        powerShell('Write-Output \"Hello World!\"')\r\n        powerShell(readFileFromWorkspace('build.ps1'))\r\n    }\r\n}\r\n"
                },
                {
                    "name": "prerequisite",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectList",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "warningOnlyBool",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "prerequisite(String projectList = '', boolean warningOnlyBool = false)",
                            "availableSince": "1.19"
                        }
                    ],
                    "plugin": "prereq-buildstep"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishOverSsh(Closure publishOverSshClosure)",
                            "availableSince": "1.28",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "plugin": "publish-over-ssh"
                },
                {
                    "name": "python",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "python(Closure closure)",
                            "availableSince": "1.38",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PythonContext"
                        }
                    ],
                    "plugin": "shiningpanda"
                },
                {
                    "name": "rake",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rake(Closure rakeClosure = null)",
                            "availableSince": "1.25",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasksArg",
                                    "type": "String"
                                },
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rake(String tasksArg, Closure rakeClosure = null)",
                            "availableSince": "1.25",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        }
                    ],
                    "plugin": "rake"
                },
                {
                    "name": "remoteTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteJenkins",
                                    "type": "String"
                                },
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "remoteTrigger(String remoteJenkins, String jobName, Closure closure = null)",
                            "availableSince": "1.22",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext"
                        }
                    ],
                    "plugin": "Parameterized-Remote-Trigger"
                },
                {
                    "name": "resolveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repositoryConnectorClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "resolveArtifacts(Closure repositoryConnectorClosure)",
                            "availableSince": "1.29",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext"
                        }
                    ],
                    "plugin": "repository-connector"
                },
                {
                    "name": "sbt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sbtName",
                                    "type": "String"
                                },
                                {
                                    "name": "actions",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sbtFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "jvmFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "subdirPath",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "sbt(String sbtName, String actions = null, String sbtFlags = null, String jvmFlags = null, String subdirPath = null, Closure configure = null)",
                            "availableSince": "1.16",
                            "html": "Invokes the Scala Build Tool (SBT).\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\r\n <TT>org.jvnet.hudson.plugins.SbtPluginBuilder</TT> node is passed into the configure block.\r\n     ",
                            "firstSentenceCommentText": "Invokes the Scala Build Tool (SBT)."
                        }
                    ],
                    "plugin": "sbt",
                    "examples": "job('example') {\r\n    steps {\r\n        sbt('SBT 0.12.3', 'test', '-Dsbt.log.noformat=true', '-Xmx2G -Xms512M', 'subproject')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "setBuildResult",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "result",
                                    "type": "String"
                                }
                            ],
                            "text": "setBuildResult(String result)",
                            "availableSince": "1.35",
                            "html": "Set the build status.\r\n\r\n Must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT>, <TT>'ABORTED'</TT> or <TT>'CYCLE'</TT>.\r\n     ",
                            "firstSentenceCommentText": "Set the build status."
                        }
                    ],
                    "plugin": "fail-the-build-plugin",
                    "examples": "job('example') {\r\n    steps {\r\n        setBuildResult('UNSTABLE')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "shell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "shell(String command)",
                            "html": "Runs a shell script.\r\n\r\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\r\n the script from a file.",
                            "firstSentenceCommentText": "Runs a shell script."
                        }
                    ],
                    "examples": "job('example') {\r\n  steps {\r\n      shell('echo Hello World!')\r\n      shell(readFileFromWorkspace('build.sh'))\r\n  }\r\n}\r\n"
                },
                {
                    "name": "systemGroovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "systemGroovyCommand(String command, Closure systemGroovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ]
                },
                {
                    "name": "systemGroovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "systemGroovyScriptFile(String fileName, Closure systemGroovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ]
                },
                {
                    "name": "vSpherePowerOff",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "text": "vSpherePowerOff(String server, String vm)",
                            "availableSince": "1.25"
                        }
                    ]
                },
                {
                    "name": "vSpherePowerOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "text": "vSpherePowerOn(String server, String vm)",
                            "availableSince": "1.25"
                        }
                    ]
                },
                {
                    "name": "vSphereRevertToSnapshot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                },
                                {
                                    "name": "snapshot",
                                    "type": "String"
                                }
                            ],
                            "text": "vSphereRevertToSnapshot(String server, String vm, String snapshot)",
                            "availableSince": "1.25"
                        }
                    ]
                },
                {
                    "name": "virtualenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "virtualenv(Closure closure)",
                            "availableSince": "1.38",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext"
                        }
                    ],
                    "plugin": "shiningpanda"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext",
            "methods": [
                {
                    "name": "onlyIfBuildSucceeds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyIfBuildSucceeds",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "onlyIfBuildSucceeds(boolean onlyIfBuildSucceeds = true)"
                        }
                    ]
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stepClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure stepClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext",
            "methods": [
                {
                    "name": "task",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logText",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "escalate",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "runIfSuccessful",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "task(String logText, String script, boolean escalate = false, boolean runIfSuccessful = false)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext",
            "methods": [
                {
                    "name": "discardOldBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "discardOldBuilds(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)"
                        }
                    ]
                },
                {
                    "name": "publishFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishFailed",
                                    "type": "boolean"
                                }
                            ],
                            "text": "publishFailed(boolean publishFailed)"
                        }
                    ]
                },
                {
                    "name": "publishUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishUnstable",
                                    "type": "boolean"
                                }
                            ],
                            "text": "publishUnstable(boolean publishUnstable)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext",
            "methods": [
                {
                    "name": "archiveMethod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                }
                            ],
                            "text": "archiveMethod(String archiveMethod)"
                        }
                    ]
                },
                {
                    "name": "criteria",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "criteria",
                                    "type": "String"
                                }
                            ],
                            "text": "criteria(String criteria)"
                        }
                    ]
                },
                {
                    "name": "overrideDefaultExcludes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overrideDefaultExcludes",
                                    "type": "boolean"
                                }
                            ],
                            "text": "overrideDefaultExcludes(boolean overrideDefaultExcludes)"
                        }
                    ]
                },
                {
                    "name": "workspaceExcludeGlob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                }
                            ],
                            "text": "workspaceExcludeGlob(String workspaceExcludeGlob)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportTargetContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportTargetContext",
            "methods": [
                {
                    "name": "allowMissing",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowMissing",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "allowMissing(boolean allowMissing = true)"
                        }
                    ],
                    "plugin": "htmlpublisher"
                },
                {
                    "name": "alwaysLinkToLastBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alwaysLinkToLastBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "alwaysLinkToLastBuild(boolean alwaysLinkToLastBuild = true)",
                            "availableSince": "1.35"
                        }
                    ],
                    "plugin": "htmlpublisher"
                },
                {
                    "name": "keepAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepAll",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepAll(boolean keepAll = true)"
                        }
                    ]
                },
                {
                    "name": "reportFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFiles",
                                    "type": "String"
                                }
                            ],
                            "text": "reportFiles(String reportFiles)"
                        }
                    ]
                },
                {
                    "name": "reportName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportName",
                                    "type": "String"
                                }
                            ],
                            "text": "reportName(String reportName)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext",
            "methods": [
                {
                    "name": "report",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportDir",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "report(String reportDir, Closure closure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportTargetContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JabberContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext",
            "methods": [
                {
                    "name": "channelNotificationName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "channelNotificationName",
                                    "type": "String"
                                }
                            ],
                            "text": "channelNotificationName(String channelNotificationName)"
                        }
                    ]
                },
                {
                    "name": "notifyCulprits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyCulprits",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyCulprits(boolean notifyCulprits = true)"
                        }
                    ]
                },
                {
                    "name": "notifyFixers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyFixers",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyFixers(boolean notifyFixers = true)"
                        }
                    ]
                },
                {
                    "name": "notifyOnBuildStart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyOnBuildStart",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyOnBuildStart(boolean notifyOnBuildStart = true)"
                        }
                    ]
                },
                {
                    "name": "notifySuspects",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifySuspects",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifySuspects(boolean notifySuspects = true)"
                        }
                    ]
                },
                {
                    "name": "notifyUpstreamCommitters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyUpstreamCommitters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyUpstreamCommitters(boolean notifyUpstreamCommitters = true)"
                        }
                    ]
                },
                {
                    "name": "strategyName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                }
                            ],
                            "text": "strategyName(String strategyName)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext",
            "methods": [
                {
                    "name": "disableArchiveOutput",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableArchiveOutput",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disableArchiveOutput(boolean disableArchiveOutput = true)",
                            "availableSince": "1.33"
                        }
                    ],
                    "plugin": "robot"
                },
                {
                    "name": "logFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logFileName",
                                    "type": "String"
                                }
                            ],
                            "text": "logFileName(String logFileName)"
                        }
                    ]
                },
                {
                    "name": "onlyCritical",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyCritical",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "onlyCritical(boolean onlyCritical = true)"
                        }
                    ]
                },
                {
                    "name": "otherFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String..."
                                }
                            ],
                            "text": "otherFiles(String... files)",
                            "availableSince": "1.33"
                        }
                    ],
                    "plugin": "robot"
                },
                {
                    "name": "outputFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "outputFileName",
                                    "type": "String"
                                }
                            ],
                            "text": "outputFileName(String outputFileName)"
                        }
                    ]
                },
                {
                    "name": "outputPath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "outputPath",
                                    "type": "String"
                                }
                            ],
                            "text": "outputPath(String outputPath)"
                        }
                    ]
                },
                {
                    "name": "passThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "passThreshold",
                                    "type": "double"
                                }
                            ],
                            "text": "passThreshold(double passThreshold)"
                        }
                    ]
                },
                {
                    "name": "reportFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFileName",
                                    "type": "String"
                                }
                            ],
                            "text": "reportFileName(String reportFileName)"
                        }
                    ]
                },
                {
                    "name": "unstableThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstableThreshold",
                                    "type": "double"
                                }
                            ],
                            "text": "unstableThreshold(double unstableThreshold)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ScpContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext",
            "methods": [
                {
                    "name": "entries",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sources",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "destination",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "keepHierarchy",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "entries(Iterable<String> sources, String destination = '', boolean keepHierarchy = false)",
                            "availableSince": "1.27"
                        }
                    ]
                },
                {
                    "name": "entry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "String"
                                },
                                {
                                    "name": "destination",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "keepHierarchy",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "entry(String source, String destination = '', boolean keepHierarchy = false)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext",
            "methods": [
                {
                    "name": "fixedDelay",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "delay",
                                    "type": "int"
                                }
                            ],
                            "text": "fixedDelay(int delay)"
                        }
                    ]
                },
                {
                    "name": "progressiveDelay",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "increment",
                                    "type": "int"
                                },
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "text": "progressiveDelay(int increment, int max)"
                        }
                    ]
                },
                {
                    "name": "rerunIfUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rerunIfUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "rerunIfUnstable(boolean rerunIfUnstable = true)"
                        }
                    ]
                },
                {
                    "name": "retryLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "retryLimit",
                                    "type": "int"
                                }
                            ],
                            "text": "retryLimit(int retryLimit)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext",
            "methods": [
                {
                    "name": "nodeFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "nodeFilter(String key, String value)"
                        }
                    ]
                },
                {
                    "name": "nodeFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodeFilters",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "nodeFilters(Map<String, String> nodeFilters)"
                        }
                    ]
                },
                {
                    "name": "option",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "option(String key, String value)"
                        }
                    ]
                },
                {
                    "name": "options",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "options",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "options(Map<String, String> options)"
                        }
                    ]
                },
                {
                    "name": "shouldFailTheBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldFailTheBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shouldFailTheBuild(boolean shouldFailTheBuild = true)"
                        }
                    ]
                },
                {
                    "name": "shouldWaitForRundeckJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldWaitForRundeckJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shouldWaitForRundeckJob(boolean shouldWaitForRundeckJob = true)"
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tag",
                                    "type": "String"
                                }
                            ],
                            "text": "tag(String tag)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.S3EntryContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.S3EntryContext",
            "methods": [
                {
                    "name": "flatten",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flatten",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "flatten(boolean flatten = true)",
                            "availableSince": "1.38"
                        }
                    ],
                    "plugin": "s3"
                },
                {
                    "name": "managedArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "managedArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "managedArtifacts(boolean managedArtifacts = true)"
                        }
                    ]
                },
                {
                    "name": "noUploadOnFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "noUploadOnFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "noUploadOnFailure(boolean noUploadOnFailure = true)"
                        }
                    ]
                },
                {
                    "name": "storageClass",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "storageClass",
                                    "type": "String"
                                }
                            ],
                            "text": "storageClass(String storageClass)"
                        }
                    ]
                },
                {
                    "name": "uploadFromSlave",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "uploadFromSlave",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "uploadFromSlave(boolean uploadFromSlave = true)"
                        }
                    ]
                },
                {
                    "name": "useServerSideEncryption",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useServerSideEncryption",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useServerSideEncryption(boolean useServerSideEncryption = true)",
                            "availableSince": "1.38"
                        }
                    ],
                    "plugin": "s3"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext",
            "methods": [
                {
                    "name": "entry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "String"
                                },
                                {
                                    "name": "bucketName",
                                    "type": "String"
                                },
                                {
                                    "name": "region",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "entry(String source, String bucketName, String region, Closure closure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3EntryContext"
                        }
                    ]
                },
                {
                    "name": "metadata",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "text": "metadata(String key, String value)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext",
            "methods": [
                {
                    "name": "customMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "customMessage",
                                    "type": "String"
                                }
                            ],
                            "text": "customMessage(String customMessage)"
                        }
                    ]
                },
                {
                    "name": "includeTestSummary",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeTestSummary",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "includeTestSummary(boolean includeTestSummary = true)"
                        }
                    ]
                },
                {
                    "name": "integrationToken",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "integrationToken",
                                    "type": "String"
                                }
                            ],
                            "text": "integrationToken(String integrationToken)"
                        }
                    ]
                },
                {
                    "name": "notifyAborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyAborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyAborted(boolean notifyAborted = true)"
                        }
                    ]
                },
                {
                    "name": "notifyBackToNormal",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBackToNormal",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyBackToNormal(boolean notifyBackToNormal = true)"
                        }
                    ]
                },
                {
                    "name": "notifyBuildStart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBuildStart",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyBuildStart(boolean notifyBuildStart = true)"
                        }
                    ]
                },
                {
                    "name": "notifyFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyFailure(boolean notifyFailure = true)"
                        }
                    ]
                },
                {
                    "name": "notifyNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyNotBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyNotBuilt(boolean notifyNotBuilt = true)"
                        }
                    ]
                },
                {
                    "name": "notifyRepeatedFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyRepeatedFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyRepeatedFailure(boolean notifyRepeatedFailure = true)"
                        }
                    ]
                },
                {
                    "name": "notifySuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifySuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifySuccess(boolean notifySuccess = true)"
                        }
                    ]
                },
                {
                    "name": "notifyUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "notifyUnstable(boolean notifyUnstable = true)"
                        }
                    ]
                },
                {
                    "name": "projectChannel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectChannel",
                                    "type": "String"
                                }
                            ],
                            "text": "projectChannel(String projectChannel)"
                        }
                    ]
                },
                {
                    "name": "showCommitList",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showCommitList",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showCommitList(boolean showCommitList = true)"
                        }
                    ]
                },
                {
                    "name": "teamDomain",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "teamDomain",
                                    "type": "String"
                                }
                            ],
                            "text": "teamDomain(String teamDomain)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.SonarTriggersContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.SonarTriggersContext",
            "methods": [
                {
                    "name": "skipIfEnvironmentVariable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "environmentVariable",
                                    "type": "String"
                                }
                            ],
                            "text": "skipIfEnvironmentVariable(String environmentVariable)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.SonarContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "text": "branch(String branch)"
                        }
                    ]
                },
                {
                    "name": "overrideTriggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarTriggersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "overrideTriggers(Closure sonarTriggersClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarTriggersContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext",
            "methods": [
                {
                    "name": "commitSha1",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commitSha1",
                                    "type": "String"
                                }
                            ],
                            "text": "commitSha1(String commitSha1)"
                        }
                    ]
                },
                {
                    "name": "keepRepeatedBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepRepeatedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepRepeatedBuilds(boolean keepRepeatedBuilds = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext",
            "methods": [
                {
                    "name": "fauxProjectPath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fauxProjectPath",
                                    "type": "String"
                                }
                            ],
                            "text": "fauxProjectPath(String fauxProjectPath)"
                        }
                    ]
                },
                {
                    "name": "perFileDisplayLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "Integer"
                                }
                            ],
                            "text": "perFileDisplayLimit(Integer perFileDisplayLimit)"
                        }
                    ]
                },
                {
                    "name": "sourceEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourceEncoding",
                                    "type": "String"
                                }
                            ],
                            "text": "sourceEncoding(String sourceEncoding)"
                        }
                    ]
                },
                {
                    "name": "sourcePathPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourcePathPattern",
                                    "type": "String"
                                }
                            ],
                            "text": "sourcePathPattern(String sourcePathPattern)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext",
            "methods": [
                {
                    "name": "canRunOnFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "canRunOnFailed",
                                    "type": "Object",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "canRunOnFailed(Object canRunOnFailed = true)"
                        }
                    ]
                },
                {
                    "name": "computeNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "computeNew",
                                    "type": "Object"
                                }
                            ],
                            "text": "computeNew(Object computeNew)"
                        }
                    ]
                },
                {
                    "name": "defaultEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "encoding",
                                    "type": "String"
                                }
                            ],
                            "text": "defaultEncoding(String encoding)"
                        }
                    ]
                },
                {
                    "name": "excludePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludePattern",
                                    "type": "String"
                                }
                            ],
                            "text": "excludePattern(String excludePattern)"
                        }
                    ]
                },
                {
                    "name": "healthLimits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer"
                                },
                                {
                                    "name": "unHealthy",
                                    "type": "Integer"
                                }
                            ],
                            "text": "healthLimits(Integer healthy, Integer unHealthy)"
                        }
                    ]
                },
                {
                    "name": "includePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includePattern",
                                    "type": "String"
                                }
                            ],
                            "text": "includePattern(String includePattern)"
                        }
                    ]
                },
                {
                    "name": "resolveRelativePaths",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resolveRelativePaths",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "resolveRelativePaths(boolean resolveRelativePaths = true)"
                        }
                    ]
                },
                {
                    "name": "shouldDetectModules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDetectModules",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shouldDetectModules(boolean shouldDetectModules = true)"
                        }
                    ]
                },
                {
                    "name": "thresholdLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "limit",
                                    "type": "String"
                                }
                            ],
                            "text": "thresholdLimit(String limit)"
                        }
                    ]
                },
                {
                    "name": "thresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMap",
                                    "type": "Map"
                                }
                            ],
                            "text": "thresholds(Map thresholdMap)"
                        }
                    ]
                },
                {
                    "name": "useDeltaValues",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDeltaValues",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useDeltaValues(boolean useDeltaValues = true)"
                        }
                    ]
                },
                {
                    "name": "useStableBuildAsReference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useStableBuildAsReference",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useStableBuildAsReference(boolean useStableBuildAsReference = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext",
            "methods": [
                {
                    "name": "cleanWhenAborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenAborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "cleanWhenAborted(boolean cleanWhenAborted = true)"
                        }
                    ]
                },
                {
                    "name": "cleanWhenFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "cleanWhenFailure(boolean cleanWhenFailure = true)"
                        }
                    ]
                },
                {
                    "name": "cleanWhenNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenNotBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "cleanWhenNotBuilt(boolean cleanWhenNotBuilt = true)"
                        }
                    ]
                },
                {
                    "name": "cleanWhenSuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenSuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "cleanWhenSuccess(boolean cleanWhenSuccess = true)"
                        }
                    ]
                },
                {
                    "name": "cleanWhenUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "cleanWhenUnstable(boolean cleanWhenUnstable = true)"
                        }
                    ]
                },
                {
                    "name": "deleteCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteCommand",
                                    "type": "String"
                                }
                            ],
                            "text": "deleteCommand(String deleteCommand)",
                            "html": "If set, an external program will be used for deletion.",
                            "firstSentenceCommentText": "If set, an external program will be used for deletion."
                        }
                    ]
                },
                {
                    "name": "deleteDirectories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteDirectories",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "deleteDirectories(boolean deleteDirectories = true)",
                            "html": "If set, the pattern will also be applied to directories. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, the pattern will also be applied to directories. "
                        }
                    ]
                },
                {
                    "name": "excludePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "text": "excludePattern(String pattern)",
                            "html": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax."
                        }
                    ]
                },
                {
                    "name": "failBuildWhenCleanupFails",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failBuildWhenCleanupFails(boolean failBuild = true)"
                        }
                    ]
                },
                {
                    "name": "includePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "text": "includePattern(String pattern)",
                            "html": "Makes cleanup more selective by specifying file to be deleted using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be deleted using Ant syntax."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext",
            "methods": [
                {
                    "name": "aggregateDownstreamTestResults",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobs",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeFailedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "aggregateDownstreamTestResults(String jobs = null, boolean includeFailedBuilds = false)",
                            "availableSince": "1.19",
                            "html": "Configures Aggregate Downstream Test Results. Pass no args or null for jobs (first arg) to automatically\r\n aggregate downstream test results. Pass in comma-delimited list for first arg to manually choose jobs.\r\n Second argument is optional and sets whether failed builds are included.\r\n     ",
                            "firstSentenceCommentText": "Configures Aggregate Downstream Test Results. "
                        }
                    ]
                },
                {
                    "name": "allowBrokenBuildClaiming",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "allowBrokenBuildClaiming()",
                            "availableSince": "1.17"
                        }
                    ],
                    "plugin": "claim"
                },
                {
                    "name": "analysisCollector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "analysisCollectorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "analysisCollector(Closure analysisCollectorClosure = null)",
                            "availableSince": "1.26",
                            "html": "Configures the Analysis Collector Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Analysis Collector Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext"
                        }
                    ],
                    "plugin": "analysis-collector"
                },
                {
                    "name": "androidLint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "androidLint(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Android Lint Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Android Lint Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "android-lint"
                },
                {
                    "name": "archiveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "archiveArtifacts(Closure artifactsClosure)",
                            "availableSince": "1.20",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveArtifacts(String glob, String excludeGlob = null)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "latestOnly",
                                    "type": "boolean"
                                }
                            ],
                            "text": "archiveArtifacts(String glob, String excludeGlob, boolean latestOnly)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "archiveJavadoc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveJavadoc(Closure javadocClosure = null)",
                            "availableSince": "1.19",
                            "html": "Configures the Javadoc Plugin, used to archive Javadoc artifacts.\r\n     ",
                            "firstSentenceCommentText": "Configures the Javadoc Plugin, used to archive Javadoc artifacts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext"
                        }
                    ],
                    "plugin": "javadoc"
                },
                {
                    "name": "archiveJunit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "junitClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveJunit(String glob, Closure junitClosure = null)",
                            "availableSince": "1.26",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext"
                        }
                    ]
                },
                {
                    "name": "archiveXUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xUnitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "archiveXUnit(Closure xUnitClosure)",
                            "availableSince": "1.24",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext"
                        }
                    ],
                    "plugin": "xunit"
                },
                {
                    "name": "associatedFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "associatedFiles(String files = null)",
                            "availableSince": "1.20",
                            "html": "Configures the Associated Files plugin to associate archived files from\r\n outside Jenkins proper.\r\n     ",
                            "firstSentenceCommentText": "Configures the Associated Files plugin to associate archived files from\r\n outside Jenkins proper."
                        }
                    ],
                    "plugin": "associated-files"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "regularExpressionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "descriptionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "multiConfigurationBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "buildDescription(String regularExpression, String description = '', String regularExpressionForFailed = '', String descriptionForFailed = '', boolean multiConfigurationBuild = false)",
                            "availableSince": "1.17",
                            "html": "Configures the Description Setter Plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Description Setter Plugin."
                        }
                    ],
                    "plugin": "description-setter"
                },
                {
                    "name": "buildPipelineTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamProjectNames",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "buildPipelineTrigger(String downstreamProjectNames, Closure closure = null)",
                            "availableSince": "1.21",
                            "html": "Configures a Build Pipeline Trigger.\r\n     ",
                            "firstSentenceCommentText": "Configures a Build Pipeline Trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext"
                        }
                    ],
                    "plugin": "build-pipeline-plugin"
                },
                {
                    "name": "ccm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ccm(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the CCM Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the CCM Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "ccm"
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "checkstyle(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Checkstyle Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Checkstyle Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "checkstyle"
                },
                {
                    "name": "chucknorris",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "chucknorris()"
                        }
                    ],
                    "plugin": "chucknorris"
                },
                {
                    "name": "cobertura",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFile",
                                    "type": "String"
                                },
                                {
                                    "name": "coberturaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "cobertura(String reportFile, Closure coberturaClosure = null)",
                            "availableSince": "1.16",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext"
                        }
                    ],
                    "plugin": "cobertura"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repoIdArg",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "debianPackage(String repoIdArg, Closure closure = null)",
                            "availableSince": "1.36",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext"
                        }
                    ],
                    "plugin": "debian-package-builder"
                },
                {
                    "name": "dependencyCheck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "dependencyCheck(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the OWASP Dependency-Check Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the OWASP Dependency-Check Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "dependency-check-jenkins-plugin"
                },
                {
                    "name": "downstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "thresholdName",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "text": "downstream(String projectName, String thresholdName = 'SUCCESS')",
                            "html": "Downstream build",
                            "firstSentenceCommentText": "Downstream build"
                        }
                    ]
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "downstreamParameterized(Closure downstreamClosure)",
                            "html": "Trigger parameterized build on other projects.",
                            "firstSentenceCommentText": "Trigger parameterized build on other projects.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "highThreshold",
                                    "type": "Object",
                                    "defaultValue": "50"
                                },
                                {
                                    "name": "normalThreshold",
                                    "type": "Object",
                                    "defaultValue": "25"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "dry(String pattern, Object highThreshold = 50, Object normalThreshold = 25, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the DRY Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the DRY Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "dry"
                },
                {
                    "name": "emma",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "emmaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "emma(String fileSet = '', Closure emmaClosure = null)",
                            "availableSince": "1.20",
                            "html": "Configures the Emma Code Coverage plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Emma Code Coverage plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext"
                        }
                    ],
                    "plugin": "emma"
                },
                {
                    "name": "extendedEmail",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients = null, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients, String subjectTemplate, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "contentTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients, String subjectTemplate, String contentTemplate, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        }
                    ],
                    "plugin": "email-ext"
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "isRankActivated",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "findbugs(String pattern, boolean isRankActivated = false, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the findbugs publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the findbugs publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "findbugs"
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "recordBuildArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "fingerprint(String targets, boolean recordBuildArtifacts = false)",
                            "availableSince": "1.17",
                            "html": "Configures Fingerprinting.\r\n     ",
                            "firstSentenceCommentText": "Configures Fingerprinting."
                        }
                    ]
                },
                {
                    "name": "flexiblePublish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flexiblePublishClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "flexiblePublish(Closure flexiblePublishClosure)",
                            "availableSince": "1.26",
                            "html": "Configures the FlexiblePublish plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the FlexiblePublish plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext"
                        }
                    ],
                    "plugin": "flexible-publish"
                },
                {
                    "name": "flowdock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "flowdock(String token, Closure flowdockPublisherClosure = null)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tokens",
                                    "type": "String[]"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "flowdock(String[] tokens, Closure flowdockPublisherClosure = null)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        }
                    ],
                    "plugin": "jenkins-flowdock-plugin"
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitPublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "git(Closure gitPublisherClosure)",
                            "availableSince": "1.22",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext"
                        }
                    ],
                    "plugin": "git"
                },
                {
                    "name": "githubCommitNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "githubCommitNotifier()",
                            "availableSince": "1.21",
                            "html": "Create commit status notifications on the commits based on the outcome of the build.\r\n     ",
                            "firstSentenceCommentText": "Create commit status notifications on the commits based on the outcome of the build."
                        }
                    ],
                    "plugin": "github"
                },
                {
                    "name": "groovyPostBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior",
                                    "defaultValue": "Behavior.DoNothing"
                                }
                            ],
                            "text": "groovyPostBuild(String script, javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior behavior = Behavior.DoNothing)",
                            "availableSince": "1.19",
                            "html": "Configures the Groovy Postbuild script plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Groovy Postbuild script plugin."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "groovyPostbuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "groovyPostBuild(Closure groovyPostbuildClosure)",
                            "availableSince": "1.37",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext"
                        }
                    ],
                    "plugin": "groovy-postbuild"
                },
                {
                    "name": "hipChat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "hipChatClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "hipChat(Closure hipChatClosure = null)",
                            "availableSince": "1.33",
                            "html": "Allows notifications to be set to HipChat.\r\n     ",
                            "firstSentenceCommentText": "Allows notifications to be set to HipChat.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext"
                        }
                    ],
                    "plugin": "hipchat"
                },
                {
                    "name": "irc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ircClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "irc(Closure ircClosure)",
                            "availableSince": "1.15",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext"
                        }
                    ],
                    "plugin": "ircbot"
                },
                {
                    "name": "jacocoCodeCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jacocoClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "jacocoCodeCoverage(Closure jacocoClosure = null)",
                            "availableSince": "1.17",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext"
                        }
                    ],
                    "plugin": "jacoco"
                },
                {
                    "name": "joinTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "joinTriggerClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "joinTrigger(Closure joinTriggerClosure)",
                            "availableSince": "1.35",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext"
                        }
                    ],
                    "plugin": "join"
                },
                {
                    "name": "jshint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "jshint(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.20",
                            "html": "Configures the JsHint checkstyle Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the JsHint checkstyle Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "jshint-checkstyle"
                },
                {
                    "name": "mailer",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mailRecipients",
                                    "type": "String"
                                },
                                {
                                    "name": "dontNotifyEveryUnstableBuildBoolean",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sendToIndividualsBoolean",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "mailer(String mailRecipients, Boolean dontNotifyEveryUnstableBuildBoolean = false, Boolean sendToIndividualsBoolean = false)",
                            "availableSince": "1.17"
                        }
                    ],
                    "plugin": "mailer"
                },
                {
                    "name": "mavenDeploymentLinker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenDeploymentLinker(String regex)",
                            "availableSince": "1.23",
                            "html": "Configures the Maven Deployment Linker plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Maven Deployment Linker plugin."
                        }
                    ],
                    "plugin": "maven-deployment-linker"
                },
                {
                    "name": "mergePullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "mergePullRequest(Closure contextClosure = null)",
                            "availableSince": "1.33",
                            "html": "Configures the GitHub pull request builder plugin to perform an automatic request after a successful build.\r\n     ",
                            "firstSentenceCommentText": "Configures the GitHub pull request builder plugin to perform an automatic request after a successful build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext"
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "plotBuildData",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "plotsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "plotBuildData(Closure plotsClosure)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext"
                        }
                    ],
                    "plugin": "plot"
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "pmd(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the PMD Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the PMD Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "pmd"
                },
                {
                    "name": "postBuildScripts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildScripts(Closure closure)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext"
                        }
                    ],
                    "plugin": "postbuildscript"
                },
                {
                    "name": "postBuildTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildTask(Closure postBuildClosure)",
                            "availableSince": "1.19",
                            "html": "Configures the Jenkins Post Build Task plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Jenkins Post Build Task plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext"
                        }
                    ],
                    "plugin": "postbuild-task"
                },
                {
                    "name": "publishBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishBuild(Closure contextClosure = null)",
                            "availableSince": "1.33",
                            "html": "Configures the Build Publisher plugin to publish builds to a 'public' Jenkins server.\r\n     ",
                            "firstSentenceCommentText": "Configures the Build Publisher plugin to publish builds to a 'public' Jenkins server.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext"
                        }
                    ],
                    "plugin": "build-publisher"
                },
                {
                    "name": "publishCloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, Closure cloneWorkspaceClosure)",
                            "html": "Clone Workspace SCM",
                            "firstSentenceCommentText": "Clone Workspace SCM",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, String workspaceExcludeGlob, Closure cloneWorkspaceClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, String workspaceExcludeGlob, String criteria, String archiveMethod, Closure cloneWorkspaceClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlobArg",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlobArg",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "criteriaArg",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                },
                                {
                                    "name": "archiveMethodArg",
                                    "type": "String",
                                    "defaultValue": "'TAR'"
                                },
                                {
                                    "name": "overrideDefaultExcludesArg",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlobArg, String workspaceExcludeGlobArg = '', String criteriaArg = 'Any', String archiveMethodArg = 'TAR', boolean overrideDefaultExcludesArg = false, Closure cloneWorkspaceClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        }
                    ],
                    "plugin": "clone-workspace-scm"
                },
                {
                    "name": "publishHtml",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "htmlReportContext",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishHtml(Closure htmlReportContext)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext"
                        }
                    ],
                    "plugin": "htmlpublisher"
                },
                {
                    "name": "publishJabber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String target, Closure jabberClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                },
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String target, String strategyName, Closure jabberClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targetsArg",
                                    "type": "String"
                                },
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                },
                                {
                                    "name": "channelNotificationName",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String targetsArg, String strategyName, String channelNotificationName, Closure jabberClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        }
                    ],
                    "plugin": "jabber"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishOverSsh(Closure publishOverSshClosure)",
                            "availableSince": "1.34",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "plugin": "publish-over-ssh"
                },
                {
                    "name": "publishRobotFrameworkReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "robotClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishRobotFrameworkReports(Closure robotClosure = null)",
                            "availableSince": "1.21",
                            "html": "Configures Jenkins job to publish Robot Framework reports.\r\n By default the following values are applied. If an instance of a\r\n closure is provided, the values from the closure will take effect.\r\n     ",
                            "firstSentenceCommentText": "Configures Jenkins job to publish Robot Framework reports.\r\n ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext"
                        }
                    ],
                    "plugin": "robot"
                },
                {
                    "name": "publishScp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "site",
                                    "type": "String"
                                },
                                {
                                    "name": "scpClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishScp(String site, Closure scpClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext"
                        }
                    ],
                    "plugin": "scp"
                },
                {
                    "name": "retryBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "naginatorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "retryBuild(Closure naginatorClosure = null)",
                            "availableSince": "1.33",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext"
                        }
                    ],
                    "plugin": "naginator"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifier",
                                    "type": "String"
                                },
                                {
                                    "name": "rundeckClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rundeck(String jobIdentifier, Closure rundeckClosure = null)",
                            "availableSince": "1.24",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext"
                        }
                    ],
                    "plugin": "rundeck"
                },
                {
                    "name": "s3",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "profile",
                                    "type": "String"
                                },
                                {
                                    "name": "s3PublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "s3(String profile, Closure s3PublisherClosure)",
                            "availableSince": "1.26",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext"
                        }
                    ],
                    "plugin": "s3"
                },
                {
                    "name": "slackNotifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "slackNotificationsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "slackNotifications(Closure slackNotificationsClosure)",
                            "availableSince": "1.36",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext"
                        }
                    ],
                    "plugin": "slack"
                },
                {
                    "name": "sonar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "sonar(Closure sonarClosure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext"
                        }
                    ],
                    "plugin": "sonar"
                },
                {
                    "name": "stashNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stashNotifierClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "stashNotifier(Closure stashNotifierClosure = null)",
                            "availableSince": "1.23",
                            "html": "Configures the StashNotifier plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the StashNotifier plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext"
                        }
                    ],
                    "plugin": "stashNotifier"
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "excludePattern",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "high",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "normal",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "low",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "Object",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "tasks(String pattern, Object excludePattern = '', Object high = '', Object normal = '', Object low = '', Object ignoreCase = false, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Task Scanner Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Task Scanner Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "tasks"
                },
                {
                    "name": "textFinder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "alsoCheckConsoleOutput",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "succeedIfFound",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "unstableIfFound",
                                    "type": "Object",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "textFinder(String regularExpression, String fileSet = '', boolean alsoCheckConsoleOutput = false, boolean succeedIfFound = false, Object unstableIfFound = false)",
                            "availableSince": "1.19",
                            "html": "Configures the Jenkins Text Finder plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Jenkins Text Finder plugin."
                        }
                    ],
                    "plugin": "text-finder"
                },
                {
                    "name": "violations",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "violations(Closure violationsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "int"
                                },
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "violations(int perFileDisplayLimit, Closure violationsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        }
                    ],
                    "plugin": "violations"
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "consoleParsers",
                                    "type": "List"
                                },
                                {
                                    "name": "parserConfigurations",
                                    "type": "Map",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "warningsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "warnings(List consoleParsers, Map parserConfigurations = [:], Closure warningsClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Compiler Warnings Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Compiler Warnings Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext"
                        }
                    ],
                    "plugin": "warnings"
                },
                {
                    "name": "wsCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "wsCleanup(Closure closure = null)",
                            "availableSince": "1.23",
                            "html": "Configures the post build action of the Workspace Cleanup Plugin to delete the workspace.\r\n     ",
                            "firstSentenceCommentText": "Configures the post build action of the Workspace Cleanup Plugin to delete the workspace.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext"
                        }
                    ],
                    "plugin": "ws-cleanup"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext",
            "methods": [
                {
                    "name": "condition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "condition(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "publisher",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publisher(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ]
                },
                {
                    "name": "step",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "step(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "plugin": "any-buildstep"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.BuildFlowPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.BuildFlowPublisherContext",
            "methods": [
                {
                    "name": "aggregateBuildFlowTests",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "aggregateBuildFlowTests()",
                            "availableSince": "1.35"
                        }
                    ],
                    "plugin": "build-flow-test-aggregator"
                },
                {
                    "name": "aggregateDownstreamTestResults",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobs",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeFailedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "aggregateDownstreamTestResults(String jobs = null, boolean includeFailedBuilds = false)",
                            "availableSince": "1.19",
                            "html": "Configures Aggregate Downstream Test Results. Pass no args or null for jobs (first arg) to automatically\r\n aggregate downstream test results. Pass in comma-delimited list for first arg to manually choose jobs.\r\n Second argument is optional and sets whether failed builds are included.\r\n     ",
                            "firstSentenceCommentText": "Configures Aggregate Downstream Test Results. "
                        }
                    ]
                },
                {
                    "name": "allowBrokenBuildClaiming",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "allowBrokenBuildClaiming()",
                            "availableSince": "1.17"
                        }
                    ],
                    "plugin": "claim"
                },
                {
                    "name": "analysisCollector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "analysisCollectorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "analysisCollector(Closure analysisCollectorClosure = null)",
                            "availableSince": "1.26",
                            "html": "Configures the Analysis Collector Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Analysis Collector Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext"
                        }
                    ],
                    "plugin": "analysis-collector"
                },
                {
                    "name": "androidLint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "androidLint(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Android Lint Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Android Lint Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "android-lint"
                },
                {
                    "name": "archiveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "archiveArtifacts(Closure artifactsClosure)",
                            "availableSince": "1.20",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveArtifacts(String glob, String excludeGlob = null)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "latestOnly",
                                    "type": "boolean"
                                }
                            ],
                            "text": "archiveArtifacts(String glob, String excludeGlob, boolean latestOnly)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "archiveJavadoc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveJavadoc(Closure javadocClosure = null)",
                            "availableSince": "1.19",
                            "html": "Configures the Javadoc Plugin, used to archive Javadoc artifacts.\r\n     ",
                            "firstSentenceCommentText": "Configures the Javadoc Plugin, used to archive Javadoc artifacts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext"
                        }
                    ],
                    "plugin": "javadoc"
                },
                {
                    "name": "archiveJunit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "junitClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveJunit(String glob, Closure junitClosure = null)",
                            "availableSince": "1.26",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext"
                        }
                    ]
                },
                {
                    "name": "archiveXUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xUnitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "archiveXUnit(Closure xUnitClosure)",
                            "availableSince": "1.24",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext"
                        }
                    ],
                    "plugin": "xunit"
                },
                {
                    "name": "associatedFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "associatedFiles(String files = null)",
                            "availableSince": "1.20",
                            "html": "Configures the Associated Files plugin to associate archived files from\r\n outside Jenkins proper.\r\n     ",
                            "firstSentenceCommentText": "Configures the Associated Files plugin to associate archived files from\r\n outside Jenkins proper."
                        }
                    ],
                    "plugin": "associated-files"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "regularExpressionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "descriptionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "multiConfigurationBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "buildDescription(String regularExpression, String description = '', String regularExpressionForFailed = '', String descriptionForFailed = '', boolean multiConfigurationBuild = false)",
                            "availableSince": "1.17",
                            "html": "Configures the Description Setter Plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Description Setter Plugin."
                        }
                    ],
                    "plugin": "description-setter"
                },
                {
                    "name": "buildPipelineTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamProjectNames",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "buildPipelineTrigger(String downstreamProjectNames, Closure closure = null)",
                            "availableSince": "1.21",
                            "html": "Configures a Build Pipeline Trigger.\r\n     ",
                            "firstSentenceCommentText": "Configures a Build Pipeline Trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext"
                        }
                    ],
                    "plugin": "build-pipeline-plugin"
                },
                {
                    "name": "ccm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ccm(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the CCM Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the CCM Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "ccm"
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "checkstyle(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Checkstyle Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Checkstyle Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "checkstyle"
                },
                {
                    "name": "chucknorris",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "chucknorris()"
                        }
                    ],
                    "plugin": "chucknorris"
                },
                {
                    "name": "cobertura",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFile",
                                    "type": "String"
                                },
                                {
                                    "name": "coberturaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "cobertura(String reportFile, Closure coberturaClosure = null)",
                            "availableSince": "1.16",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext"
                        }
                    ],
                    "plugin": "cobertura"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repoIdArg",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "debianPackage(String repoIdArg, Closure closure = null)",
                            "availableSince": "1.36",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext"
                        }
                    ],
                    "plugin": "debian-package-builder"
                },
                {
                    "name": "dependencyCheck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "dependencyCheck(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the OWASP Dependency-Check Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the OWASP Dependency-Check Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "dependency-check-jenkins-plugin"
                },
                {
                    "name": "downstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "thresholdName",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "text": "downstream(String projectName, String thresholdName = 'SUCCESS')",
                            "html": "Downstream build",
                            "firstSentenceCommentText": "Downstream build"
                        }
                    ]
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "downstreamParameterized(Closure downstreamClosure)",
                            "html": "Trigger parameterized build on other projects.",
                            "firstSentenceCommentText": "Trigger parameterized build on other projects.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "highThreshold",
                                    "type": "Object",
                                    "defaultValue": "50"
                                },
                                {
                                    "name": "normalThreshold",
                                    "type": "Object",
                                    "defaultValue": "25"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "dry(String pattern, Object highThreshold = 50, Object normalThreshold = 25, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the DRY Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the DRY Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "dry"
                },
                {
                    "name": "emma",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "emmaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "emma(String fileSet = '', Closure emmaClosure = null)",
                            "availableSince": "1.20",
                            "html": "Configures the Emma Code Coverage plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Emma Code Coverage plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext"
                        }
                    ],
                    "plugin": "emma"
                },
                {
                    "name": "extendedEmail",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients = null, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients, String subjectTemplate, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "contentTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients, String subjectTemplate, String contentTemplate, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        }
                    ],
                    "plugin": "email-ext"
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "isRankActivated",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "findbugs(String pattern, boolean isRankActivated = false, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the findbugs publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the findbugs publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "findbugs"
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "recordBuildArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "fingerprint(String targets, boolean recordBuildArtifacts = false)",
                            "availableSince": "1.17",
                            "html": "Configures Fingerprinting.\r\n     ",
                            "firstSentenceCommentText": "Configures Fingerprinting."
                        }
                    ]
                },
                {
                    "name": "flexiblePublish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flexiblePublishClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "flexiblePublish(Closure flexiblePublishClosure)",
                            "availableSince": "1.26",
                            "html": "Configures the FlexiblePublish plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the FlexiblePublish plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext"
                        }
                    ],
                    "plugin": "flexible-publish"
                },
                {
                    "name": "flowdock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "flowdock(String token, Closure flowdockPublisherClosure = null)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        }
                    ],
                    "plugin": "jenkins-flowdock-plugin"
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitPublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "git(Closure gitPublisherClosure)",
                            "availableSince": "1.22",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext"
                        }
                    ],
                    "plugin": "git"
                },
                {
                    "name": "githubCommitNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "githubCommitNotifier()",
                            "availableSince": "1.21",
                            "html": "Create commit status notifications on the commits based on the outcome of the build.\r\n     ",
                            "firstSentenceCommentText": "Create commit status notifications on the commits based on the outcome of the build."
                        }
                    ],
                    "plugin": "github"
                },
                {
                    "name": "groovyPostBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior",
                                    "defaultValue": "Behavior.DoNothing"
                                }
                            ],
                            "text": "groovyPostBuild(String script, javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior behavior = Behavior.DoNothing)",
                            "availableSince": "1.19",
                            "html": "Configures the Groovy Postbuild script plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Groovy Postbuild script plugin."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "groovyPostbuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "groovyPostBuild(Closure groovyPostbuildClosure)",
                            "availableSince": "1.37",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext"
                        }
                    ],
                    "plugin": "groovy-postbuild"
                },
                {
                    "name": "hipChat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "hipChatClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "hipChat(Closure hipChatClosure = null)",
                            "availableSince": "1.33",
                            "html": "Allows notifications to be set to HipChat.\r\n     ",
                            "firstSentenceCommentText": "Allows notifications to be set to HipChat.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext"
                        }
                    ],
                    "plugin": "hipchat"
                },
                {
                    "name": "irc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ircClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "irc(Closure ircClosure)",
                            "availableSince": "1.15",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext"
                        }
                    ],
                    "plugin": "ircbot"
                },
                {
                    "name": "jacocoCodeCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jacocoClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "jacocoCodeCoverage(Closure jacocoClosure = null)",
                            "availableSince": "1.17",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext"
                        }
                    ],
                    "plugin": "jacoco"
                },
                {
                    "name": "joinTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "joinTriggerClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "joinTrigger(Closure joinTriggerClosure)",
                            "availableSince": "1.35",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext"
                        }
                    ],
                    "plugin": "join"
                },
                {
                    "name": "jshint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "jshint(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.20",
                            "html": "Configures the JsHint checkstyle Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the JsHint checkstyle Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "jshint-checkstyle"
                },
                {
                    "name": "mailer",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mailRecipients",
                                    "type": "String"
                                },
                                {
                                    "name": "dontNotifyEveryUnstableBuildBoolean",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sendToIndividualsBoolean",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "mailer(String mailRecipients, Boolean dontNotifyEveryUnstableBuildBoolean = false, Boolean sendToIndividualsBoolean = false)",
                            "availableSince": "1.17"
                        }
                    ],
                    "plugin": "mailer"
                },
                {
                    "name": "mavenDeploymentLinker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenDeploymentLinker(String regex)",
                            "availableSince": "1.23",
                            "html": "Configures the Maven Deployment Linker plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Maven Deployment Linker plugin."
                        }
                    ],
                    "plugin": "maven-deployment-linker"
                },
                {
                    "name": "mergePullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "mergePullRequest(Closure contextClosure = null)",
                            "availableSince": "1.33",
                            "html": "Configures the GitHub pull request builder plugin to perform an automatic request after a successful build.\r\n     ",
                            "firstSentenceCommentText": "Configures the GitHub pull request builder plugin to perform an automatic request after a successful build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext"
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "plotBuildData",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "plotsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "plotBuildData(Closure plotsClosure)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext"
                        }
                    ],
                    "plugin": "plot"
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "pmd(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the PMD Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the PMD Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "pmd"
                },
                {
                    "name": "postBuildScripts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildScripts(Closure closure)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext"
                        }
                    ],
                    "plugin": "postbuildscript"
                },
                {
                    "name": "postBuildTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildTask(Closure postBuildClosure)",
                            "availableSince": "1.19",
                            "html": "Configures the Jenkins Post Build Task plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Jenkins Post Build Task plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext"
                        }
                    ],
                    "plugin": "postbuild-task"
                },
                {
                    "name": "publishBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishBuild(Closure contextClosure = null)",
                            "availableSince": "1.33",
                            "html": "Configures the Build Publisher plugin to publish builds to a 'public' Jenkins server.\r\n     ",
                            "firstSentenceCommentText": "Configures the Build Publisher plugin to publish builds to a 'public' Jenkins server.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext"
                        }
                    ],
                    "plugin": "build-publisher"
                },
                {
                    "name": "publishCloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, Closure cloneWorkspaceClosure)",
                            "html": "Clone Workspace SCM",
                            "firstSentenceCommentText": "Clone Workspace SCM",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, String workspaceExcludeGlob, Closure cloneWorkspaceClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, String workspaceExcludeGlob, String criteria, String archiveMethod, Closure cloneWorkspaceClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlobArg",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlobArg",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "criteriaArg",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                },
                                {
                                    "name": "archiveMethodArg",
                                    "type": "String",
                                    "defaultValue": "'TAR'"
                                },
                                {
                                    "name": "overrideDefaultExcludesArg",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlobArg, String workspaceExcludeGlobArg = '', String criteriaArg = 'Any', String archiveMethodArg = 'TAR', boolean overrideDefaultExcludesArg = false, Closure cloneWorkspaceClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        }
                    ],
                    "plugin": "clone-workspace-scm"
                },
                {
                    "name": "publishHtml",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "htmlReportContext",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishHtml(Closure htmlReportContext)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext"
                        }
                    ],
                    "plugin": "htmlpublisher"
                },
                {
                    "name": "publishJabber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String target, Closure jabberClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                },
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String target, String strategyName, Closure jabberClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targetsArg",
                                    "type": "String"
                                },
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                },
                                {
                                    "name": "channelNotificationName",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String targetsArg, String strategyName, String channelNotificationName, Closure jabberClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        }
                    ],
                    "plugin": "jabber"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishOverSsh(Closure publishOverSshClosure)",
                            "availableSince": "1.34",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "plugin": "publish-over-ssh"
                },
                {
                    "name": "publishRobotFrameworkReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "robotClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishRobotFrameworkReports(Closure robotClosure = null)",
                            "availableSince": "1.21",
                            "html": "Configures Jenkins job to publish Robot Framework reports.\r\n By default the following values are applied. If an instance of a\r\n closure is provided, the values from the closure will take effect.\r\n     ",
                            "firstSentenceCommentText": "Configures Jenkins job to publish Robot Framework reports.\r\n ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext"
                        }
                    ],
                    "plugin": "robot"
                },
                {
                    "name": "publishScp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "site",
                                    "type": "String"
                                },
                                {
                                    "name": "scpClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishScp(String site, Closure scpClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext"
                        }
                    ],
                    "plugin": "scp"
                },
                {
                    "name": "retryBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "naginatorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "retryBuild(Closure naginatorClosure = null)",
                            "availableSince": "1.33",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext"
                        }
                    ],
                    "plugin": "naginator"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifier",
                                    "type": "String"
                                },
                                {
                                    "name": "rundeckClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rundeck(String jobIdentifier, Closure rundeckClosure = null)",
                            "availableSince": "1.24",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext"
                        }
                    ],
                    "plugin": "rundeck"
                },
                {
                    "name": "s3",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "profile",
                                    "type": "String"
                                },
                                {
                                    "name": "s3PublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "s3(String profile, Closure s3PublisherClosure)",
                            "availableSince": "1.26",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext"
                        }
                    ],
                    "plugin": "s3"
                },
                {
                    "name": "slackNotifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "slackNotificationsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "slackNotifications(Closure slackNotificationsClosure)",
                            "availableSince": "1.36",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext"
                        }
                    ],
                    "plugin": "slack"
                },
                {
                    "name": "sonar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "sonar(Closure sonarClosure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext"
                        }
                    ],
                    "plugin": "sonar"
                },
                {
                    "name": "stashNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stashNotifierClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "stashNotifier(Closure stashNotifierClosure = null)",
                            "availableSince": "1.23",
                            "html": "Configures the StashNotifier plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the StashNotifier plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext"
                        }
                    ],
                    "plugin": "stashNotifier"
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "excludePattern",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "high",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "normal",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "low",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "Object",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "tasks(String pattern, Object excludePattern = '', Object high = '', Object normal = '', Object low = '', Object ignoreCase = false, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Task Scanner Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Task Scanner Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "tasks"
                },
                {
                    "name": "textFinder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "alsoCheckConsoleOutput",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "succeedIfFound",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "unstableIfFound",
                                    "type": "Object",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "textFinder(String regularExpression, String fileSet = '', boolean alsoCheckConsoleOutput = false, boolean succeedIfFound = false, Object unstableIfFound = false)",
                            "availableSince": "1.19",
                            "html": "Configures the Jenkins Text Finder plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Jenkins Text Finder plugin."
                        }
                    ],
                    "plugin": "text-finder"
                },
                {
                    "name": "violations",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "violations(Closure violationsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "int"
                                },
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "violations(int perFileDisplayLimit, Closure violationsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        }
                    ],
                    "plugin": "violations"
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "consoleParsers",
                                    "type": "List"
                                },
                                {
                                    "name": "parserConfigurations",
                                    "type": "Map",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "warningsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "warnings(List consoleParsers, Map parserConfigurations = [:], Closure warningsClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Compiler Warnings Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Compiler Warnings Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext"
                        }
                    ],
                    "plugin": "warnings"
                },
                {
                    "name": "wsCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "wsCleanup(Closure closure = null)",
                            "availableSince": "1.23",
                            "html": "Configures the post build action of the Workspace Cleanup Plugin to delete the workspace.\r\n     ",
                            "firstSentenceCommentText": "Configures the post build action of the Workspace Cleanup Plugin to delete the workspace.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext"
                        }
                    ],
                    "plugin": "ws-cleanup"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext",
            "methods": [
                {
                    "name": "categories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "categories",
                                    "type": "List<String>"
                                }
                            ],
                            "text": "categories(List<String> categories)",
                            "html": "Throttles this project as part of one or more categories.",
                            "firstSentenceCommentText": "Throttles this project as part of one or more categories."
                        }
                    ]
                },
                {
                    "name": "maxPerNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxPerNode",
                                    "type": "int"
                                }
                            ],
                            "text": "maxPerNode(int maxPerNode)",
                            "html": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run at any one time,\r\n across all nodes.",
                            "firstSentenceCommentText": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run at any one time,\r\n across all nodes."
                        }
                    ]
                },
                {
                    "name": "maxTotal",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxTotal",
                                    "type": "int"
                                }
                            ],
                            "text": "maxTotal(int maxTotal)",
                            "html": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run per node.",
                            "firstSentenceCommentText": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run per node."
                        }
                    ]
                },
                {
                    "name": "throttleDisabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleDisabled",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "throttleDisabled(boolean throttleDisabled = true)",
                            "html": "Disables the throttle. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Disables the throttle. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GerritEventContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GerritEventContext",
            "methods": [
                {
                    "name": "changeAbandoned",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "changeAbandoned()",
                            "availableSince": "1.26",
                            "html": "Trigger when a change is abandoned.\r\n     ",
                            "firstSentenceCommentText": "Trigger when a change is abandoned."
                        }
                    ]
                },
                {
                    "name": "changeMerged",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "changeMerged()",
                            "availableSince": "1.26",
                            "html": "Trigger when a change is merged/submitted.\r\n     ",
                            "firstSentenceCommentText": "Trigger when a change is merged/submitted."
                        }
                    ]
                },
                {
                    "name": "changeRestored",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "changeRestored()",
                            "availableSince": "1.26",
                            "html": "Trigger when a change is restored.\r\n     ",
                            "firstSentenceCommentText": "Trigger when a change is restored."
                        }
                    ]
                },
                {
                    "name": "commentAdded",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "commentAdded()",
                            "availableSince": "1.26",
                            "html": "Trigger when a review comment is left with the indicated vote category and value.\r\n     ",
                            "firstSentenceCommentText": "Trigger when a review comment is left with the indicated vote category and value."
                        }
                    ]
                },
                {
                    "name": "draftPublished",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "draftPublished()",
                            "availableSince": "1.26",
                            "html": "Trigger when a draft change or patch set is published.\r\n     ",
                            "firstSentenceCommentText": "Trigger when a draft change or patch set is published."
                        }
                    ]
                },
                {
                    "name": "patchsetCreated",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "patchsetCreated()",
                            "availableSince": "1.26",
                            "html": "Trigger when a new change or patch set is uploaded.\r\n     ",
                            "firstSentenceCommentText": "Trigger when a new change or patch set is uploaded."
                        }
                    ]
                },
                {
                    "name": "refUpdated",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "refUpdated()",
                            "availableSince": "1.26",
                            "html": "Trigger when a reference (e.g., branch or tag) is updated.\r\n     ",
                            "firstSentenceCommentText": "Trigger when a reference (e.g., branch or tag) is updated."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GerritContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GerritContext",
            "methods": [
                {
                    "name": "buildFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "text": "buildFailed(Integer verified, Integer codeReview)",
                            "html": "The Verified and Code Review vote to set in Gerrit when the build fails.\r\n\r\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build fails."
                        }
                    ]
                },
                {
                    "name": "buildNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "text": "buildNotBuilt(Integer verified, Integer codeReview)",
                            "html": "The Verified and Code Review vote to set in Gerrit when no build was built.\r\n\r\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when no build was built."
                        }
                    ]
                },
                {
                    "name": "buildStarted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "text": "buildStarted(Integer verified, Integer codeReview)",
                            "html": "The Verified and Code Review vote to set in Gerrit when the build starts.\r\n\r\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build starts."
                        }
                    ]
                },
                {
                    "name": "buildSuccessful",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "text": "buildSuccessful(Integer verified, Integer codeReview)",
                            "html": "The Verified and Code Review vote to set in Gerrit when the build is successful.\r\n\r\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build is successful."
                        }
                    ]
                },
                {
                    "name": "buildUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "text": "buildUnstable(Integer verified, Integer codeReview)",
                            "html": "The Verified and Code Review vote to set in Gerrit when the build is unstable.\r\n\r\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build is unstable."
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure configureClosure)",
                            "html": "Allows direct manipulation of the generated XML. The <TT>GerritTrigger</TT> node is passed into the configure\r\n block.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "events",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "eventClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "events(Closure eventClosure)",
                            "html": "Specifies which type of Gerrit events should trigger the build.",
                            "firstSentenceCommentText": "Specifies which type of Gerrit events should trigger the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GerritEventContext"
                        }
                    ]
                },
                {
                    "name": "project",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "branches",
                                    "type": "List<String>"
                                }
                            ],
                            "text": "project(String projectName, List<String> branches)",
                            "html": "Specifies on which Gerrit projects to trigger a build on.",
                            "firstSentenceCommentText": "Specifies on which Gerrit projects to trigger a build on."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "text": "project(String projectName, String branch)",
                            "html": "Specifies on which Gerrit projects to trigger a build on.",
                            "firstSentenceCommentText": "Specifies on which Gerrit projects to trigger a build on."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderCommitStatusContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderCommitStatusContext",
            "methods": [
                {
                    "name": "completedStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildResult",
                                    "type": "String"
                                },
                                {
                                    "name": "message",
                                    "type": "String"
                                }
                            ],
                            "text": "completedStatus(String buildResult, String message)",
                            "html": "Use a custom status for when a build is completed. Can be called multiple times to set messages for different\r\n build results. Valid build results are <TT>'SUCCESS'</TT>, <TT>'FAILURE'</TT>, and <TT>'ERROR'</TT>.",
                            "firstSentenceCommentText": "Use a custom status for when a build is completed. "
                        }
                    ]
                },
                {
                    "name": "context",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "context",
                                    "type": "String"
                                }
                            ],
                            "text": "context(String context)",
                            "html": "A string label to differentiate this status from the status of other systems.",
                            "firstSentenceCommentText": "A string label to differentiate this status from the status of other systems."
                        }
                    ]
                },
                {
                    "name": "startedStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "startedStatus",
                                    "type": "String"
                                }
                            ],
                            "text": "startedStatus(String startedStatus)",
                            "html": "Use a custom status for when a build is started.",
                            "firstSentenceCommentText": "Use a custom status for when a build is started."
                        }
                    ]
                },
                {
                    "name": "triggeredStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggeredStatus",
                                    "type": "String"
                                }
                            ],
                            "text": "triggeredStatus(String triggeredStatus)",
                            "html": "Use a custom status for when a build is triggered.",
                            "firstSentenceCommentText": "Use a custom status for when a build is triggered."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderExtensionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderExtensionContext",
            "methods": [
                {
                    "name": "commitStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "commitStatus(Closure closure)",
                            "html": "Updates the commit status during the build.",
                            "firstSentenceCommentText": "Updates the commit status during the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderCommitStatusContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext",
            "methods": [
                {
                    "name": "admin",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "admin",
                                    "type": "String"
                                }
                            ],
                            "text": "admin(String admin)",
                            "html": "Adds admins for this job.",
                            "firstSentenceCommentText": "Adds admins for this job."
                        }
                    ]
                },
                {
                    "name": "admins",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "admins",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "admins(Iterable<String> admins)",
                            "html": "Adds admins for this job.",
                            "firstSentenceCommentText": "Adds admins for this job."
                        }
                    ]
                },
                {
                    "name": "allowMembersOfWhitelistedOrgsAsAdmin",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowMembersOfWhitelistedOrgsAsAdmin",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "allowMembersOfWhitelistedOrgsAsAdmin(boolean allowMembersOfWhitelistedOrgsAsAdmin = true)",
                            "availableSince": "1.35",
                            "html": "Allows members of whitelisted organisations to behave like admins.\r\n     ",
                            "firstSentenceCommentText": "Allows members of whitelisted organisations to behave like admins."
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "autoCloseFailedPullRequests",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoCloseFailedPullRequests",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "autoCloseFailedPullRequests(boolean autoCloseFailedPullRequests = true)",
                            "html": "Close pull request automatically when the build fails.",
                            "firstSentenceCommentText": "Close pull request automatically when the build fails."
                        }
                    ]
                },
                {
                    "name": "commentFilePath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commentFilePath",
                                    "type": "String"
                                }
                            ],
                            "text": "commentFilePath(String commentFilePath)",
                            "availableSince": "1.31",
                            "html": "Extends the standard build comment message on github with a custom message file.\r\n     ",
                            "firstSentenceCommentText": "Extends the standard build comment message on github with a custom message file."
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cron",
                                    "type": "String"
                                }
                            ],
                            "text": "cron(String cron)",
                            "html": "This schedules polling to GitHub for new changes in pull requests.",
                            "firstSentenceCommentText": "This schedules polling to GitHub for new changes in pull requests."
                        }
                    ]
                },
                {
                    "name": "extensions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "extensions(Closure closure)",
                            "availableSince": "1.38",
                            "html": "Adds additional trigger options.\r\n     ",
                            "firstSentenceCommentText": "Adds additional trigger options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderExtensionContext"
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "onlyTriggerPhrase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyTriggerPhrase",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "onlyTriggerPhrase(boolean onlyTriggerPhrase = true)",
                            "html": "When set, only commenting the trigger phrase in the pull request will trigger a build.",
                            "firstSentenceCommentText": "When set, only commenting the trigger phrase in the pull request will trigger a build."
                        }
                    ]
                },
                {
                    "name": "orgWhitelist",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "organization",
                                    "type": "String"
                                }
                            ],
                            "text": "orgWhitelist(String organization)",
                            "html": "Adds organisation names whose members are considered whitelisted for this specific job.",
                            "firstSentenceCommentText": "Adds organisation names whose members are considered whitelisted for this specific job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "organizations",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "orgWhitelist(Iterable<String> organizations)",
                            "html": "Adds organisation names whose members are considered whitelisted for this specific job.",
                            "firstSentenceCommentText": "Adds organisation names whose members are considered whitelisted for this specific job."
                        }
                    ]
                },
                {
                    "name": "permitAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "permitAll",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "permitAll(boolean permitAll = true)",
                            "html": "Build every pull request automatically without asking.",
                            "firstSentenceCommentText": "Build every pull request automatically without asking."
                        }
                    ]
                },
                {
                    "name": "triggerPhrase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggerPhrase",
                                    "type": "String"
                                }
                            ],
                            "text": "triggerPhrase(String triggerPhrase)",
                            "html": "When filled, commenting this phrase in the pull request will trigger a build.",
                            "firstSentenceCommentText": "When filled, commenting this phrase in the pull request will trigger a build."
                        }
                    ]
                },
                {
                    "name": "useGitHubHooks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useGitHubHooks",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useGitHubHooks(boolean useGitHubHooks = true)",
                            "html": "Checking this option will disable regular polling for changes in GitHub and will try to create a GitHub hook.",
                            "firstSentenceCommentText": "Checking this option will disable regular polling for changes in GitHub and will try to create a GitHub hook."
                        }
                    ]
                },
                {
                    "name": "userWhitelist",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "text": "userWhitelist(String user)",
                            "html": "Adds whitelisted users for this job.",
                            "firstSentenceCommentText": "Adds whitelisted users for this job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "users",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "userWhitelist(Iterable<String> users)",
                            "html": "Adds whitelisted users for this job.",
                            "firstSentenceCommentText": "Adds whitelisted users for this job."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext",
            "methods": [
                {
                    "name": "executionStatuses",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "executionStatuses",
                                    "type": "String..."
                                }
                            ],
                            "text": "executionStatuses(String... executionStatuses)",
                            "html": "Only triggers a build if the status of the Rundeck execution at the origin of the notification matches one of\r\n  the given statuses.\r\n\r\n Possible values for are <TT>'SUCCEEDED'</TT>, <TT>'FAILED'</TT> and <TT>'ABORTED'</TT>.",
                            "firstSentenceCommentText": "Only triggers a build if the status of the Rundeck execution at the origin of the notification matches one of\r\n  the given statuses."
                        }
                    ]
                },
                {
                    "name": "jobIdentifiers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifiers",
                                    "type": "String..."
                                }
                            ],
                            "text": "jobIdentifiers(String... jobIdentifiers)",
                            "html": "Only triggers a new build if the Rundeck execution at the origin of the notification matches one of the following\r\n Rundeck job identifier. The identifier can be either a job UUID or a job reference.",
                            "firstSentenceCommentText": "Only triggers a new build if the Rundeck execution at the origin of the notification matches one of the following\r\n Rundeck job identifier. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext",
            "methods": [
                {
                    "name": "ignorePostCommitHooks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignorePostCommitHooks",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "ignorePostCommitHooks(boolean ignorePostCommitHooks = true)",
                            "availableSince": "1.31",
                            "html": "Ignore changes notified by SCM post-commit hooks. Defaults to <TT>false</TT>.\r\n     ",
                            "firstSentenceCommentText": "Ignore changes notified by SCM post-commit hooks. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerInspectionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerInspectionContext",
            "methods": [
                {
                    "name": "path",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                }
                            ],
                            "text": "path(String path)",
                            "html": "Adds a JSON/XPATH path expression to the inspection.\r\n     ",
                            "firstSentenceCommentText": "Adds a JSON/XPATH path expression to the inspection."
                        }
                    ]
                },
                {
                    "name": "regexp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "exp",
                                    "type": "String"
                                }
                            ],
                            "text": "regexp(String exp)",
                            "html": "Adds a RegExp for TEXT inspections.\r\n\r\n Checks that the given Regexp is actually compilable to a Java RegExp.\r\n     ",
                            "firstSentenceCommentText": "Adds a RegExp for TEXT inspections."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerEntryContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerEntryContext",
            "methods": [
                {
                    "name": "check",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "performCheck",
                                    "type": "String"
                                }
                            ],
                            "text": "check(String performCheck)",
                            "html": "Enables checks to perform for URL.\r\n\r\n Can be one of <TT>'status'</TT> (check status code), <TT>'etag'</TT> (check the ETag) and <TT>'lastModified'</TT>\r\n (check the last modified date).\r\n     ",
                            "firstSentenceCommentText": "Enables checks to perform for URL."
                        }
                    ]
                },
                {
                    "name": "inspection",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": "String"
                                },
                                {
                                    "name": "inspectionClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "inspection(String type, Closure inspectionClosure = null)",
                            "html": "Adds inspections of the returned content.\r\n\r\n Can be one of <TT>'change'</TT>, <TT>'json'</TT>, <TT>'xml'</TT> or <TT>'text</TT>.\r\n     ",
                            "firstSentenceCommentText": "Adds inspections of the returned content.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerInspectionContext"
                        }
                    ]
                },
                {
                    "name": "proxy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "active",
                                    "type": "boolean"
                                }
                            ],
                            "text": "proxy(boolean active)",
                            "html": "Enables/Disables the use of the global proxy that is configured for Jenkins.\r\n\r\n Defaults to <code>false</code>\r\n     ",
                            "firstSentenceCommentText": "Enables/Disables the use of the global proxy that is configured for Jenkins."
                        }
                    ]
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "statusCode",
                                    "type": "int"
                                }
                            ],
                            "text": "status(int statusCode)",
                            "html": "Define the expected status code of the response.\r\n\r\n Defaults to 200.\r\n Needs to be used with <TT>check('status')</TT> to be useful.\r\n     ",
                            "firstSentenceCommentText": "Define the expected status code of the response."
                        }
                    ]
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeout",
                                    "type": "long"
                                }
                            ],
                            "text": "timeout(long timeout)",
                            "html": "Defines how many seconds the trigger will wait when checking the URL.\r\n\r\n Defaults to 300 seconds.\r\n     ",
                            "firstSentenceCommentText": "Defines how many seconds the trigger will wait when checking the URL."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure configureClosure)",
                            "html": "Allows direct manipulation of the generated XML. The <TT>URLTrigger</TT> node is passed into the configure block.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cron",
                                    "type": "String"
                                }
                            ],
                            "text": "cron(String cron)",
                            "html": "Sets the cron schedule. Defaults to <TT>'H/5 * * * *'</TT>.",
                            "firstSentenceCommentText": "Sets the cron schedule. "
                        }
                    ]
                },
                {
                    "name": "restrictToLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "text": "restrictToLabel(String label)",
                            "html": "Restricts execution to label.",
                            "firstSentenceCommentText": "Restricts execution to label."
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "entryClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "url(String url, Closure entryClosure = null)",
                            "html": "Adds a monitored URL to the trigger.",
                            "firstSentenceCommentText": "Adds a monitored URL to the trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerEntryContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext",
            "methods": [
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                }
                            ],
                            "text": "cron(String cronString)",
                            "html": "Triggers the job based on regular intervals.",
                            "firstSentenceCommentText": "Triggers the job based on regular intervals."
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        cron('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "gerrit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "gerrit(Closure contextClosure = null)",
                            "html": "Polls Gerrit for changes.",
                            "firstSentenceCommentText": "Polls Gerrit for changes.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GerritContext"
                        }
                    ],
                    "plugin": "gerrit-trigger",
                    "examples": "job('example') {\r\n    triggers {\r\n        gerrit {\r\n            events {\r\n                changeMerged()\r\n                draftPublished()\r\n            }\r\n            project('reg_exp:myProject', ['ant:feature-branch', 'plain:origin/refs/mybranch'])\r\n            project('test-project', '**')\r\n            buildSuccessful(10, null)\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "githubPush",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "githubPush()",
                            "availableSince": "1.16",
                            "html": "Trigger that runs jobs on push notifications from GitHub.\r\n     ",
                            "firstSentenceCommentText": "Trigger that runs jobs on push notifications from GitHub."
                        }
                    ],
                    "plugin": "github",
                    "examples": "job('example-1') {\r\n    triggers {\r\n        githubPush()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "pullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "pullRequest(Closure contextClosure)",
                            "availableSince": "1.22",
                            "html": "Builds pull requests from GitHub and will report the results back to the pull request.\r\n\r\n The pull request builder plugin requires a special Git SCM configuration, see the plugin documentation for\r\n details.\r\n     ",
                            "firstSentenceCommentText": "Builds pull requests from GitHub and will report the results back to the pull request.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext"
                        }
                    ],
                    "plugin": "ghprb",
                    "examples": "job('example') {\r\n    scm {\r\n        git {\r\n            remote {\r\n                github('test-owner/test-project')\r\n                refspec('+refs/pull/*:refs/remotes/origin/pr/*')\r\n            }\r\n            branch('${sha1}')\r\n        }\r\n    }\r\n    triggers {\r\n        pullRequest {\r\n            admin('USER_ID')\r\n            userWhitelist('you@you.com')\r\n            orgWhitelist(['your_github_org', 'another_org'])\r\n            cron('H/5 * * * *')\r\n            triggerPhrase('Ok to test')\r\n            onlyTriggerPhrase()\r\n            useGitHubHooks()\r\n            permitAll()\r\n            autoCloseFailedPullRequests()\r\n            allowMembersOfWhitelistedOrgsAsAdmin()\r\n            extensions {\r\n                commitStatus {\r\n                    context('deploy to staging site')\r\n                    startedStatus('deploying to staging site...')\r\n                    completedStatus('SUCCESS', 'All is well')\r\n                    completedStatus('FAILURE', 'Something went wrong. Investigate!')\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rundeck(Closure closure = null)",
                            "availableSince": "1.33",
                            "html": "Allows to schedule a build on Jenkins after a job execution on RunDeck.\r\n     ",
                            "firstSentenceCommentText": "Allows to schedule a build on Jenkins after a job execution on RunDeck.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext"
                        }
                    ],
                    "plugin": "rundeck",
                    "examples": "job('example') {\r\n    triggers {\r\n        rundeck {\r\n            jobIdentifiers('2027ce89-7924-4ecf-a963-30090ada834f',\r\n                    'my-project-name:main-group/sub-group/my-job')\r\n            executionStatuses('FAILED', 'ABORTED')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                },
                                {
                                    "name": "scmTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "scm(String cronString, Closure scmTriggerClosure = null)",
                            "html": "Polls source control for changes at regular intervals.",
                            "firstSentenceCommentText": "Polls source control for changes at regular intervals.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n\r\njob('example-2') {\r\n    triggers {\r\n        scm('@midnight') {\r\n            ignorePostCommitHooks()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "upstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "threshold",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "text": "upstream(String projects, String threshold = 'SUCCESS')",
                            "availableSince": "1.33",
                            "html": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger.\r\n\r\n Possible thresholds are <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.\r\n     ",
                            "firstSentenceCommentText": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger."
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        upstream('other', 'UNSTABLE')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "urlTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "crontab",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "urlTrigger(String crontab = null, Closure contextClosure)",
                            "availableSince": "1.16",
                            "html": "Adds DSL for adding and configuring the URL trigger plugin to a job.\r\n     ",
                            "firstSentenceCommentText": "Adds DSL for adding and configuring the URL trigger plugin to a job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext"
                        }
                    ],
                    "plugin": "urltrigger",
                    "examples": "job('example') {\r\n    triggers {\r\n        urlTrigger {\r\n            cron('* 0 * 0 *')\r\n            restrictLabel('foo')\r\n\r\n            // simple configuration\r\n            url('http://www.example.com/foo/') {\r\n                proxy(true)\r\n                status(404)\r\n                timeout(4000)\r\n                check('status')\r\n                check('etag')\r\n                check('lastModified')\r\n            }\r\n\r\n            // Content inspection (MD5 hash)\r\n            url('http://www.example.com/bar/') {\r\n                inspection('change')\r\n            }\r\n\r\n            // content inspection for JSON or XML content with detailed checking using XPath/JSONPath\r\n            url('http://www.example.com/baz/') {\r\n                inspection('json' | 'xml') {\r\n                    path('//div[@class=\"foo\"]')\r\n                    path('$.store.book[0].title')\r\n                    path('$[\"store\"][\"book\"][0][\"title\"]')\r\n                }\r\n            }\r\n\r\n            // content inspection for text content with detailed checking using regular expressions\r\n            url('http://www.example.com/fubar/') {\r\n                inspection('text') {\r\n                    regexp(/_(foo|bar).+/)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext",
            "methods": [
                {
                    "name": "glassfish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "port",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String"
                                }
                            ],
                            "text": "glassfish(String port, String user, String password)",
                            "html": "Allocates a GlassFish JMX port that lets Jenkins shut down a run-away GlassFish through JMX.\r\n\r\n For security reasons, do not use a hard-coded password. See\r\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\r\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Allocates a GlassFish JMX port that lets Jenkins shut down a run-away GlassFish through JMX."
                        }
                    ]
                },
                {
                    "name": "port",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "port",
                                    "type": "String"
                                },
                                {
                                    "name": "ports",
                                    "type": "String..."
                                }
                            ],
                            "text": "port(String port, String... ports)",
                            "html": "Allocates plain TCP ports.",
                            "firstSentenceCommentText": "Allocates plain TCP ports."
                        }
                    ]
                },
                {
                    "name": "tomcat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "port",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String"
                                }
                            ],
                            "text": "tomcat(String port, String password)",
                            "html": "Allocates a Tomcat shutdown port that lets Jenkins shut down a run-away Tomcat through the shut down port.\r\n\r\n For security reasons, do not use a hard-coded password. See\r\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\r\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Allocates a Tomcat shutdown port that lets Jenkins shut down a run-away Tomcat through the shut down port."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext",
            "methods": [
                {
                    "name": "targetLocation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetLocation",
                                    "type": "String"
                                }
                            ],
                            "text": "targetLocation(String targetLocation)",
                            "html": "Defines where the file should be created on the slave.  If it is blank, a temporary file will be created.",
                            "firstSentenceCommentText": "Defines where the file should be created on the slave.  "
                        }
                    ]
                },
                {
                    "name": "variable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                }
                            ],
                            "text": "variable(String variable)",
                            "html": "Allows to define an environment variable with which refers to the file location.",
                            "firstSentenceCommentText": "Allows to define an environment variable with which refers to the file location."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext",
            "methods": [
                {
                    "name": "custom",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "configFileClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "custom(String fileName, Closure configFileClosure = null)",
                            "availableSince": "1.35",
                            "html": "Makes a custom file available to the build.\r\n     ",
                            "firstSentenceCommentText": "Makes a custom file available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext"
                        }
                    ]
                },
                {
                    "name": "file",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "configFileClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "file(String fileName, Closure configFileClosure = null)",
                            "html": "An alias for <a href='#custom(java.lang.String, groovy.lang.Closure)'>custom</a>.\r\n     ",
                            "firstSentenceCommentText": "An alias for custom.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext"
                        }
                    ]
                },
                {
                    "name": "mavenSettings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "configFileClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "mavenSettings(String fileName, Closure configFileClosure = null)",
                            "availableSince": "1.35",
                            "html": "Makes a Maven settings file available to the build.\r\n     ",
                            "firstSentenceCommentText": "Makes a Maven settings file available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext",
            "methods": [
                {
                    "name": "file",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "file(String variable, String credentials)",
                            "html": "Copies the file given in the credentials to a temporary location, then sets the variable to that location.",
                            "firstSentenceCommentText": "Copies the file given in the credentials to a temporary location, then sets the variable to that location."
                        }
                    ]
                },
                {
                    "name": "string",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "string(String variable, String credentials)",
                            "html": "Sets a variable to the text given in the credentials.",
                            "firstSentenceCommentText": "Sets a variable to the text given in the credentials."
                        }
                    ]
                },
                {
                    "name": "usernamePassword",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "usernamePassword(String variable, String credentials)",
                            "html": "Sets a variable to the username and password given in the credentials, separated by a colon (:).",
                            "firstSentenceCommentText": "Sets a variable to the username and password given in the credentials, separated by a colon (:)."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "userVariableName",
                                    "type": "String"
                                },
                                {
                                    "name": "passwordVariableName",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "usernamePassword(String userVariableName, String passwordVariableName, String credentials)",
                            "availableSince": "1.31",
                            "html": "Sets one variable to the username and one variable to the password given in the credentials.\r\n     ",
                            "firstSentenceCommentText": "Sets one variable to the username and one variable to the password given in the credentials."
                        }
                    ],
                    "plugin": "credentials-binding"
                },
                {
                    "name": "zipFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "zipFile(String variable, String credentials)",
                            "html": "Unpacks the ZIP file given in the credentials to a temporary directory, then sets the variable to that location.",
                            "firstSentenceCommentText": "Unpacks the ZIP file given in the credentials to a temporary directory, then sets the variable to that location."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext",
            "methods": [
                {
                    "name": "convertHomesToUppercase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "convertHomesToUppercase",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "convertHomesToUppercase(boolean convertHomesToUppercase = true)",
                            "html": "Converts <TT>#ToolName_HOME</TT> variables to the upper-case. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Converts #ToolName_HOME variables to the upper-case. "
                        }
                    ]
                },
                {
                    "name": "skipMasterInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "skipMasterInstallation",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "skipMasterInstallation(boolean skipMasterInstallation = true)",
                            "html": "Skips installation of tools at the matrix master job. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Skips installation of tools at the matrix master job. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext",
            "methods": [
                {
                    "name": "env",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "text": "env(Object key, Object value)",
                            "html": "Adds an environment variable to the build.",
                            "firstSentenceCommentText": "Adds an environment variable to the build."
                        }
                    ]
                },
                {
                    "name": "envs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<Object, Object>"
                                }
                            ],
                            "text": "envs(Map<Object, Object> map)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build."
                        }
                    ]
                },
                {
                    "name": "groovy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "groovy(String script)",
                            "availableSince": "1.30",
                            "html": "Evaluates a Groovy script and inject a map result. The groovy script must return a map Java object.\r\n     ",
                            "firstSentenceCommentText": "Evaluates a Groovy script and inject a map result. "
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertiesFilePath",
                                    "type": "String"
                                }
                            ],
                            "text": "propertiesFile(String propertiesFilePath)",
                            "html": "Adds environment variables from a properties file.",
                            "firstSentenceCommentText": "Adds environment variables from a properties file."
                        }
                    ]
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "script(String script)",
                            "html": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on.",
                            "firstSentenceCommentText": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on."
                        }
                    ]
                },
                {
                    "name": "scriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptFilePath",
                                    "type": "String"
                                }
                            ],
                            "text": "scriptFile(String scriptFilePath)",
                            "html": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on.",
                            "firstSentenceCommentText": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext",
            "methods": [
                {
                    "name": "delete",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "delete",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "delete(boolean delete = true)",
                            "html": "Deletes copied keychains after build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Deletes copied keychains after build. "
                        }
                    ]
                },
                {
                    "name": "keychain",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keychain",
                                    "type": "String"
                                },
                                {
                                    "name": "identity",
                                    "type": "String"
                                },
                                {
                                    "name": "prefix",
                                    "type": "String",
                                    "defaultValue": "''"
                                }
                            ],
                            "text": "keychain(String keychain, String identity, String prefix = '')",
                            "html": "Adds a keychain. Can be used multiple times to add more keychains.\r\n With a single keychain, the prefix is optional.",
                            "firstSentenceCommentText": "Adds a keychain. "
                        }
                    ]
                },
                {
                    "name": "overwrite",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overwrite",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "overwrite(boolean overwrite = true)",
                            "html": "Overwrites existing keychains. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Overwrites existing keychains. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext",
            "methods": [
                {
                    "name": "failBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failBuild(boolean failBuild = true)",
                            "html": "Fails the build when the log size exceeds the maximum size. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails the build when the log size exceeds the maximum size. "
                        }
                    ]
                },
                {
                    "name": "maxSize",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxSize",
                                    "type": "int"
                                }
                            ],
                            "text": "maxSize(int maxSize)",
                            "html": "Sets the maximum allowed size for the output log.",
                            "firstSentenceCommentText": "Sets the maximum allowed size for the output log."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext",
            "methods": [
                {
                    "name": "cleanupParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanupParameter",
                                    "type": "String"
                                }
                            ],
                            "text": "cleanupParameter(String cleanupParameter)",
                            "html": "Set this field to a boolean environment variable and if the variables value is set to true than the workspace\r\n will be cleaned up.",
                            "firstSentenceCommentText": "Set this field to a boolean environment variable and if the variables value is set to true than the workspace\r\n will be cleaned up."
                        }
                    ]
                },
                {
                    "name": "deleteCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteCommand",
                                    "type": "String"
                                }
                            ],
                            "text": "deleteCommand(String deleteCommand)",
                            "html": "If set, an external program will be used for deletion.",
                            "firstSentenceCommentText": "If set, an external program will be used for deletion."
                        }
                    ]
                },
                {
                    "name": "deleteDirectories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteDirectories",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "deleteDirectories(boolean deleteDirectories = true)",
                            "html": "If set, the pattern will also be applied to directories. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, the pattern will also be applied to directories. "
                        }
                    ]
                },
                {
                    "name": "excludePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "text": "excludePattern(String pattern)",
                            "html": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax."
                        }
                    ]
                },
                {
                    "name": "includePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "text": "includePattern(String pattern)",
                            "html": "Makes cleanup more selective by specifying file to be deleted using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be deleted using Ant syntax."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext",
            "methods": [
                {
                    "name": "failOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "failOnError(boolean failOnError = true)",
                            "html": "Fails the build when one of the steps fails. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails the build when one of the steps fails. "
                        }
                    ]
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure closure)",
                            "html": "Adds build steps to be run before SCM checkout.",
                            "firstSentenceCommentText": "Adds build steps to be run before SCM checkout.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext",
            "methods": [
                {
                    "name": "gems",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gems",
                                    "type": "String..."
                                }
                            ],
                            "text": "gems(String... gems)",
                            "html": "Specifies which gems should be pre-installed.",
                            "firstSentenceCommentText": "Specifies which gems should be pre-installed."
                        }
                    ]
                },
                {
                    "name": "ignoreLocalVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignore",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "ignoreLocalVersion(boolean ignore = true)",
                            "html": "Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Defaults to false."
                        }
                    ]
                },
                {
                    "name": "rbenvRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repository",
                                    "type": "String"
                                }
                            ],
                            "text": "rbenvRepository(String repository)",
                            "html": "Specifies a rbenv git repository. Defaults to <TT>'https://github.com/sstephenson/rbenv.git'</TT>.",
                            "firstSentenceCommentText": "Specifies a rbenv git repository. "
                        }
                    ]
                },
                {
                    "name": "rbenvRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "revision",
                                    "type": "String"
                                }
                            ],
                            "text": "rbenvRevision(String revision)",
                            "html": "Specifies a branch in the rbenv git repository. Defaults to <TT>'master'</TT>.",
                            "firstSentenceCommentText": "Specifies a branch in the rbenv git repository. "
                        }
                    ]
                },
                {
                    "name": "root",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "root",
                                    "type": "String"
                                }
                            ],
                            "text": "root(String root)",
                            "html": "Sets the <TT>RBENV_ROOT</TT>. Defaults to <TT>'$HOME/.rbenv'</TT>.",
                            "firstSentenceCommentText": "Sets the RBENV_ROOT. "
                        }
                    ]
                },
                {
                    "name": "rubyBuildRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repository",
                                    "type": "String"
                                }
                            ],
                            "text": "rubyBuildRepository(String repository)",
                            "html": "Specifies a ruby-build git repository. Defaults to <TT>'https://github.com/sstephenson/ruby-build.git'</TT>.",
                            "firstSentenceCommentText": "Specifies a ruby-build git repository. "
                        }
                    ]
                },
                {
                    "name": "rubyBuildRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "revision",
                                    "type": "String"
                                }
                            ],
                            "text": "rubyBuildRevision(String revision)",
                            "html": "Specifies a branch in the ruby-build git repository. Defaults to <TT>'master'</TT>.",
                            "firstSentenceCommentText": "Specifies a branch in the ruby-build git repository. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure closure)",
                            "html": "Allows direct manipulation of the generated XML. The <TT>ReleaseWrapper</TT> node is passed into the configure\r\n block.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "doNotKeepLog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "doNotKeepLog",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "doNotKeepLog(boolean doNotKeepLog = true)",
                            "html": "If set, release builds will not be automatically kept forever. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, release builds will not be automatically kept forever. "
                        }
                    ]
                },
                {
                    "name": "overrideBuildParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overrideBuildParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "overrideBuildParameters(boolean overrideBuildParameters = true)",
                            "html": "If set, a release can override the build parameters.",
                            "firstSentenceCommentText": "If set, a release can override the build parameters."
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parametersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure parametersClosure)",
                            "html": "Add parameters for the release.",
                            "firstSentenceCommentText": "Add parameters for the release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ]
                },
                {
                    "name": "postBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildSteps(Closure closure)",
                            "html": "Adds build steps to run after a successful or failed release.",
                            "firstSentenceCommentText": "Adds build steps to run after a successful or failed release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "postFailedBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postFailedBuildSteps(Closure closure)",
                            "html": "Adds build steps to run after a failed release.",
                            "firstSentenceCommentText": "Adds build steps to run after a failed release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "postSuccessfulBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postSuccessfulBuildSteps(Closure closure)",
                            "html": "Adds build steps to run after a successful release.",
                            "firstSentenceCommentText": "Adds build steps to run after a successful release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "preBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "preBuildSteps(Closure closure)",
                            "html": "Adds build steps to run before the release.",
                            "firstSentenceCommentText": "Adds build steps to run before the release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "releaseVersionTemplate",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseVersionTemplate",
                                    "type": "String"
                                }
                            ],
                            "text": "releaseVersionTemplate(String releaseVersionTemplate)",
                            "html": "Sets a template used to tell the release process how to formulate a release version string.",
                            "firstSentenceCommentText": "Sets a template used to tell the release process how to formulate a release version string."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext",
            "methods": [
                {
                    "name": "abortBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "abortBuild()",
                            "availableSince": "1.30",
                            "html": "Aborts the build. This is a default operation performed if no operations are specified.\r\n     ",
                            "firstSentenceCommentText": "Aborts the build. "
                        }
                    ],
                    "plugin": "build-timeout"
                },
                {
                    "name": "absolute",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minutes",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "absolute(int minutes = 3)",
                            "availableSince": "1.24",
                            "html": "Aborts the build based on a fixed time-out.\r\n     ",
                            "firstSentenceCommentText": "Aborts the build based on a fixed time-out."
                        }
                    ]
                },
                {
                    "name": "elastic",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "percentage",
                                    "type": "int",
                                    "defaultValue": "150"
                                },
                                {
                                    "name": "numberOfBuilds",
                                    "type": "int",
                                    "defaultValue": "3"
                                },
                                {
                                    "name": "minutesDefault",
                                    "type": "int",
                                    "defaultValue": "60"
                                }
                            ],
                            "text": "elastic(int percentage = 150, int numberOfBuilds = 3, int minutesDefault = 60)",
                            "availableSince": "1.24",
                            "html": "Defines time to wait before killing the build as a percentage of the mean of the duration of the last\r\n successful builds.\r\n     ",
                            "firstSentenceCommentText": "Defines time to wait before killing the build as a percentage of the mean of the duration of the last\r\n successful builds."
                        }
                    ]
                },
                {
                    "name": "failBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "failBuild()",
                            "availableSince": "1.24",
                            "html": "Marked the build as failed.\r\n     ",
                            "firstSentenceCommentText": "Marked the build as failed."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "fail",
                                    "type": "boolean"
                                }
                            ],
                            "text": "failBuild(boolean fail)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "likelyStuck",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "likelyStuck()",
                            "availableSince": "1.24",
                            "html": "Uses a heuristics based approach to detect builds that are suspiciously running for a long time.\r\n     ",
                            "firstSentenceCommentText": "Uses a heuristics based approach to detect builds that are suspiciously running for a long time."
                        }
                    ]
                },
                {
                    "name": "noActivity",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "180"
                                }
                            ],
                            "text": "noActivity(int seconds = 180)",
                            "availableSince": "1.24",
                            "html": "Aborts the build when the specified seconds have passed since the last log output.\r\n     ",
                            "firstSentenceCommentText": "Aborts the build when the specified seconds have passed since the last log output."
                        }
                    ],
                    "plugin": "build-timeout"
                },
                {
                    "name": "writeDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "writeDescription(String description)",
                            "availableSince": "1.24",
                            "html": "Sets the build description.\r\n     ",
                            "firstSentenceCommentText": "Sets the build description."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext",
            "methods": [
                {
                    "name": "assignedLabels",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "assignedLabels",
                                    "type": "String"
                                }
                            ],
                            "text": "assignedLabels(String assignedLabels)",
                            "html": "Starts Xvfb only on nodes with the specified labels.",
                            "firstSentenceCommentText": "Starts Xvfb only on nodes with the specified labels."
                        }
                    ]
                },
                {
                    "name": "autoDisplayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoDisplayName",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "autoDisplayName(boolean autoDisplayName = true)",
                            "html": "Lets Xvfb choose the display number automatically. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Lets Xvfb choose the display number automatically. "
                        }
                    ]
                },
                {
                    "name": "debug",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "debug",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "debug(boolean debug = true)",
                            "html": "Redirects the output of Xvfb into the job log. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Redirects the output of Xvfb into the job log. "
                        }
                    ]
                },
                {
                    "name": "displayNameOffset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayNameOffset",
                                    "type": "int"
                                }
                            ],
                            "text": "displayNameOffset(int displayNameOffset)",
                            "html": "Specifies an offset to be added to the job's executor number which will form the display name. Defaults to 1.",
                            "firstSentenceCommentText": "Specifies an offset to be added to the job's executor number which will form the display name. "
                        }
                    ]
                },
                {
                    "name": "parallelBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parallelBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "parallelBuild(boolean parallelBuild = true)",
                            "html": "If set, prevents collision when running multiple Jenkins nodes on the same machine. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, prevents collision when running multiple Jenkins nodes on the same machine. "
                        }
                    ]
                },
                {
                    "name": "screen",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "screen",
                                    "type": "String"
                                }
                            ],
                            "text": "screen(String screen)",
                            "html": "Changes the screen resolution and pixel depth. Default to <TT>'1024x768x24'</TT>.",
                            "firstSentenceCommentText": "Changes the screen resolution and pixel depth. "
                        }
                    ]
                },
                {
                    "name": "shutdownWithBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shutdownWithBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "shutdownWithBuild(boolean shutdownWithBuild = true)",
                            "html": "Keeps Xvfb running for post build steps. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Keeps Xvfb running for post build steps. "
                        }
                    ]
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeout",
                                    "type": "int"
                                }
                            ],
                            "text": "timeout(int timeout)",
                            "html": "Specifies the number of seconds to wait for Xvfb to start. Defaults to 0.",
                            "firstSentenceCommentText": "Specifies the number of seconds to wait for Xvfb to start. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext",
            "methods": [
                {
                    "name": "takeScreenshot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "takeScreenshot",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "takeScreenshot(boolean takeScreenshot = true)",
                            "html": "Takes a screenshot upon completion of the build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Takes a screenshot upon completion of the build. "
                        }
                    ]
                },
                {
                    "name": "useXauthority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useXauthority",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "useXauthority(boolean useXauthority = true)",
                            "html": "Creates a dedicated Xauthority file per build. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Creates a dedicated Xauthority file per build. "
                        }
                    ],
                    "plugin": "xvnc"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext",
            "methods": [
                {
                    "name": "allocatePorts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "portsArg",
                                    "type": "String[]"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "allocatePorts(String[] portsArg, Closure closure = null)",
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "cl",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "allocatePorts(Closure cl = null)",
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        }
                    ],
                    "plugin": "port-allocator",
                    "examples": "// allocates two ports: one randomly assigned and accessible by env var $HTTP\r\n// the second is fixed and the port allocator controls concurrent usage\r\njob('example-1') {\r\n    wrappers {\r\n        allocatePorts('HTTP', '8080')\r\n    }\r\n}\r\n\r\n// allocates a GlassFish and a Tomcat port\r\njob('example-2') {\r\n    wrappers {\r\n        allocatePorts {\r\n            glassfish('1234', 'user', 'password')\r\n            tomcat('1234', 'password')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "buildName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nameTemplate",
                                    "type": "String"
                                }
                            ],
                            "text": "buildName(String nameTemplate)",
                            "availableSince": "1.24",
                            "html": "Sets the display name of a build.\r\n     ",
                            "firstSentenceCommentText": "Sets the display name of a build."
                        }
                    ],
                    "plugin": "build-name-setter",
                    "examples": "// define the build name based on the build number and an environment variable\r\njob('example') {\r\n    wrappers {\r\n        buildName('#${BUILD_NUMBER} on ${ENV,var=\"BRANCH\"}')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "buildUserVars",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "buildUserVars()",
                            "availableSince": "1.26",
                            "html": "Adds a number of environment variables with information about the current user.\r\n     ",
                            "firstSentenceCommentText": "Adds a number of environment variables with information about the current user."
                        }
                    ],
                    "plugin": "build-user-vars-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        buildUserVars()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "colorizeOutput",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "colorMap",
                                    "type": "String",
                                    "defaultValue": "'xterm'"
                                }
                            ],
                            "text": "colorizeOutput(String colorMap = 'xterm')",
                            "html": "Renders ANSI escape sequences, including color, to console output.\r\n     ",
                            "firstSentenceCommentText": "Renders ANSI escape sequences, including color, to console output."
                        }
                    ],
                    "plugin": "ansicolor",
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "configFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configFilesClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configFiles(Closure configFilesClosure)",
                            "availableSince": "1.28",
                            "html": "Make globally configured files available to the build.\r\n     ",
                            "firstSentenceCommentText": "Make globally configured files available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext"
                        }
                    ],
                    "plugin": "config-file-provider",
                    "examples": "job('example') {\r\n    wrappers {\r\n        configFiles {\r\n            file('myCustomConfigFile') {\r\n                variable('CONFIG_FILE')\r\n            }\r\n            mavenSettings('myJenkinsSettingsFile') {\r\n                targetLocation('settings.xml')\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "credentialsBinding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "credentialsBinding(Closure closure)",
                            "availableSince": "1.28",
                            "html": "Binds environment variables to credentials.\r\n     ",
                            "firstSentenceCommentText": "Binds environment variables to credentials.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext"
                        }
                    ],
                    "plugin": "credentials-binding",
                    "examples": "job('example') {\r\n    wrappers {\r\n        credentialsBinding {\r\n            file('KEYSTORE', 'keystore.jks')\r\n            usernamePassword('PASSWORD', 'keystore password')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customTools",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "customTools(Iterable<String> tools, Closure closure = null)",
                            "availableSince": "1.30",
                            "html": "Installs custom tools.\r\n     ",
                            "firstSentenceCommentText": "Installs custom tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext"
                        }
                    ],
                    "plugin": "custom-tools-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        customTools(['NodeJS', 'figlet']) {\r\n            skipMasterInstallation()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "deliveryPipelineVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "template",
                                    "type": "String"
                                },
                                {
                                    "name": "setDisplayName",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "deliveryPipelineVersion(String template, boolean setDisplayName = false)",
                            "availableSince": "1.26",
                            "html": "Creates a pipeline version based on the template and optionally sets that version as display name for the build.\r\n     ",
                            "firstSentenceCommentText": "Creates a pipeline version based on the template and optionally sets that version as display name for the build."
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        deliveryPipelineVersion('1.0.${BUILD_NUMBER}', true)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "availableSince": "1.21",
                            "html": "Injects environment variables into the build.\r\n     ",
                            "firstSentenceCommentText": "Injects environment variables into the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example') {\r\n    wrappers {\r\n        environmentVariables {\r\n            env('ONE', '1')\r\n            envs(FOO: 'bar', TEST: '123')\r\n            propertiesFile('env.properties')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "exclusionResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "String..."
                                }
                            ],
                            "text": "exclusionResources(String... resourceNames)",
                            "availableSince": "1.24",
                            "html": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\r\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "exclusionResources(Iterable<String> resourceNames)",
                            "availableSince": "1.24",
                            "html": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\r\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        }
                    ],
                    "plugin": "Exclusion",
                    "examples": "job('example') {\r\n    wrappers {\r\n        exclusionResources('first', 'second')\r\n    }\r\n    steps {\r\n        criticalBlock {\r\n            shell('echo Hello World!')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "golang",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "text": "golang(String version)",
                            "availableSince": "1.27",
                            "html": "Sets up a Go environment.\r\n     ",
                            "firstSentenceCommentText": "Sets up a Go environment."
                        }
                    ],
                    "plugin": "golang",
                    "examples": "job('example') {\r\n    wrappers {\r\n        golang('Go 1.3.3')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "injectPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "injectPasswords()",
                            "availableSince": "1.23",
                            "html": "Injects globally defined passwords as environment variables into the job.\r\n     ",
                            "firstSentenceCommentText": "Injects globally defined passwords as environment variables into the job."
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example') {\r\n    wrappers {\r\n        injectPasswords()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "keychains",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keychainsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "keychains(Closure keychainsClosure)",
                            "availableSince": "1.24",
                            "html": "Configures keychains for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures keychains for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext"
                        }
                    ],
                    "plugin": "kpp-management-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        keychains {\r\n            keychain('test1', 'test2')\r\n            delete()\r\n            overwrite()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logSizeChecker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "logSizeChecker(Closure closure = null)",
                            "availableSince": "1.23",
                            "html": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.\r\n     ",
                            "firstSentenceCommentText": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext"
                        }
                    ],
                    "plugin": "logfilesizechecker",
                    "examples": "// default configuration using the system wide definition\r\njob('example-1') {\r\n    wrappers {\r\n        logSizeChecker()\r\n    }\r\n}\r\n\r\n// using job specific configuration, setting the max log size to 10 MB and fail the build of the log file is larger.\r\njob('example-2') {\r\n    wrappers {\r\n        logSizeChecker {\r\n            maxSize(10)\r\n            failBuild()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "maskPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "maskPasswords()",
                            "availableSince": "1.26",
                            "html": "Masks the passwords that occur in the console output.\r\n     ",
                            "firstSentenceCommentText": "Masks the passwords that occur in the console output."
                        }
                    ],
                    "plugin": "mask-passwords",
                    "examples": "job('example') {\r\n    wrappers {\r\n        maskPasswords()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "nodejs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "text": "nodejs(String installation)",
                            "availableSince": "1.27",
                            "html": "Sets up a NodeJS environment.\r\n     ",
                            "firstSentenceCommentText": "Sets up a NodeJS environment."
                        }
                    ],
                    "plugin": "nodejs",
                    "examples": "job('example') {\r\n    wrappers {\r\n        nodejs('NodeJS 0.10.26')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "preBuildCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "preBuildCleanup(Closure closure = null)",
                            "availableSince": "1.22",
                            "html": "Deletes files from the workspace before the build starts.\r\n     ",
                            "firstSentenceCommentText": "Deletes files from the workspace before the build starts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext"
                        }
                    ],
                    "plugin": "ws-cleanup",
                    "examples": "// cleanup all files\r\njob('example-1') {\r\n    wrappers {\r\n        preBuildCleanup()\r\n    }\r\n}\r\n\r\n// cleanup all files and directories in target directories, but only if the CLEANUP build parameter is set to 'true'\r\njob('example-2') {\r\n    wrappers {\r\n        preBuildCleanup {\r\n            includePattern('**/target/**')\r\n            deleteDirectories()\r\n            cleanupParameter('CLEANUP')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "preScmSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "preScmSteps(Closure closure)",
                            "availableSince": "1.31",
                            "html": "Allows to run build steps before SCM checkout.\r\n     ",
                            "firstSentenceCommentText": "Allows to run build steps before SCM checkout.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext"
                        }
                    ],
                    "plugin": "preSCMbuildstep",
                    "examples": "job('example') {\r\n    wrappers {\r\n        preScmSteps {\r\n            steps {\r\n                shell('echo Hello World')\r\n            }\r\n            failOnError()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "rbenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubyVersion",
                                    "type": "String"
                                },
                                {
                                    "name": "rbenvClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rbenv(String rubyVersion, Closure rbenvClosure = null)",
                            "availableSince": "1.27",
                            "html": "Specifies the rbenv wrapper to be used during job execution.\r\n     ",
                            "firstSentenceCommentText": "Specifies the rbenv wrapper to be used during job execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext"
                        }
                    ],
                    "plugin": "rbenv",
                    "examples": "job('example') {\r\n    wrappers {\r\n        rbenv('2.1.2') {\r\n            ignoreLocalVersion()\r\n            gems('bundler', 'rake')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "release",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "release(Closure releaseClosure)",
                            "availableSince": "1.22",
                            "html": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.\r\n     ",
                            "firstSentenceCommentText": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext"
                        }
                    ],
                    "plugin": "release",
                    "examples": "job('example') {\r\n    wrappers {\r\n        release {\r\n            doNotKeepLog()\r\n            overrideBuildParameters()\r\n            parameters {\r\n                booleanParam('param', false, 'some boolean build parameter')\r\n            }\r\n            preBuildSteps {\r\n                shell(\"echo 'hello'\")\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "runOnSameNodeAs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "useSameWorkspace",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "runOnSameNodeAs(String jobName, boolean useSameWorkspace = false)",
                            "html": "Build the job on the same node as another job and optionally use the same workspace as the other job.\r\n     ",
                            "firstSentenceCommentText": "Build the job on the same node as another job and optionally use the same workspace as the other job."
                        }
                    ],
                    "plugin": "job-node-stalker",
                    "examples": "job('example') {\r\n    wrappers {\r\n        runOnSameNodeAs('project-a', true)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "rvm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubySpecification",
                                    "type": "String"
                                }
                            ],
                            "text": "rvm(String rubySpecification)",
                            "html": "Configures the job to prepare a Ruby environment controlled by RVM for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to prepare a Ruby environment controlled by RVM for the build."
                        }
                    ],
                    "plugin": "rvm",
                    "examples": "job('example') {\r\n    wrappers {\r\n        rvm('ruby-1.9.3')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "sshAgent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "sshAgent(String credentials)",
                            "html": "Provide SSH credentials to builds via a ssh-agent in Jenkins.\r\n     ",
                            "firstSentenceCommentText": "Provide SSH credentials to builds via a ssh-agent in Jenkins."
                        }
                    ],
                    "plugin": "ssh-agent",
                    "examples": "job('example') {\r\n    wrappers {\r\n        sshAgent('deployment-key')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeoutClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "timeout(Closure timeoutClosure = null)",
                            "availableSince": "1.24",
                            "html": "Add a timeout to the build job.\r\n\r\n Defaults to a absolute timeout with a maximum build time of 3 minutes.\r\n     ",
                            "firstSentenceCommentText": "Add a timeout to the build job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext"
                        }
                    ],
                    "plugin": "build-timeout",
                    "examples": "// defines an absolute timeout with a maximum build time of 3 minutes\r\njob('example-1') {\r\n    wrappers {\r\n        timeout()\r\n    }\r\n}\r\n\r\n// defines an absolute timeout with a maximum build time of one hour\r\njob('example-2') {\r\n    wrappers {\r\n        timeout {\r\n            absolute(60)\r\n        }\r\n    }\r\n}\r\n\r\n// the build will timeout when it take 3 times longer than the reference build duration of the last 3 builds\r\n// use a 30 minutes timeout when no successful builds available as reference\r\njob('example-3') {\r\n    wrappers {\r\n        timeout {\r\n            elastic(300, 3, 30)\r\n        }\r\n    }\r\n}\r\n\r\n// abort when the build is likely to be stuck\r\njob('example-4') {\r\n    wrappers {\r\n        timeout {\r\n            likelyStuck()\r\n        }\r\n    }\r\n}\r\n\r\n// timeout if there has been no activity for 180 seconds\r\n// then fail the build and set a build description\r\njob('example-5') {\r\n    wrappers {\r\n        timeout {\r\n            noActivity(180)\r\n            failBuild()\r\n            writeDescription('Build failed due to timeout after {0} minutes')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "timestamps",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "timestamps()",
                            "html": "Adds timestamps to the console log.",
                            "firstSentenceCommentText": "Adds timestamps to the console log."
                        }
                    ],
                    "plugin": "timestamper",
                    "examples": "job('example') {\r\n    wrappers {\r\n        timestamps()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "toolenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "String..."
                                }
                            ],
                            "text": "toolenv(String... tools)",
                            "availableSince": "1.21",
                            "html": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment.\r\n     ",
                            "firstSentenceCommentText": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment."
                        }
                    ],
                    "plugin": "toolenv",
                    "examples": "job('example') {\r\n    wrappers {\r\n        toolenv('Ant 1.8.2', 'Maven 3.1')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "xvfb",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "xvfb(String installation, Closure closure = null)",
                            "availableSince": "1.31",
                            "html": "Controls the Xvfb virtual frame buffer X11 server.\r\n     ",
                            "firstSentenceCommentText": "Controls the Xvfb virtual frame buffer X11 server.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext"
                        }
                    ],
                    "plugin": "xvfb",
                    "examples": "job('example') {\r\n    wrappers {\r\n        xvfb('default') {\r\n            screen('1920x1080x24')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "xvnc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xvncClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "xvnc(Closure xvncClosure = null)",
                            "availableSince": "1.26",
                            "html": "Run a Xvnc session during a build.\r\n     ",
                            "firstSentenceCommentText": "Run a Xvnc session during a build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext"
                        }
                    ],
                    "plugin": "xvnc",
                    "examples": "job('example') {\r\n    wrappers {\r\n        xvnc {\r\n            takeScreenshot()\r\n            useXauthority(false)\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.BuildFlowJob": {
            "type": "javaposse.jobdsl.dsl.jobs.BuildFlowJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "buildFlow",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildFlowText",
                                    "type": "String"
                                }
                            ],
                            "text": "buildFlow(String buildFlowText)",
                            "html": "Sets the build flow DSL script.\r\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read DSL scripts from\r\n files.",
                            "firstSentenceCommentText": "Sets the build flow DSL script.\r\n "
                        }
                    ],
                    "examples": "// triple-quotes can be used for inline flow DSL definition\r\nbuildFlowJob('example-1') {\r\n    buildFlow('''\r\n        build(\"job1\")\r\n    ''')\r\n}\r\n\r\n// the build flow text can also be read from a file\r\nbuildFlowJob('example-2') {\r\n    buildFlow(readFileFromWorkspace('my-build-flow-text.groovy'))\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildFlowPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure closure)",
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        shell('echo START')\r\n        gradle('check')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\r\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.jobfilter.RegexFilter": {
            "type": "javaposse.jobdsl.dsl.views.jobfilter.RegexFilter",
            "methods": [
                {
                    "name": "matchType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "matchType",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.MatchType"
                                }
                            ],
                            "text": "matchType(javaposse.jobdsl.dsl.views.jobfilter.MatchType matchType)",
                            "html": "Specifies whether the filter includes or excludes jobs from the view.\r\n Possible values are <TT>MatchType.INCLUDE_MATCHED</TT>, <TT>MatchType.INCLUDE_UNMATCHED</TT>,\r\n <TT>MatchType.EXCLUDE_MATCHED</TT> or <TT>MatchType.EXCLUDE_UNMATCHED</TT>.",
                            "firstSentenceCommentText": "Specifies whether the filter includes or excludes jobs from the view.\r\n "
                        }
                    ]
                },
                {
                    "name": "matchValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.RegexMatchValue"
                                }
                            ],
                            "text": "matchValue(javaposse.jobdsl.dsl.views.jobfilter.RegexMatchValue value)",
                            "html": "Selects the value to be matched. Possible values are <TT>RegexMatchValue.NAME</TT>,\r\n <TT>RegexMatchValue.DESCRIPTION</TT>, <TT>RegexMatchValue.SCM</TT>, <TT>RegexMatchValue.EMAIL</TT>,\r\n <TT>RegexMatchValue.MAVEN</TT>, <TT>RegexMatchValue.SCHEDULE</TT> or <TT>RegexMatchValue.NODE</TT>.",
                            "firstSentenceCommentText": "Selects the value to be matched. "
                        }
                    ]
                },
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "regex(String regex)",
                            "html": "Sets the regular expression used for filtering the selected value.",
                            "firstSentenceCommentText": "Sets the regular expression used for filtering the selected value."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.jobfilter.JobStatusesFilter": {
            "type": "javaposse.jobdsl.dsl.views.jobfilter.JobStatusesFilter",
            "methods": [
                {
                    "name": "matchType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "matchType",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.MatchType"
                                }
                            ],
                            "text": "matchType(javaposse.jobdsl.dsl.views.jobfilter.MatchType matchType)",
                            "html": "Specifies whether the filter includes or excludes jobs from the view.\r\n Possible values are <TT>MatchType.INCLUDE_MATCHED</TT>, <TT>MatchType.INCLUDE_UNMATCHED</TT>,\r\n <TT>MatchType.EXCLUDE_MATCHED</TT> or <TT>MatchType.EXCLUDE_UNMATCHED</TT>.",
                            "firstSentenceCommentText": "Specifies whether the filter includes or excludes jobs from the view.\r\n "
                        }
                    ]
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "status",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.Status..."
                                }
                            ],
                            "text": "status(javaposse.jobdsl.dsl.views.jobfilter.Status... status)",
                            "html": "Selects the status of the jobs to be included or excluded. Possible values are <TT>Status.UNSTABLE</TT>,\r\n <TT>Status.FAILED</TT>, <TT>Status.ABORTED</TT>, <TT>Status.DISABLED</TT> or {",
                            "firstSentenceCommentText": "Selects the status of the jobs to be included or excluded. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.JobFiltersContext": {
            "type": "javaposse.jobdsl.dsl.views.JobFiltersContext",
            "methods": [
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regexFilterClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "regex(Closure regexFilterClosure)",
                            "html": "Adds a regular expression filter.",
                            "firstSentenceCommentText": "Adds a regular expression filter.",
                            "contextClass": "javaposse.jobdsl.dsl.views.jobfilter.RegexFilter"
                        }
                    ],
                    "examples": "listView('example') {\r\n    jobFilters {\r\n        regex {\r\n            matchType(MatchType.EXCLUDE_MATCHED)\r\n            matchValue(RegexMatchValue.DESCRIPTION)\r\n            regex('.*project-a.*')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "statusesFilterClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "status(Closure statusesFilterClosure)",
                            "html": "Adds a job status filter.",
                            "firstSentenceCommentText": "Adds a job status filter.",
                            "contextClass": "javaposse.jobdsl.dsl.views.jobfilter.JobStatusesFilter"
                        }
                    ],
                    "examples": "listView('example') {\r\n    jobFilters {\r\n        status {\r\n            matchType(MatchType.INCLUDE_MATCHED)\r\n            status(Status.FAILED)\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.JobsContext": {
            "type": "javaposse.jobdsl.dsl.views.JobsContext",
            "methods": [
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String jobName)",
                            "html": "Adds jobs to the view. Can be called multiple times to added more jobs.",
                            "firstSentenceCommentText": "Adds jobs to the view. "
                        }
                    ],
                    "examples": "listView('example') {\r\n    jobs {\r\n        name('build')\r\n        name('test')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "names",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobNames",
                                    "type": "String..."
                                }
                            ],
                            "text": "names(String... jobNames)",
                            "html": "Adds jobs to the view. Can be called multiple times to added more jobs.",
                            "firstSentenceCommentText": "Adds jobs to the view. "
                        }
                    ],
                    "examples": "listView('example') {\r\n    jobs {\r\n        names('build', 'test')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "regex(String regex)",
                            "html": "If configured, the regular expression will be applied to all job names. Those that match the regular expression\r\n will be shown in the view.",
                            "firstSentenceCommentText": "If configured, the regular expression will be applied to all job names. "
                        }
                    ],
                    "examples": "listView('example') {\r\n    jobs {\r\n        regex('project-A-.+')\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.BuildMonitorView": {
            "type": "javaposse.jobdsl.dsl.views.BuildMonitorView",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "buildMonitorView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "buildMonitorView('project-a') {\r\n    description('View for project A')\r\n}\r\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterBuildQueue(boolean filterBuildQueue = true)",
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "buildMonitorView('example') {\r\n    filterBuildQueue()\r\n}\r\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterExecutors(boolean filterExecutors = true)",
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\r\n "
                        }
                    ],
                    "examples": "buildMonitorView('example') {\r\n    filterExecutors()\r\n}\r\n"
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobFilters(Closure jobFiltersClosure)",
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\r\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ],
                    "examples": "buildMonitorView('example') {\r\n    jobFilters {\r\n        regex {\r\n            matchType(MatchType.EXCLUDE_MATCHED)\r\n            matchValue(RegexMatchValue.DESCRIPTION)\r\n            regex('.*project-a.*')\r\n        }\r\n        status {\r\n            matchType(MatchType.INCLUDE_MATCHED)\r\n            status(Status.FAILED)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobs(Closure jobsClosure)",
                            "html": "Adds jobs to the view.",
                            "firstSentenceCommentText": "Adds jobs to the view.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ],
                    "examples": "buildMonitorView('example') {\r\n    jobs {\r\n        name('build')\r\n        name('test')\r\n        names('compile', 'deploy')\r\n        regex('project-A-.+')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "recurse",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldRecurse",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "recurse(boolean shouldRecurse = true)",
                            "availableSince": "1.31",
                            "html": "If set to <TT>true</TT>, jobs from sub-folders will be shown.\r\n Defaults to <TT>false</TT>.\r\n     ",
                            "firstSentenceCommentText": "If set to true, jobs from sub-folders will be shown.\r\n "
                        }
                    ],
                    "examples": "buildMonitorView('project-A') {\r\n    recurse()\r\n}\r\n"
                },
                {
                    "name": "statusFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "javaposse.jobdsl.dsl.views.ListView.StatusFilter"
                                }
                            ],
                            "text": "statusFilter(javaposse.jobdsl.dsl.views.ListView.StatusFilter filter)",
                            "html": "Filter the job list by enabled/disabled status. Valid values are <TT>StatusFilter.ALL</TT> (default),\r\n <TT>StatusFilter.ENABLED</TT> and <TT>StatusFilter.DISABLED</TT>.",
                            "firstSentenceCommentText": "Filter the job list by enabled/disabled status. "
                        }
                    ],
                    "examples": "buildMonitorView('project-A') {\r\n    statusFilter(StatusFilter.ENABLED)\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.BuildPipelineView": {
            "type": "javaposse.jobdsl.dsl.views.BuildPipelineView",
            "methods": [
                {
                    "name": "alwaysAllowManualTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alwaysAllowManualTrigger",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "alwaysAllowManualTrigger(boolean alwaysAllowManualTrigger = true)",
                            "html": "Use this method if you want to be able to execute a successful pipeline step again. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to be able to execute a successful pipeline step again. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    alwaysAllowManualTrigger()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "consoleOutputLinkStyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "outputStyle",
                                    "type": "javaposse.jobdsl.dsl.views.BuildPipelineView.OutputStyle"
                                }
                            ],
                            "text": "consoleOutputLinkStyle(javaposse.jobdsl.dsl.views.BuildPipelineView.OutputStyle outputStyle)",
                            "html": "Defines the console output style. Options are <TT>OutputStyle.Lightbox</TT>, <TT>OutputStyle.NewWindow</TT> and\r\n <TT>OutputStyle.ThisWindow</TT>.",
                            "firstSentenceCommentText": "Defines the console output style. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    consoleOutputLinkStyle(OutputStyle.Lightbox)\r\n}"
                },
                {
                    "name": "customCssUrl",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "customCssUrl",
                                    "type": "String"
                                }
                            ],
                            "text": "customCssUrl(String customCssUrl)",
                            "html": "Sets a URL for custom CSS files.",
                            "firstSentenceCommentText": "Sets a URL for custom CSS files."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    customCssUrl('url/to/custom/css/files')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "buildPipelineView('project-a') {\r\n    description('View for project A')\r\n}\r\n"
                },
                {
                    "name": "displayedBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayedBuilds",
                                    "type": "int"
                                }
                            ],
                            "text": "displayedBuilds(int displayedBuilds)",
                            "html": "Sets number of displayed builds. Defaults to 1 and must be greater than zero.",
                            "firstSentenceCommentText": "Sets number of displayed builds. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    displayedBuilds(5)\r\n}\r\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterBuildQueue(boolean filterBuildQueue = true)",
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    filterBuildQueue()\r\n}\r\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterExecutors(boolean filterExecutors = true)",
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\r\n "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    filterExecutors()\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "refreshFrequency",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "refreshFrequency",
                                    "type": "int"
                                }
                            ],
                            "text": "refreshFrequency(int refreshFrequency)",
                            "html": "Frequency at which the Build Pipeline Plugin updates the build cards in seconds. Defaults to 3.",
                            "firstSentenceCommentText": "Frequency at which the Build Pipeline Plugin updates the build cards in seconds. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    refreshFrequency(60)\r\n}\r\n"
                },
                {
                    "name": "selectedJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectedJob",
                                    "type": "String"
                                }
                            ],
                            "text": "selectedJob(String selectedJob)",
                            "html": "Defines the first job in the pipeline.",
                            "firstSentenceCommentText": "Defines the first job in the pipeline."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    selectedJob('project-a-compile')\r\n}\r\n"
                },
                {
                    "name": "showPipelineDefinitionHeader",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showPipelineDefinitionHeader",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showPipelineDefinitionHeader(boolean showPipelineDefinitionHeader = true)",
                            "html": "Use this method if you want to show the pipeline definition header in the pipeline view. Defaults to\r\n <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to show the pipeline definition header in the pipeline view. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    showPipelineDefinitionHeader()\r\n}\r\n"
                },
                {
                    "name": "showPipelineParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showPipelineParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showPipelineParameters(boolean showPipelineParameters = true)",
                            "html": "Use this method if you want to display the parameters used to run the first job in each pipeline's revision box.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to display the parameters used to run the first job in each pipeline's revision box.\r\n "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    showPipelineParameters()\r\n}\r\n"
                },
                {
                    "name": "showPipelineParametersInHeaders",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showPipelineParametersInHeaders",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showPipelineParametersInHeaders(boolean showPipelineParametersInHeaders = true)",
                            "html": "Use this method if you want to display the parameters used to run the latest successful job in the pipeline's\r\n project headers. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to display the parameters used to run the latest successful job in the pipeline's\r\n project headers. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    showPipelineParametersInHeaders()\r\n}\r\n"
                },
                {
                    "name": "startsWithParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "startsWithParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "startsWithParameters(boolean startsWithParameters = true)",
                            "availableSince": "1.26",
                            "html": "Use this method if you want toggle the \"Pipeline starts with parameters\" option in the pipeline view\r\n configuration. Defaults to <TT>false</TT>.\r\n     ",
                            "firstSentenceCommentText": "Use this method if you want toggle the \"Pipeline starts with parameters\" option in the pipeline view\r\n configuration. "
                        }
                    ],
                    "plugin": "build-pipeline-plugin",
                    "examples": "buildPipelineView('example') {\r\n    startsWithParameters()\r\n}\r\n"
                },
                {
                    "name": "title",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "title",
                                    "type": "String"
                                }
                            ],
                            "text": "title(String title)",
                            "html": "Sets a title for the pipeline.",
                            "firstSentenceCommentText": "Sets a title for the pipeline."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    title('Project A CI Pipeline')\r\n}\r\n"
                },
                {
                    "name": "triggerOnlyLatestJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggerOnlyLatestJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "triggerOnlyLatestJob(boolean triggerOnlyLatestJob = true)",
                            "html": "Use this method to restrict the display of a trigger button to only the most recent successful build pipelines.\r\n This option will also limit retries to just unsuccessful builds of the most recent build pipelines. Defaults to\r\n <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method to restrict the display of a trigger button to only the most recent successful build pipelines.\r\n "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\r\n    triggerOnlyLatestJob()\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.CategorizationCriteriaContext": {
            "type": "javaposse.jobdsl.dsl.views.CategorizationCriteriaContext",
            "methods": [
                {
                    "name": "regexGroupingRule",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groupRegex",
                                    "type": "String"
                                },
                                {
                                    "name": "namingRule",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "regexGroupingRule(String groupRegex, String namingRule = null)",
                            "html": "Adds a rule to build groups of jobs that will be categorized by using a regular expression.",
                            "firstSentenceCommentText": "Adds a rule to build groups of jobs that will be categorized by using a regular expression."
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\r\n    categorizationCriteria {\r\n        regexGroupingRule(/^configuration_([^_]+).*$/)\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.ColumnsContext": {
            "type": "javaposse.jobdsl.dsl.views.ColumnsContext",
            "methods": [
                {
                    "name": "buildButton",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "buildButton()",
                            "html": "Adds a column showing a button for scheduling a build.",
                            "firstSentenceCommentText": "Adds a column showing a button for scheduling a build."
                        }
                    ]
                },
                {
                    "name": "categorizedJob",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "categorizedJob()",
                            "availableSince": "1.31",
                            "html": "Adds a column for showing a job's category.\r\n     ",
                            "firstSentenceCommentText": "Adds a column for showing a job's category."
                        }
                    ],
                    "plugin": "categorized-view"
                },
                {
                    "name": "claim",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "claim()",
                            "availableSince": "1.29",
                            "html": "Adds a column for showing that a build has been claimed.\r\n     ",
                            "firstSentenceCommentText": "Adds a column for showing that a build has been claimed."
                        }
                    ],
                    "plugin": "claim"
                },
                {
                    "name": "configureProject",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "configureProject()",
                            "availableSince": "1.31",
                            "html": "Adds a column showing a button for opening the item's configuration.\r\n     ",
                            "firstSentenceCommentText": "Adds a column showing a button for opening the item's configuration."
                        }
                    ],
                    "plugin": "extra-columns"
                },
                {
                    "name": "customIcon",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "customIcon()",
                            "availableSince": "1.33",
                            "html": "Adds a column showing a custom icon.\r\n     ",
                            "firstSentenceCommentText": "Adds a column showing a custom icon."
                        }
                    ],
                    "plugin": "custom-job-icon"
                },
                {
                    "name": "lastBuildConsole",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "lastBuildConsole()",
                            "availableSince": "1.23",
                            "html": "Adds a column showing a button for opening the console output.\r\n     ",
                            "firstSentenceCommentText": "Adds a column showing a button for opening the console output."
                        }
                    ],
                    "plugin": "extra-columns"
                },
                {
                    "name": "lastBuildNode",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "lastBuildNode()",
                            "availableSince": "1.31",
                            "html": "Adds a column for showing the node which executed the last build.\r\n     ",
                            "firstSentenceCommentText": "Adds a column for showing the node which executed the last build."
                        }
                    ],
                    "plugin": "build-node-column"
                },
                {
                    "name": "lastDuration",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "lastDuration()",
                            "html": "Adds a column showing the duration of the last build.",
                            "firstSentenceCommentText": "Adds a column showing the duration of the last build."
                        }
                    ]
                },
                {
                    "name": "lastFailure",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "lastFailure()",
                            "html": "Adds a column showing the last failed build.",
                            "firstSentenceCommentText": "Adds a column showing the last failed build."
                        }
                    ]
                },
                {
                    "name": "lastSuccess",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "lastSuccess()",
                            "html": "Adds a column showing the last successful build.",
                            "firstSentenceCommentText": "Adds a column showing the last successful build."
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "name()",
                            "html": "Adds a column showing the item name.",
                            "firstSentenceCommentText": "Adds a column showing the item name."
                        }
                    ]
                },
                {
                    "name": "robotResults",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "robotResults()",
                            "availableSince": "1.33",
                            "html": "Adds a column for showing Robot Framework test results.\r\n     ",
                            "firstSentenceCommentText": "Adds a column for showing Robot Framework test results."
                        }
                    ],
                    "plugin": "robot"
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "status()",
                            "html": "Adds a column showing the status of the last build.",
                            "firstSentenceCommentText": "Adds a column showing the status of the last build."
                        }
                    ]
                },
                {
                    "name": "weather",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "weather()",
                            "html": "Adds a weather report showing the aggregated status of recent builds.",
                            "firstSentenceCommentText": "Adds a weather report showing the aggregated status of recent builds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.CategorizedJobsView": {
            "type": "javaposse.jobdsl.dsl.views.CategorizedJobsView",
            "methods": [
                {
                    "name": "categorizationCriteria",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "categorizationCriteriaClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "categorizationCriteria(Closure categorizationCriteriaClosure)",
                            "html": "Adds grouping rules.",
                            "firstSentenceCommentText": "Adds grouping rules.",
                            "contextClass": "javaposse.jobdsl.dsl.views.CategorizationCriteriaContext"
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\r\n    categorizationCriteria {\r\n        regexGroupingRule(/^configuration_([^_]+).*$/)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "columns(Closure columnsClosure)",
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.ColumnsContext"
                        }
                    ],
                    "examples": "categorizedJobsView('project-A') {\r\n    columns {\r\n        status()\r\n        weather()\r\n        name()\r\n        lastSuccess()\r\n        lastFailure()\r\n        lastDuration()\r\n        buildButton()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "categorizedJobsView('project-a') {\r\n    description('View for project A')\r\n}\r\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterBuildQueue(boolean filterBuildQueue = true)",
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\r\n    filterBuildQueue()\r\n}\r\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterExecutors(boolean filterExecutors = true)",
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\r\n "
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\r\n    filterExecutors()\r\n}\r\n"
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobFilters(Closure jobFiltersClosure)",
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\r\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\r\n    jobFilters {\r\n        regex {\r\n            matchType(MatchType.EXCLUDE_MATCHED)\r\n            matchValue(RegexMatchValue.DESCRIPTION)\r\n            regex('.*project-a.*')\r\n        }\r\n        status {\r\n            matchType(MatchType.INCLUDE_MATCHED)\r\n            status(Status.FAILED)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobs(Closure jobsClosure)",
                            "html": "Adds jobs to the view.",
                            "firstSentenceCommentText": "Adds jobs to the view.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\r\n    jobs {\r\n        name('build')\r\n        name('test')\r\n        names('compile', 'deploy')\r\n        regex('project-A-.+')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "recurse",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldRecurse",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "recurse(boolean shouldRecurse = true)",
                            "availableSince": "1.31",
                            "html": "If set to <TT>true</TT>, jobs from sub-folders will be shown.\r\n Defaults to <TT>false</TT>.\r\n     ",
                            "firstSentenceCommentText": "If set to true, jobs from sub-folders will be shown.\r\n "
                        }
                    ],
                    "examples": "categorizedJobsView('project-A') {\r\n    recurse()\r\n}\r\n"
                },
                {
                    "name": "statusFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "javaposse.jobdsl.dsl.views.ListView.StatusFilter"
                                }
                            ],
                            "text": "statusFilter(javaposse.jobdsl.dsl.views.ListView.StatusFilter filter)",
                            "html": "Filter the job list by enabled/disabled status. Valid values are <TT>StatusFilter.ALL</TT> (default),\r\n <TT>StatusFilter.ENABLED</TT> and <TT>StatusFilter.DISABLED</TT>.",
                            "firstSentenceCommentText": "Filter the job list by enabled/disabled status. "
                        }
                    ],
                    "examples": "categorizedJobsView('project-A') {\r\n    statusFilter(StatusFilter.ENABLED)\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.ConfigFile": {
            "type": "javaposse.jobdsl.dsl.ConfigFile",
            "methods": [
                {
                    "name": "comment",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "comment",
                                    "type": "String"
                                }
                            ],
                            "text": "comment(String comment)",
                            "html": "Sets a comment for the config file.",
                            "firstSentenceCommentText": "Sets a comment for the config file."
                        }
                    ]
                },
                {
                    "name": "content",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "content",
                                    "type": "String"
                                }
                            ],
                            "text": "content(String content)",
                            "html": "Sets the content for the config file. Use <a href='../../../DslFactory.html#readFileFromWorkspace(java.lang.String)' title='DslFactory.readFileFromWorkspace'>DslFactory.readFileFromWorkspace</a> to read the\r\n content from a file.",
                            "firstSentenceCommentText": "Sets the content for the config file. "
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.DeliveryPipelinesContext": {
            "type": "javaposse.jobdsl.dsl.views.DeliveryPipelinesContext",
            "methods": [
                {
                    "name": "component",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "initialJobName",
                                    "type": "String"
                                }
                            ],
                            "text": "component(String name, String initialJobName)",
                            "html": "Add a pipeline by specifying name and start job.",
                            "firstSentenceCommentText": "Add a pipeline by specifying name and start job."
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    pipelines {\r\n        component('Sub System A', 'compile-a')\r\n        component('Sub System B', 'compile-b')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "regex(String regex)",
                            "html": "Add a pipeline by specifying a regular expression.",
                            "firstSentenceCommentText": "Add a pipeline by specifying a regular expression."
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    pipelines {\r\n        regex(/compile-(.*)/)\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.DeliveryPipelineView": {
            "type": "javaposse.jobdsl.dsl.views.DeliveryPipelineView",
            "methods": [
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "number",
                                    "type": "int"
                                }
                            ],
                            "text": "columns(int number)",
                            "html": "Sets the number of columns used for showing pipelines. Defaults to 1.",
                            "firstSentenceCommentText": "Sets the number of columns used for showing pipelines. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    columns(2)\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "enableManualTriggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "enableManualTriggers(boolean value = true)",
                            "html": "Show a button if a task is manual. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show a button if a task is manual. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    enableManualTriggers()\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "pipelineInstances",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "number",
                                    "type": "int"
                                }
                            ],
                            "text": "pipelineInstances(int number)",
                            "html": "Sets the number of pipelines instances shown for each pipeline. Defaults to 3.",
                            "firstSentenceCommentText": "Sets the number of pipelines instances shown for each pipeline. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "pipelines",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pipelinesClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "pipelines(Closure pipelinesClosure)",
                            "html": "Defines pipelines by either specifying names and start jobs or by regular expressions. Both variants can be\r\n called multiple times to add different pipelines to the view.",
                            "firstSentenceCommentText": "Defines pipelines by either specifying names and start jobs or by regular expressions. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.DeliveryPipelinesContext"
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    pipelines {\r\n        component('Sub System A', 'compile-a')\r\n        component('Sub System B', 'compile-b')\r\n        regex(/compile-(.*)/)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "showAggregatedPipeline",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showAggregatedPipeline(boolean value = true)",
                            "html": "Show a aggregated view where each stage shows the latest version being executed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show a aggregated view where each stage shows the latest version being executed. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    showAggregatedPipeline()\r\n}\r\n"
                },
                {
                    "name": "showAvatars",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showAvatars(boolean value = true)",
                            "html": "Show avatar pictures instead of user names. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show avatar pictures instead of user names. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    showAvatars()\r\n}\r\n"
                },
                {
                    "name": "showChangeLog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "showChangeLog(boolean value = true)",
                            "html": "Show SCM change log for the first job in the pipeline. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show SCM change log for the first job in the pipeline. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    showChangeLog()\r\n}\r\n"
                },
                {
                    "name": "sorting",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sorting",
                                    "type": "javaposse.jobdsl.dsl.views.DeliveryPipelineView.Sorting"
                                }
                            ],
                            "text": "sorting(javaposse.jobdsl.dsl.views.DeliveryPipelineView.Sorting sorting)",
                            "html": "Specifies how to sort the pipeline in the view, only applicable for several pipelines. Possible values are\r\n <TT>Sorting.NONE</TT> (default), <TT>Sorting.TITLE</TT> and <TT>Sorting.LAST_ACTIVITY</TT>.",
                            "firstSentenceCommentText": "Specifies how to sort the pipeline in the view, only applicable for several pipelines. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    sorting(Sorting.TITLE)\r\n}\r\n"
                },
                {
                    "name": "updateInterval",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int"
                                }
                            ],
                            "text": "updateInterval(int seconds)",
                            "html": "Specifies how often the view will be updated. Defaults to 2.",
                            "firstSentenceCommentText": "Specifies how often the view will be updated. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\r\n    updateInterval(60)\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.AuthorizationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.AuthorizationContext",
            "methods": [
                {
                    "name": "permission",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "String"
                                }
                            ],
                            "text": "permission(String permission)",
                            "html": "Adds a specific permission.\r\n     ",
                            "firstSentenceCommentText": "Adds a specific permission."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "text": "permission(String permission, String user)",
                            "html": "Adds a specific permission, but breaks apart the permission from the user name.",
                            "firstSentenceCommentText": "Adds a specific permission, but breaks apart the permission from the user name."
                        }
                    ]
                },
                {
                    "name": "permissionAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "text": "permissionAll(String user)",
                            "html": "Adds all available permissions for the user.",
                            "firstSentenceCommentText": "Adds all available permissions for the user."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.Folder": {
            "type": "javaposse.jobdsl.dsl.Folder",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates permission records.\r\n     ",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.AuthorizationContext"
                        }
                    ],
                    "examples": "// gives permission for the special authenticated group to create jobs in the folder\r\nfolder('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Create:authenticated')\r\n    }\r\n}\r\n\r\n// gives discover permission for the special anonymous user\r\nfolder('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Discover', 'anonymous')\r\n    }\r\n}\r\n\r\n// gives all permissions to the special anonymous user\r\nfolder('example-3') {\r\n    authorization {\r\n        permissionAll('anonymous')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "folder('example-2') {\r\n    configure { folder ->\r\n        folder / icon(class: 'org.example.MyFolderIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the folder.",
                            "firstSentenceCommentText": "Sets a description for the folder."
                        }
                    ],
                    "examples": "folder('project-a') {\r\n    description('Folder for project A')\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "html": "Sets the name to display instead of the actual folder name.",
                            "firstSentenceCommentText": "Sets the name to display instead of the actual folder name."
                        }
                    ],
                    "examples": "folder('project-a') {\r\n    displayName('Project A')\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "primaryView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "primaryViewArg",
                                    "type": "String"
                                }
                            ],
                            "text": "primaryView(String primaryViewArg)",
                            "availableSince": "1.36",
                            "html": "Changes the initial view to show when the folder contains multiple views. Defaults to the <TT>'All'</TT> view.\r\n     ",
                            "firstSentenceCommentText": "Changes the initial view to show when the folder contains multiple views. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.FreeStyleJob": {
            "type": "javaposse.jobdsl.dsl.jobs.FreeStyleJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure closure)",
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        shell('echo START')\r\n        gradle('check')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\r\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.IvyBuilderContext": {
            "type": "javaposse.jobdsl.dsl.helpers.IvyBuilderContext",
            "methods": [
                {
                    "name": "ant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(Closure antClosure = null)",
                            "html": "Uses Ant for building the modules.",
                            "firstSentenceCommentText": "Uses Ant for building the modules.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        }
                    ],
                    "plugin": "ant",
                    "examples": "ivyJob('example') {\r\n    ivyBuilder {\r\n        ant {\r\n            target('clean')\r\n            targets(['test', 'publish'])\r\n            buildFile('build.xml')\r\n            antInstallation('Ant 1.9')\r\n            prop('key', 'value')\r\n            javaOpt('-Xmx=1G')\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.IvyJob": {
            "type": "javaposse.jobdsl.dsl.jobs.IvyJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "incrementalBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "incrementalBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "incrementalBuild(boolean incrementalBuild = true)",
                            "html": "Specifies if only modules with changes or those modules which failed or were\r\n unstable in the previous build should be triggered.\r\n     ",
                            "firstSentenceCommentText": "Specifies if only modules with changes or those modules which failed or were\r\n unstable in the previous build should be triggered."
                        }
                    ]
                },
                {
                    "name": "ivyBranch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivyBranch",
                                    "type": "String"
                                }
                            ],
                            "text": "ivyBranch(String ivyBranch)",
                            "html": "Specifies the default Ivy branch name for this module/set of modules.\r\n     ",
                            "firstSentenceCommentText": "Specifies the default Ivy branch name for this module/set of modules."
                        }
                    ],
                    "examples": "ivyJob('example') {\r\n    ivyBranch('myproduct/1.2')\r\n}\r\n"
                },
                {
                    "name": "ivyBuilder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "ivyBuilder(Closure closure)",
                            "html": "Sets the Ivy builder type to use for building the modules. Only one builder may be specified.",
                            "firstSentenceCommentText": "Sets the Ivy builder type to use for building the modules. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.IvyBuilderContext"
                        }
                    ],
                    "examples": "ivyJob('example') {\r\n    ivyBuilder {\r\n        ant {\r\n            target('clean')\r\n            targets(['test', 'publish'])\r\n            buildFile('build.xml')\r\n            antInstallation('Ant 1.9')\r\n            prop('key', 'value')\r\n            javaOpt('-Xmx=1G')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "ivyFileExcludesPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivyFileExcludesPattern",
                                    "type": "String"
                                }
                            ],
                            "text": "ivyFileExcludesPattern(String ivyFileExcludesPattern)",
                            "html": "Specifies modules to be excluded from the build using Ant-include pattern syntax.\r\n     ",
                            "firstSentenceCommentText": "Specifies modules to be excluded from the build using Ant-include pattern syntax."
                        }
                    ],
                    "examples": "ivyJob('example') {\r\n    ivyFileExcludesPattern('moduleX/**,moduleZ/**')\r\n}\r\n"
                },
                {
                    "name": "ivyFilePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivyFilePattern",
                                    "type": "String"
                                }
                            ],
                            "text": "ivyFilePattern(String ivyFilePattern)",
                            "html": "Specifies the pattern to use to search for ivy module descriptor files (usually\r\n named ivy.xml) in this project.\r\n     ",
                            "firstSentenceCommentText": "Specifies the pattern to use to search for ivy module descriptor files (usually\r\n named ivy.xml) in this project."
                        }
                    ]
                },
                {
                    "name": "ivySettingsFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivySettingsFile",
                                    "type": "String"
                                }
                            ],
                            "text": "ivySettingsFile(String ivySettingsFile)",
                            "html": "Specifies a custom Ivy settings file to be used when parsing Ivy module descriptors.\r\n     ",
                            "firstSentenceCommentText": "Specifies a custom Ivy settings file to be used when parsing Ivy module descriptors."
                        }
                    ],
                    "examples": "ivyJob('example') {\r\n    ivySettingsFile('build/ivy/ivysettings.xml')\r\n}\r\n"
                },
                {
                    "name": "ivySettingsPropertyFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivySettingsPropertyFiles",
                                    "type": "String"
                                }
                            ],
                            "text": "ivySettingsPropertyFiles(String ivySettingsPropertyFiles)",
                            "html": "Specifies property files that need to be loaded before parsing the Ivy settings\r\n file and Ivy module descriptors.\r\n     ",
                            "firstSentenceCommentText": "Specifies property files that need to be loaded before parsing the Ivy settings\r\n file and Ivy module descriptors."
                        }
                    ],
                    "examples": "ivyJob('example') {\r\n    ivySettingsPropertyFiles('branch.properties,deps.properties')\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "perModuleBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "perModuleBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "perModuleBuild(boolean perModuleBuild = true)",
                            "html": "Specifies if each module should be built as a separate sub-project.\r\n     ",
                            "firstSentenceCommentText": "Specifies if each module should be built as a separate sub-project."
                        }
                    ]
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "relativePathToDescriptorFromModuleRoot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "relativePathToDescriptorFromModuleRoot",
                                    "type": "String"
                                }
                            ],
                            "text": "relativePathToDescriptorFromModuleRoot(String relativePathToDescriptorFromModuleRoot)",
                            "html": "Specifies the relative path to the module descriptor file from the root of\r\n each module.\r\n     ",
                            "firstSentenceCommentText": "Specifies the relative path to the module descriptor file from the root of\r\n each module."
                        }
                    ]
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\r\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.Job": {
            "type": "javaposse.jobdsl.dsl.Job",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure closure)",
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        shell('echo START')\r\n        gradle('check')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\r\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.ListView": {
            "type": "javaposse.jobdsl.dsl.views.ListView",
            "methods": [
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "columns(Closure columnsClosure)",
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.ColumnsContext"
                        }
                    ],
                    "examples": "listView('project-A') {\r\n    columns {\r\n        status()\r\n        weather()\r\n        name()\r\n        lastSuccess()\r\n        lastFailure()\r\n        lastDuration()\r\n        buildButton()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "listView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "listView('project-a') {\r\n    description('View for project A')\r\n}\r\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterBuildQueue(boolean filterBuildQueue = true)",
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "listView('example') {\r\n    filterBuildQueue()\r\n}\r\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterExecutors(boolean filterExecutors = true)",
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\r\n "
                        }
                    ],
                    "examples": "listView('example') {\r\n    filterExecutors()\r\n}\r\n"
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobFilters(Closure jobFiltersClosure)",
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\r\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ],
                    "examples": "listView('example') {\r\n    jobFilters {\r\n        regex {\r\n            matchType(MatchType.EXCLUDE_MATCHED)\r\n            matchValue(RegexMatchValue.DESCRIPTION)\r\n            regex('.*project-a.*')\r\n        }\r\n        status {\r\n            matchType(MatchType.INCLUDE_MATCHED)\r\n            status(Status.FAILED)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobs(Closure jobsClosure)",
                            "html": "Adds jobs to the view.",
                            "firstSentenceCommentText": "Adds jobs to the view.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ],
                    "examples": "listView('example') {\r\n    jobs {\r\n        name('build')\r\n        name('test')\r\n        names('compile', 'deploy')\r\n        regex('project-A-.+')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "recurse",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldRecurse",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "recurse(boolean shouldRecurse = true)",
                            "availableSince": "1.31",
                            "html": "If set to <TT>true</TT>, jobs from sub-folders will be shown.\r\n Defaults to <TT>false</TT>.\r\n     ",
                            "firstSentenceCommentText": "If set to true, jobs from sub-folders will be shown.\r\n "
                        }
                    ],
                    "examples": "listView('project-A') {\r\n    recurse()\r\n}\r\n"
                },
                {
                    "name": "statusFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "javaposse.jobdsl.dsl.views.ListView.StatusFilter"
                                }
                            ],
                            "text": "statusFilter(javaposse.jobdsl.dsl.views.ListView.StatusFilter filter)",
                            "html": "Filter the job list by enabled/disabled status. Valid values are <TT>StatusFilter.ALL</TT> (default),\r\n <TT>StatusFilter.ENABLED</TT> and <TT>StatusFilter.DISABLED</TT>.",
                            "firstSentenceCommentText": "Filter the job list by enabled/disabled status. "
                        }
                    ],
                    "examples": "listView('project-A') {\r\n    statusFilter(StatusFilter.ENABLED)\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.AxisContext": {
            "type": "javaposse.jobdsl.dsl.helpers.AxisContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure closure)"
                        }
                    ]
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "text": "jdk(String... axisValues)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "jdk(Iterable<String> axisValues)"
                        }
                    ]
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "text": "label(String axisName, String... axisValues)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "label(String axisName, Iterable<String> axisValues)"
                        }
                    ]
                },
                {
                    "name": "labelExpression",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "text": "labelExpression(String axisName, String... axisValues)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "labelExpression(String axisName, Iterable<String> axisValues)"
                        }
                    ]
                },
                {
                    "name": "text",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "text": "text(String axisName, String... axisValues)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "text(String axisName, Iterable<String> axisValues)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.MatrixJob": {
            "type": "javaposse.jobdsl.dsl.jobs.MatrixJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "axes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "axes(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.AxisContext"
                        }
                    ]
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "childCustomWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "childCustomWorkspace(String workspacePath)",
                            "availableSince": "1.36",
                            "html": "Configures a child custom workspace for the matrix project.\r\n     ",
                            "firstSentenceCommentText": "Configures a child custom workspace for the matrix project."
                        }
                    ]
                },
                {
                    "name": "combinationFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExpression",
                                    "type": "String"
                                }
                            ],
                            "text": "combinationFilter(String filterExpression)"
                        }
                    ]
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "runSequentially",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sequentially",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "runSequentially(boolean sequentially = true)"
                        }
                    ]
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure closure)",
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        shell('echo START')\r\n        gradle('check')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "touchStoneFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "String"
                                },
                                {
                                    "name": "continueOnUnstable",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "touchStoneFilter(String filter, boolean continueOnUnstable = false)"
                        }
                    ]
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\r\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DeployArtifactsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DeployArtifactsContext",
            "methods": [
                {
                    "name": "evenIfUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "evenIfUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "evenIfUnstable(boolean evenIfUnstable = true)"
                        }
                    ]
                },
                {
                    "name": "uniqueVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "uniqueVersion",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "uniqueVersion(boolean uniqueVersion = true)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.MavenPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.MavenPublisherContext",
            "methods": [
                {
                    "name": "aggregateDownstreamTestResults",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobs",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeFailedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "aggregateDownstreamTestResults(String jobs = null, boolean includeFailedBuilds = false)",
                            "availableSince": "1.19",
                            "html": "Configures Aggregate Downstream Test Results. Pass no args or null for jobs (first arg) to automatically\r\n aggregate downstream test results. Pass in comma-delimited list for first arg to manually choose jobs.\r\n Second argument is optional and sets whether failed builds are included.\r\n     ",
                            "firstSentenceCommentText": "Configures Aggregate Downstream Test Results. "
                        }
                    ]
                },
                {
                    "name": "allowBrokenBuildClaiming",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "allowBrokenBuildClaiming()",
                            "availableSince": "1.17"
                        }
                    ],
                    "plugin": "claim"
                },
                {
                    "name": "analysisCollector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "analysisCollectorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "analysisCollector(Closure analysisCollectorClosure = null)",
                            "availableSince": "1.26",
                            "html": "Configures the Analysis Collector Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Analysis Collector Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext"
                        }
                    ],
                    "plugin": "analysis-collector"
                },
                {
                    "name": "androidLint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "androidLint(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Android Lint Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Android Lint Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "android-lint"
                },
                {
                    "name": "archiveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "archiveArtifacts(Closure artifactsClosure)",
                            "availableSince": "1.20",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveArtifacts(String glob, String excludeGlob = null)"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "latestOnly",
                                    "type": "boolean"
                                }
                            ],
                            "text": "archiveArtifacts(String glob, String excludeGlob, boolean latestOnly)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "archiveJavadoc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveJavadoc(Closure javadocClosure = null)",
                            "availableSince": "1.19",
                            "html": "Configures the Javadoc Plugin, used to archive Javadoc artifacts.\r\n     ",
                            "firstSentenceCommentText": "Configures the Javadoc Plugin, used to archive Javadoc artifacts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext"
                        }
                    ],
                    "plugin": "javadoc"
                },
                {
                    "name": "archiveJunit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "junitClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "archiveJunit(String glob, Closure junitClosure = null)",
                            "availableSince": "1.26",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext"
                        }
                    ]
                },
                {
                    "name": "archiveXUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xUnitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "archiveXUnit(Closure xUnitClosure)",
                            "availableSince": "1.24",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext"
                        }
                    ],
                    "plugin": "xunit"
                },
                {
                    "name": "associatedFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "associatedFiles(String files = null)",
                            "availableSince": "1.20",
                            "html": "Configures the Associated Files plugin to associate archived files from\r\n outside Jenkins proper.\r\n     ",
                            "firstSentenceCommentText": "Configures the Associated Files plugin to associate archived files from\r\n outside Jenkins proper."
                        }
                    ],
                    "plugin": "associated-files"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "regularExpressionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "descriptionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "multiConfigurationBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "buildDescription(String regularExpression, String description = '', String regularExpressionForFailed = '', String descriptionForFailed = '', boolean multiConfigurationBuild = false)",
                            "availableSince": "1.17",
                            "html": "Configures the Description Setter Plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Description Setter Plugin."
                        }
                    ],
                    "plugin": "description-setter"
                },
                {
                    "name": "buildPipelineTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamProjectNames",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "buildPipelineTrigger(String downstreamProjectNames, Closure closure = null)",
                            "availableSince": "1.21",
                            "html": "Configures a Build Pipeline Trigger.\r\n     ",
                            "firstSentenceCommentText": "Configures a Build Pipeline Trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext"
                        }
                    ],
                    "plugin": "build-pipeline-plugin"
                },
                {
                    "name": "ccm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ccm(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the CCM Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the CCM Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "ccm"
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "checkstyle(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Checkstyle Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Checkstyle Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "checkstyle"
                },
                {
                    "name": "chucknorris",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "chucknorris()"
                        }
                    ],
                    "plugin": "chucknorris"
                },
                {
                    "name": "cobertura",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFile",
                                    "type": "String"
                                },
                                {
                                    "name": "coberturaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "cobertura(String reportFile, Closure coberturaClosure = null)",
                            "availableSince": "1.16",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext"
                        }
                    ],
                    "plugin": "cobertura"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repoIdArg",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "debianPackage(String repoIdArg, Closure closure = null)",
                            "availableSince": "1.36",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext"
                        }
                    ],
                    "plugin": "debian-package-builder"
                },
                {
                    "name": "dependencyCheck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "dependencyCheck(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the OWASP Dependency-Check Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the OWASP Dependency-Check Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "dependency-check-jenkins-plugin"
                },
                {
                    "name": "deployArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deployArtifacts(Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DeployArtifactsContext"
                        }
                    ]
                },
                {
                    "name": "downstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "thresholdName",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "text": "downstream(String projectName, String thresholdName = 'SUCCESS')",
                            "html": "Downstream build",
                            "firstSentenceCommentText": "Downstream build"
                        }
                    ]
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "downstreamParameterized(Closure downstreamClosure)",
                            "html": "Trigger parameterized build on other projects.",
                            "firstSentenceCommentText": "Trigger parameterized build on other projects.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "highThreshold",
                                    "type": "Object",
                                    "defaultValue": "50"
                                },
                                {
                                    "name": "normalThreshold",
                                    "type": "Object",
                                    "defaultValue": "25"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "dry(String pattern, Object highThreshold = 50, Object normalThreshold = 25, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the DRY Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the DRY Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "dry"
                },
                {
                    "name": "emma",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "emmaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "emma(String fileSet = '', Closure emmaClosure = null)",
                            "availableSince": "1.20",
                            "html": "Configures the Emma Code Coverage plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Emma Code Coverage plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext"
                        }
                    ],
                    "plugin": "emma"
                },
                {
                    "name": "extendedEmail",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients = null, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients, String subjectTemplate, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "contentTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "extendedEmail(String recipients, String subjectTemplate, String contentTemplate, Closure emailClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        }
                    ],
                    "plugin": "email-ext"
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "isRankActivated",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "findbugs(String pattern, boolean isRankActivated = false, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the findbugs publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the findbugs publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "findbugs"
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "recordBuildArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "fingerprint(String targets, boolean recordBuildArtifacts = false)",
                            "availableSince": "1.17",
                            "html": "Configures Fingerprinting.\r\n     ",
                            "firstSentenceCommentText": "Configures Fingerprinting."
                        }
                    ]
                },
                {
                    "name": "flexiblePublish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flexiblePublishClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "flexiblePublish(Closure flexiblePublishClosure)",
                            "availableSince": "1.26",
                            "html": "Configures the FlexiblePublish plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the FlexiblePublish plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext"
                        }
                    ],
                    "plugin": "flexible-publish"
                },
                {
                    "name": "flowdock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "flowdock(String token, Closure flowdockPublisherClosure = null)",
                            "availableSince": "1.23",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        }
                    ],
                    "plugin": "jenkins-flowdock-plugin"
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitPublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "git(Closure gitPublisherClosure)",
                            "availableSince": "1.22",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext"
                        }
                    ],
                    "plugin": "git"
                },
                {
                    "name": "githubCommitNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "githubCommitNotifier()",
                            "availableSince": "1.21",
                            "html": "Create commit status notifications on the commits based on the outcome of the build.\r\n     ",
                            "firstSentenceCommentText": "Create commit status notifications on the commits based on the outcome of the build."
                        }
                    ],
                    "plugin": "github"
                },
                {
                    "name": "groovyPostBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior",
                                    "defaultValue": "Behavior.DoNothing"
                                }
                            ],
                            "text": "groovyPostBuild(String script, javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior behavior = Behavior.DoNothing)",
                            "availableSince": "1.19",
                            "html": "Configures the Groovy Postbuild script plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Groovy Postbuild script plugin."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "groovyPostbuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "groovyPostBuild(Closure groovyPostbuildClosure)",
                            "availableSince": "1.37",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext"
                        }
                    ],
                    "plugin": "groovy-postbuild"
                },
                {
                    "name": "hipChat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "hipChatClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "hipChat(Closure hipChatClosure = null)",
                            "availableSince": "1.33",
                            "html": "Allows notifications to be set to HipChat.\r\n     ",
                            "firstSentenceCommentText": "Allows notifications to be set to HipChat.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext"
                        }
                    ],
                    "plugin": "hipchat"
                },
                {
                    "name": "irc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ircClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "irc(Closure ircClosure)",
                            "availableSince": "1.15",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext"
                        }
                    ],
                    "plugin": "ircbot"
                },
                {
                    "name": "jacocoCodeCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jacocoClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "jacocoCodeCoverage(Closure jacocoClosure = null)",
                            "availableSince": "1.17",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext"
                        }
                    ],
                    "plugin": "jacoco"
                },
                {
                    "name": "joinTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "joinTriggerClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "joinTrigger(Closure joinTriggerClosure)",
                            "availableSince": "1.35",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext"
                        }
                    ],
                    "plugin": "join"
                },
                {
                    "name": "jshint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "jshint(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.20",
                            "html": "Configures the JsHint checkstyle Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the JsHint checkstyle Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "jshint-checkstyle"
                },
                {
                    "name": "mailer",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mailRecipients",
                                    "type": "String"
                                },
                                {
                                    "name": "dontNotifyEveryUnstableBuildBoolean",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sendToIndividualsBoolean",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "mailer(String mailRecipients, Boolean dontNotifyEveryUnstableBuildBoolean = false, Boolean sendToIndividualsBoolean = false)",
                            "availableSince": "1.17"
                        }
                    ],
                    "plugin": "mailer"
                },
                {
                    "name": "mavenDeploymentLinker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenDeploymentLinker(String regex)",
                            "availableSince": "1.23",
                            "html": "Configures the Maven Deployment Linker plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Maven Deployment Linker plugin."
                        }
                    ],
                    "plugin": "maven-deployment-linker"
                },
                {
                    "name": "mergePullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "mergePullRequest(Closure contextClosure = null)",
                            "availableSince": "1.33",
                            "html": "Configures the GitHub pull request builder plugin to perform an automatic request after a successful build.\r\n     ",
                            "firstSentenceCommentText": "Configures the GitHub pull request builder plugin to perform an automatic request after a successful build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext"
                        }
                    ],
                    "plugin": "ghprb"
                },
                {
                    "name": "plotBuildData",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "plotsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "plotBuildData(Closure plotsClosure)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext"
                        }
                    ],
                    "plugin": "plot"
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "pmd(String pattern, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the PMD Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the PMD Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "pmd"
                },
                {
                    "name": "postBuildScripts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildScripts(Closure closure)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext"
                        }
                    ],
                    "plugin": "postbuildscript"
                },
                {
                    "name": "postBuildTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildTask(Closure postBuildClosure)",
                            "availableSince": "1.19",
                            "html": "Configures the Jenkins Post Build Task plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Jenkins Post Build Task plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext"
                        }
                    ],
                    "plugin": "postbuild-task"
                },
                {
                    "name": "publishBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishBuild(Closure contextClosure = null)",
                            "availableSince": "1.33",
                            "html": "Configures the Build Publisher plugin to publish builds to a 'public' Jenkins server.\r\n     ",
                            "firstSentenceCommentText": "Configures the Build Publisher plugin to publish builds to a 'public' Jenkins server.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext"
                        }
                    ],
                    "plugin": "build-publisher"
                },
                {
                    "name": "publishCloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, Closure cloneWorkspaceClosure)",
                            "html": "Clone Workspace SCM",
                            "firstSentenceCommentText": "Clone Workspace SCM",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, String workspaceExcludeGlob, Closure cloneWorkspaceClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlob, String workspaceExcludeGlob, String criteria, String archiveMethod, Closure cloneWorkspaceClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlobArg",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlobArg",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "criteriaArg",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                },
                                {
                                    "name": "archiveMethodArg",
                                    "type": "String",
                                    "defaultValue": "'TAR'"
                                },
                                {
                                    "name": "overrideDefaultExcludesArg",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishCloneWorkspace(String workspaceGlobArg, String workspaceExcludeGlobArg = '', String criteriaArg = 'Any', String archiveMethodArg = 'TAR', boolean overrideDefaultExcludesArg = false, Closure cloneWorkspaceClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        }
                    ],
                    "plugin": "clone-workspace-scm"
                },
                {
                    "name": "publishHtml",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "htmlReportContext",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishHtml(Closure htmlReportContext)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext"
                        }
                    ],
                    "plugin": "htmlpublisher"
                },
                {
                    "name": "publishJabber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String target, Closure jabberClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                },
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String target, String strategyName, Closure jabberClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targetsArg",
                                    "type": "String"
                                },
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                },
                                {
                                    "name": "channelNotificationName",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishJabber(String targetsArg, String strategyName, String channelNotificationName, Closure jabberClosure = null)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        }
                    ],
                    "plugin": "jabber"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishOverSsh(Closure publishOverSshClosure)",
                            "availableSince": "1.34",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "plugin": "publish-over-ssh"
                },
                {
                    "name": "publishRobotFrameworkReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "robotClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "publishRobotFrameworkReports(Closure robotClosure = null)",
                            "availableSince": "1.21",
                            "html": "Configures Jenkins job to publish Robot Framework reports.\r\n By default the following values are applied. If an instance of a\r\n closure is provided, the values from the closure will take effect.\r\n     ",
                            "firstSentenceCommentText": "Configures Jenkins job to publish Robot Framework reports.\r\n ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext"
                        }
                    ],
                    "plugin": "robot"
                },
                {
                    "name": "publishScp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "site",
                                    "type": "String"
                                },
                                {
                                    "name": "scpClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishScp(String site, Closure scpClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext"
                        }
                    ],
                    "plugin": "scp"
                },
                {
                    "name": "retryBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "naginatorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "retryBuild(Closure naginatorClosure = null)",
                            "availableSince": "1.33",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext"
                        }
                    ],
                    "plugin": "naginator"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifier",
                                    "type": "String"
                                },
                                {
                                    "name": "rundeckClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rundeck(String jobIdentifier, Closure rundeckClosure = null)",
                            "availableSince": "1.24",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext"
                        }
                    ],
                    "plugin": "rundeck"
                },
                {
                    "name": "s3",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "profile",
                                    "type": "String"
                                },
                                {
                                    "name": "s3PublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "s3(String profile, Closure s3PublisherClosure)",
                            "availableSince": "1.26",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext"
                        }
                    ],
                    "plugin": "s3"
                },
                {
                    "name": "slackNotifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "slackNotificationsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "slackNotifications(Closure slackNotificationsClosure)",
                            "availableSince": "1.36",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext"
                        }
                    ],
                    "plugin": "slack"
                },
                {
                    "name": "sonar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "sonar(Closure sonarClosure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext"
                        }
                    ],
                    "plugin": "sonar"
                },
                {
                    "name": "stashNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stashNotifierClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "stashNotifier(Closure stashNotifierClosure = null)",
                            "availableSince": "1.23",
                            "html": "Configures the StashNotifier plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the StashNotifier plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext"
                        }
                    ],
                    "plugin": "stashNotifier"
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "excludePattern",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "high",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "normal",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "low",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "Object",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "tasks(String pattern, Object excludePattern = '', Object high = '', Object normal = '', Object low = '', Object ignoreCase = false, Closure staticAnalysisClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Task Scanner Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Task Scanner Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "plugin": "tasks"
                },
                {
                    "name": "textFinder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "alsoCheckConsoleOutput",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "succeedIfFound",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "unstableIfFound",
                                    "type": "Object",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "textFinder(String regularExpression, String fileSet = '', boolean alsoCheckConsoleOutput = false, boolean succeedIfFound = false, Object unstableIfFound = false)",
                            "availableSince": "1.19",
                            "html": "Configures the Jenkins Text Finder plugin.\r\n     ",
                            "firstSentenceCommentText": "Configures the Jenkins Text Finder plugin."
                        }
                    ],
                    "plugin": "text-finder"
                },
                {
                    "name": "violations",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "violations(Closure violationsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "int"
                                },
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "violations(int perFileDisplayLimit, Closure violationsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        }
                    ],
                    "plugin": "violations"
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "consoleParsers",
                                    "type": "List"
                                },
                                {
                                    "name": "parserConfigurations",
                                    "type": "Map",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "warningsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "warnings(List consoleParsers, Map parserConfigurations = [:], Closure warningsClosure = null)",
                            "availableSince": "1.17",
                            "html": "Configures the Compiler Warnings Publisher.\r\n     ",
                            "firstSentenceCommentText": "Configures the Compiler Warnings Publisher.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext"
                        }
                    ],
                    "plugin": "warnings"
                },
                {
                    "name": "wsCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "wsCleanup(Closure closure = null)",
                            "availableSince": "1.23",
                            "html": "Configures the post build action of the Workspace Cleanup Plugin to delete the workspace.\r\n     ",
                            "firstSentenceCommentText": "Configures the post build action of the Workspace Cleanup Plugin to delete the workspace.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext"
                        }
                    ],
                    "plugin": "ws-cleanup"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.MavenTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.MavenTriggerContext",
            "methods": [
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                }
                            ],
                            "text": "cron(String cronString)",
                            "html": "Triggers the job based on regular intervals.",
                            "firstSentenceCommentText": "Triggers the job based on regular intervals."
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        cron('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "gerrit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "gerrit(Closure contextClosure = null)",
                            "html": "Polls Gerrit for changes.",
                            "firstSentenceCommentText": "Polls Gerrit for changes.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GerritContext"
                        }
                    ],
                    "plugin": "gerrit-trigger",
                    "examples": "job('example') {\r\n    triggers {\r\n        gerrit {\r\n            events {\r\n                changeMerged()\r\n                draftPublished()\r\n            }\r\n            project('reg_exp:myProject', ['ant:feature-branch', 'plain:origin/refs/mybranch'])\r\n            project('test-project', '**')\r\n            buildSuccessful(10, null)\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "githubPush",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "githubPush()",
                            "availableSince": "1.16",
                            "html": "Trigger that runs jobs on push notifications from GitHub.\r\n     ",
                            "firstSentenceCommentText": "Trigger that runs jobs on push notifications from GitHub."
                        }
                    ],
                    "plugin": "github",
                    "examples": "job('example-1') {\r\n    triggers {\r\n        githubPush()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "pullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "pullRequest(Closure contextClosure)",
                            "availableSince": "1.22",
                            "html": "Builds pull requests from GitHub and will report the results back to the pull request.\r\n\r\n The pull request builder plugin requires a special Git SCM configuration, see the plugin documentation for\r\n details.\r\n     ",
                            "firstSentenceCommentText": "Builds pull requests from GitHub and will report the results back to the pull request.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext"
                        }
                    ],
                    "plugin": "ghprb",
                    "examples": "job('example') {\r\n    scm {\r\n        git {\r\n            remote {\r\n                github('test-owner/test-project')\r\n                refspec('+refs/pull/*:refs/remotes/origin/pr/*')\r\n            }\r\n            branch('${sha1}')\r\n        }\r\n    }\r\n    triggers {\r\n        pullRequest {\r\n            admin('USER_ID')\r\n            userWhitelist('you@you.com')\r\n            orgWhitelist(['your_github_org', 'another_org'])\r\n            cron('H/5 * * * *')\r\n            triggerPhrase('Ok to test')\r\n            onlyTriggerPhrase()\r\n            useGitHubHooks()\r\n            permitAll()\r\n            autoCloseFailedPullRequests()\r\n            allowMembersOfWhitelistedOrgsAsAdmin()\r\n            extensions {\r\n                commitStatus {\r\n                    context('deploy to staging site')\r\n                    startedStatus('deploying to staging site...')\r\n                    completedStatus('SUCCESS', 'All is well')\r\n                    completedStatus('FAILURE', 'Something went wrong. Investigate!')\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rundeck(Closure closure = null)",
                            "availableSince": "1.33",
                            "html": "Allows to schedule a build on Jenkins after a job execution on RunDeck.\r\n     ",
                            "firstSentenceCommentText": "Allows to schedule a build on Jenkins after a job execution on RunDeck.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext"
                        }
                    ],
                    "plugin": "rundeck",
                    "examples": "job('example') {\r\n    triggers {\r\n        rundeck {\r\n            jobIdentifiers('2027ce89-7924-4ecf-a963-30090ada834f',\r\n                    'my-project-name:main-group/sub-group/my-job')\r\n            executionStatuses('FAILED', 'ABORTED')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                },
                                {
                                    "name": "scmTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "scm(String cronString, Closure scmTriggerClosure = null)",
                            "html": "Polls source control for changes at regular intervals.",
                            "firstSentenceCommentText": "Polls source control for changes at regular intervals.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n\r\njob('example-2') {\r\n    triggers {\r\n        scm('@midnight') {\r\n            ignorePostCommitHooks()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "snapshotDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "checkSnapshotDependencies",
                                    "type": "boolean"
                                }
                            ],
                            "text": "snapshotDependencies(boolean checkSnapshotDependencies)",
                            "html": "If set to <code>true</code>, Jenkins will parse the POMs of this project, and see if any of its snapshot\r\n dependencies are built on this Jenkins as well. If so, Jenkins will set up build dependency relationship so that\r\n whenever the dependency job is built and a new SNAPSHOT jar is created, Jenkins will schedule a build of this\r\n project. Defaults to <code>false</code>.\r\n     ",
                            "firstSentenceCommentText": "If set to true, Jenkins will parse the POMs of this project, and see if any of its snapshot\r\n dependencies are built on this Jenkins as well. "
                        }
                    ],
                    "examples": "mavenJob('example') {\r\n    triggers {\r\n        snapshotDependencies()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "upstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "threshold",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "text": "upstream(String projects, String threshold = 'SUCCESS')",
                            "availableSince": "1.33",
                            "html": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger.\r\n\r\n Possible thresholds are <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.\r\n     ",
                            "firstSentenceCommentText": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger."
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        upstream('other', 'UNSTABLE')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "urlTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "crontab",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "urlTrigger(String crontab = null, Closure contextClosure)",
                            "availableSince": "1.16",
                            "html": "Adds DSL for adding and configuring the URL trigger plugin to a job.\r\n     ",
                            "firstSentenceCommentText": "Adds DSL for adding and configuring the URL trigger plugin to a job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext"
                        }
                    ],
                    "plugin": "urltrigger",
                    "examples": "job('example') {\r\n    triggers {\r\n        urlTrigger {\r\n            cron('* 0 * 0 *')\r\n            restrictLabel('foo')\r\n\r\n            // simple configuration\r\n            url('http://www.example.com/foo/') {\r\n                proxy(true)\r\n                status(404)\r\n                timeout(4000)\r\n                check('status')\r\n                check('etag')\r\n                check('lastModified')\r\n            }\r\n\r\n            // Content inspection (MD5 hash)\r\n            url('http://www.example.com/bar/') {\r\n                inspection('change')\r\n            }\r\n\r\n            // content inspection for JSON or XML content with detailed checking using XPath/JSONPath\r\n            url('http://www.example.com/baz/') {\r\n                inspection('json' | 'xml') {\r\n                    path('//div[@class=\"foo\"]')\r\n                    path('$.store.book[0].title')\r\n                    path('$[\"store\"][\"book\"][0][\"title\"]')\r\n                }\r\n            }\r\n\r\n            // content inspection for text content with detailed checking using regular expressions\r\n            url('http://www.example.com/fubar/') {\r\n                inspection('text') {\r\n                    regexp(/_(foo|bar).+/)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.MavenReleaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.MavenReleaseContext",
            "methods": [
                {
                    "name": "dryRunGoals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "dryRunGoals",
                                    "type": "String"
                                }
                            ],
                            "text": "dryRunGoals(String dryRunGoals)",
                            "html": "Enter the goals you wish to use as part of the dry run to simulate the release build. Defaults to\r\n <TT>-Dresume=false -DdryRun=true release:prepare</TT>.",
                            "firstSentenceCommentText": "Enter the goals you wish to use as part of the dry run to simulate the release build. "
                        }
                    ]
                },
                {
                    "name": "numberOfReleaseBuildsToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "numberOfReleaseBuildsToKeep",
                                    "type": "int"
                                }
                            ],
                            "text": "numberOfReleaseBuildsToKeep(int numberOfReleaseBuildsToKeep)",
                            "html": "Specify the number of successful release builds to keep forever. A value of -1 will lock all successful\r\n release builds, 0 will not lock any builds. Defaults to 1.",
                            "firstSentenceCommentText": "Specify the number of successful release builds to keep forever. "
                        }
                    ]
                },
                {
                    "name": "releaseEnvVar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseEnvVar",
                                    "type": "String"
                                }
                            ],
                            "text": "releaseEnvVar(String releaseEnvVar)",
                            "html": "An environment variable with this name indicates whether the current build is a release build or not.\r\n This can be used e.g. within a shell or the conditional buildstep to do pre and post release processing.\r\n The value will be boolean (true if it is a release build, false if its not a release build). Defaults to\r\n <TT>'IS_M2RELEASEBUILD'</TT>.",
                            "firstSentenceCommentText": "An environment variable with this name indicates whether the current build is a release build or not.\r\n "
                        }
                    ]
                },
                {
                    "name": "releaseGoals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseGoals",
                                    "type": "String"
                                }
                            ],
                            "text": "releaseGoals(String releaseGoals)",
                            "html": "Enter the goals you wish to use as part of the release process. Defaults to\r\n <TT>'-Dresume=false release:prepare release:perform'</TT>.",
                            "firstSentenceCommentText": "Enter the goals you wish to use as part of the release process. "
                        }
                    ]
                },
                {
                    "name": "scmPasswordEnvVar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scmPasswordEnvVar",
                                    "type": "String"
                                }
                            ],
                            "text": "scmPasswordEnvVar(String scmPasswordEnvVar)",
                            "html": "If defined, an environment variable with this name will hold the scm password when triggering a\r\n release build (this is the password the user enters when triggering a release build, not the password\r\n given to Jenkins' SCM configuration of the job). Empty by default.\r\n\r\n As the passed passwords would potentially get written to the logs and therefore visible to users,\r\n it is recommended to install the\r\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Mask+Passwords+Plugin\">Mask Password Plugin</a>.",
                            "firstSentenceCommentText": "If defined, an environment variable with this name will hold the scm password when triggering a\r\n release build (this is the password the user enters when triggering a release build, not the password\r\n given to Jenkins' SCM configuration of the job). "
                        }
                    ]
                },
                {
                    "name": "scmUserEnvVar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scmUserEnvVar",
                                    "type": "String"
                                }
                            ],
                            "text": "scmUserEnvVar(String scmUserEnvVar)",
                            "html": "If defined, an environment variable with this name will hold the scm username when triggering a\r\n release build (this is the username the user enters when triggering a release build, not the username\r\n given to Jenkins' SCM configuration of the job). Empty by default.",
                            "firstSentenceCommentText": "If defined, an environment variable with this name will hold the scm username when triggering a\r\n release build (this is the username the user enters when triggering a release build, not the username\r\n given to Jenkins' SCM configuration of the job). "
                        }
                    ]
                },
                {
                    "name": "selectAppendJenkinsUsername",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectAppendJenkinsUsername",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "selectAppendJenkinsUsername(boolean selectAppendJenkinsUsername = true)",
                            "html": "Enable this to have the \"Append Jenkins Username\" option (part of the \"Specify custom SCM comment prefix\"\r\n configuration) selected by default in the \"Perform Maven Release\" view. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Enable this to have the \"Append Jenkins Username\" option (part of the \"Specify custom SCM comment prefix\"\r\n configuration) selected by default in the \"Perform Maven Release\" view. "
                        }
                    ]
                },
                {
                    "name": "selectCustomScmCommentPrefix",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectCustomScmCommentPrefix",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "selectCustomScmCommentPrefix(boolean selectCustomScmCommentPrefix = true)",
                            "html": "Enable this to have the \"Select custom SCM comment prefix\" option selected by default\r\n in the \"Perform Maven Release\" view. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Enable this to have the \"Select custom SCM comment prefix\" option selected by default\r\n in the \"Perform Maven Release\" view. "
                        }
                    ]
                },
                {
                    "name": "selectScmCredentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectScmCredentials",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "selectScmCredentials(boolean selectScmCredentials = true)",
                            "html": "Enable this to have the \"specify SCM login/password\" option selected by default in the\r\n \"Perform Maven Release\" view. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Enable this to have the \"specify SCM login/password\" option selected by default in the\r\n \"Perform Maven Release\" view. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.MavenWrapperContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.MavenWrapperContext",
            "methods": [
                {
                    "name": "allocatePorts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "portsArg",
                                    "type": "String[]"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "allocatePorts(String[] portsArg, Closure closure = null)",
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "cl",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "allocatePorts(Closure cl = null)",
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        }
                    ],
                    "plugin": "port-allocator",
                    "examples": "// allocates two ports: one randomly assigned and accessible by env var $HTTP\r\n// the second is fixed and the port allocator controls concurrent usage\r\njob('example-1') {\r\n    wrappers {\r\n        allocatePorts('HTTP', '8080')\r\n    }\r\n}\r\n\r\n// allocates a GlassFish and a Tomcat port\r\njob('example-2') {\r\n    wrappers {\r\n        allocatePorts {\r\n            glassfish('1234', 'user', 'password')\r\n            tomcat('1234', 'password')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "buildName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nameTemplate",
                                    "type": "String"
                                }
                            ],
                            "text": "buildName(String nameTemplate)",
                            "availableSince": "1.24",
                            "html": "Sets the display name of a build.\r\n     ",
                            "firstSentenceCommentText": "Sets the display name of a build."
                        }
                    ],
                    "plugin": "build-name-setter",
                    "examples": "// define the build name based on the build number and an environment variable\r\njob('example') {\r\n    wrappers {\r\n        buildName('#${BUILD_NUMBER} on ${ENV,var=\"BRANCH\"}')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "buildUserVars",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "buildUserVars()",
                            "availableSince": "1.26",
                            "html": "Adds a number of environment variables with information about the current user.\r\n     ",
                            "firstSentenceCommentText": "Adds a number of environment variables with information about the current user."
                        }
                    ],
                    "plugin": "build-user-vars-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        buildUserVars()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "colorizeOutput",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "colorMap",
                                    "type": "String",
                                    "defaultValue": "'xterm'"
                                }
                            ],
                            "text": "colorizeOutput(String colorMap = 'xterm')",
                            "html": "Renders ANSI escape sequences, including color, to console output.\r\n     ",
                            "firstSentenceCommentText": "Renders ANSI escape sequences, including color, to console output."
                        }
                    ],
                    "plugin": "ansicolor",
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "configFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configFilesClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configFiles(Closure configFilesClosure)",
                            "availableSince": "1.28",
                            "html": "Make globally configured files available to the build.\r\n     ",
                            "firstSentenceCommentText": "Make globally configured files available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext"
                        }
                    ],
                    "plugin": "config-file-provider",
                    "examples": "job('example') {\r\n    wrappers {\r\n        configFiles {\r\n            file('myCustomConfigFile') {\r\n                variable('CONFIG_FILE')\r\n            }\r\n            mavenSettings('myJenkinsSettingsFile') {\r\n                targetLocation('settings.xml')\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "credentialsBinding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "credentialsBinding(Closure closure)",
                            "availableSince": "1.28",
                            "html": "Binds environment variables to credentials.\r\n     ",
                            "firstSentenceCommentText": "Binds environment variables to credentials.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext"
                        }
                    ],
                    "plugin": "credentials-binding",
                    "examples": "job('example') {\r\n    wrappers {\r\n        credentialsBinding {\r\n            file('KEYSTORE', 'keystore.jks')\r\n            usernamePassword('PASSWORD', 'keystore password')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customTools",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "customTools(Iterable<String> tools, Closure closure = null)",
                            "availableSince": "1.30",
                            "html": "Installs custom tools.\r\n     ",
                            "firstSentenceCommentText": "Installs custom tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext"
                        }
                    ],
                    "plugin": "custom-tools-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        customTools(['NodeJS', 'figlet']) {\r\n            skipMasterInstallation()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "deliveryPipelineVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "template",
                                    "type": "String"
                                },
                                {
                                    "name": "setDisplayName",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "deliveryPipelineVersion(String template, boolean setDisplayName = false)",
                            "availableSince": "1.26",
                            "html": "Creates a pipeline version based on the template and optionally sets that version as display name for the build.\r\n     ",
                            "firstSentenceCommentText": "Creates a pipeline version based on the template and optionally sets that version as display name for the build."
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        deliveryPipelineVersion('1.0.${BUILD_NUMBER}', true)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "availableSince": "1.21",
                            "html": "Injects environment variables into the build.\r\n     ",
                            "firstSentenceCommentText": "Injects environment variables into the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example') {\r\n    wrappers {\r\n        environmentVariables {\r\n            env('ONE', '1')\r\n            envs(FOO: 'bar', TEST: '123')\r\n            propertiesFile('env.properties')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "exclusionResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "String..."
                                }
                            ],
                            "text": "exclusionResources(String... resourceNames)",
                            "availableSince": "1.24",
                            "html": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\r\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "exclusionResources(Iterable<String> resourceNames)",
                            "availableSince": "1.24",
                            "html": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\r\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\r\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        }
                    ],
                    "plugin": "Exclusion",
                    "examples": "job('example') {\r\n    wrappers {\r\n        exclusionResources('first', 'second')\r\n    }\r\n    steps {\r\n        criticalBlock {\r\n            shell('echo Hello World!')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "golang",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "text": "golang(String version)",
                            "availableSince": "1.27",
                            "html": "Sets up a Go environment.\r\n     ",
                            "firstSentenceCommentText": "Sets up a Go environment."
                        }
                    ],
                    "plugin": "golang",
                    "examples": "job('example') {\r\n    wrappers {\r\n        golang('Go 1.3.3')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "injectPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "injectPasswords()",
                            "availableSince": "1.23",
                            "html": "Injects globally defined passwords as environment variables into the job.\r\n     ",
                            "firstSentenceCommentText": "Injects globally defined passwords as environment variables into the job."
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example') {\r\n    wrappers {\r\n        injectPasswords()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "keychains",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keychainsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "keychains(Closure keychainsClosure)",
                            "availableSince": "1.24",
                            "html": "Configures keychains for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures keychains for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext"
                        }
                    ],
                    "plugin": "kpp-management-plugin",
                    "examples": "job('example') {\r\n    wrappers {\r\n        keychains {\r\n            keychain('test1', 'test2')\r\n            delete()\r\n            overwrite()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logSizeChecker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "logSizeChecker(Closure closure = null)",
                            "availableSince": "1.23",
                            "html": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.\r\n     ",
                            "firstSentenceCommentText": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext"
                        }
                    ],
                    "plugin": "logfilesizechecker",
                    "examples": "// default configuration using the system wide definition\r\njob('example-1') {\r\n    wrappers {\r\n        logSizeChecker()\r\n    }\r\n}\r\n\r\n// using job specific configuration, setting the max log size to 10 MB and fail the build of the log file is larger.\r\njob('example-2') {\r\n    wrappers {\r\n        logSizeChecker {\r\n            maxSize(10)\r\n            failBuild()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "maskPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "maskPasswords()",
                            "availableSince": "1.26",
                            "html": "Masks the passwords that occur in the console output.\r\n     ",
                            "firstSentenceCommentText": "Masks the passwords that occur in the console output."
                        }
                    ],
                    "plugin": "mask-passwords",
                    "examples": "job('example') {\r\n    wrappers {\r\n        maskPasswords()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "mavenRelease",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "mavenRelease(Closure releaseClosure = null)",
                            "availableSince": "1.25",
                            "html": "Allows to perform a release build using the\r\n <a href=\"http://maven.apache.org/maven-release/maven-release-plugin/\">maven-release-plugin</a>.\r\n     ",
                            "firstSentenceCommentText": "Allows to perform a release build using the\r\n maven-release-plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.MavenReleaseContext"
                        }
                    ],
                    "examples": "mavenJob('example') {\r\n    wrappers {\r\n        mavenRelease {\r\n            scmUserEnvVar('MY_USER_ENV')\r\n            scmPasswordEnvVar('MY_PASSWORD_ENV')\r\n            releaseEnvVar('RELEASE_ENV')\r\n            releaseGoals('release:prepare release:perform')\r\n            dryRunGoals('-DdryRun=true release:prepare')\r\n            selectCustomScmCommentPrefix()\r\n            selectAppendJenkinsUsername()\r\n            selectScmCredentials()\r\n            numberOfReleaseBuildsToKeep(10)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "nodejs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "text": "nodejs(String installation)",
                            "availableSince": "1.27",
                            "html": "Sets up a NodeJS environment.\r\n     ",
                            "firstSentenceCommentText": "Sets up a NodeJS environment."
                        }
                    ],
                    "plugin": "nodejs",
                    "examples": "job('example') {\r\n    wrappers {\r\n        nodejs('NodeJS 0.10.26')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "preBuildCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "preBuildCleanup(Closure closure = null)",
                            "availableSince": "1.22",
                            "html": "Deletes files from the workspace before the build starts.\r\n     ",
                            "firstSentenceCommentText": "Deletes files from the workspace before the build starts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext"
                        }
                    ],
                    "plugin": "ws-cleanup",
                    "examples": "// cleanup all files\r\njob('example-1') {\r\n    wrappers {\r\n        preBuildCleanup()\r\n    }\r\n}\r\n\r\n// cleanup all files and directories in target directories, but only if the CLEANUP build parameter is set to 'true'\r\njob('example-2') {\r\n    wrappers {\r\n        preBuildCleanup {\r\n            includePattern('**/target/**')\r\n            deleteDirectories()\r\n            cleanupParameter('CLEANUP')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "preScmSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "preScmSteps(Closure closure)",
                            "availableSince": "1.31",
                            "html": "Allows to run build steps before SCM checkout.\r\n     ",
                            "firstSentenceCommentText": "Allows to run build steps before SCM checkout.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext"
                        }
                    ],
                    "plugin": "preSCMbuildstep",
                    "examples": "job('example') {\r\n    wrappers {\r\n        preScmSteps {\r\n            steps {\r\n                shell('echo Hello World')\r\n            }\r\n            failOnError()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "rbenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubyVersion",
                                    "type": "String"
                                },
                                {
                                    "name": "rbenvClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rbenv(String rubyVersion, Closure rbenvClosure = null)",
                            "availableSince": "1.27",
                            "html": "Specifies the rbenv wrapper to be used during job execution.\r\n     ",
                            "firstSentenceCommentText": "Specifies the rbenv wrapper to be used during job execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext"
                        }
                    ],
                    "plugin": "rbenv",
                    "examples": "job('example') {\r\n    wrappers {\r\n        rbenv('2.1.2') {\r\n            ignoreLocalVersion()\r\n            gems('bundler', 'rake')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "release",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "release(Closure releaseClosure)",
                            "availableSince": "1.22",
                            "html": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.\r\n     ",
                            "firstSentenceCommentText": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext"
                        }
                    ],
                    "plugin": "release",
                    "examples": "job('example') {\r\n    wrappers {\r\n        release {\r\n            doNotKeepLog()\r\n            overrideBuildParameters()\r\n            parameters {\r\n                booleanParam('param', false, 'some boolean build parameter')\r\n            }\r\n            preBuildSteps {\r\n                shell(\"echo 'hello'\")\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "runOnSameNodeAs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "useSameWorkspace",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "runOnSameNodeAs(String jobName, boolean useSameWorkspace = false)",
                            "html": "Build the job on the same node as another job and optionally use the same workspace as the other job.\r\n     ",
                            "firstSentenceCommentText": "Build the job on the same node as another job and optionally use the same workspace as the other job."
                        }
                    ],
                    "plugin": "job-node-stalker",
                    "examples": "job('example') {\r\n    wrappers {\r\n        runOnSameNodeAs('project-a', true)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "rvm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubySpecification",
                                    "type": "String"
                                }
                            ],
                            "text": "rvm(String rubySpecification)",
                            "html": "Configures the job to prepare a Ruby environment controlled by RVM for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to prepare a Ruby environment controlled by RVM for the build."
                        }
                    ],
                    "plugin": "rvm",
                    "examples": "job('example') {\r\n    wrappers {\r\n        rvm('ruby-1.9.3')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "sshAgent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "text": "sshAgent(String credentials)",
                            "html": "Provide SSH credentials to builds via a ssh-agent in Jenkins.\r\n     ",
                            "firstSentenceCommentText": "Provide SSH credentials to builds via a ssh-agent in Jenkins."
                        }
                    ],
                    "plugin": "ssh-agent",
                    "examples": "job('example') {\r\n    wrappers {\r\n        sshAgent('deployment-key')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeoutClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "timeout(Closure timeoutClosure = null)",
                            "availableSince": "1.24",
                            "html": "Add a timeout to the build job.\r\n\r\n Defaults to a absolute timeout with a maximum build time of 3 minutes.\r\n     ",
                            "firstSentenceCommentText": "Add a timeout to the build job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext"
                        }
                    ],
                    "plugin": "build-timeout",
                    "examples": "// defines an absolute timeout with a maximum build time of 3 minutes\r\njob('example-1') {\r\n    wrappers {\r\n        timeout()\r\n    }\r\n}\r\n\r\n// defines an absolute timeout with a maximum build time of one hour\r\njob('example-2') {\r\n    wrappers {\r\n        timeout {\r\n            absolute(60)\r\n        }\r\n    }\r\n}\r\n\r\n// the build will timeout when it take 3 times longer than the reference build duration of the last 3 builds\r\n// use a 30 minutes timeout when no successful builds available as reference\r\njob('example-3') {\r\n    wrappers {\r\n        timeout {\r\n            elastic(300, 3, 30)\r\n        }\r\n    }\r\n}\r\n\r\n// abort when the build is likely to be stuck\r\njob('example-4') {\r\n    wrappers {\r\n        timeout {\r\n            likelyStuck()\r\n        }\r\n    }\r\n}\r\n\r\n// timeout if there has been no activity for 180 seconds\r\n// then fail the build and set a build description\r\njob('example-5') {\r\n    wrappers {\r\n        timeout {\r\n            noActivity(180)\r\n            failBuild()\r\n            writeDescription('Build failed due to timeout after {0} minutes')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "timestamps",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "timestamps()",
                            "html": "Adds timestamps to the console log.",
                            "firstSentenceCommentText": "Adds timestamps to the console log."
                        }
                    ],
                    "plugin": "timestamper",
                    "examples": "job('example') {\r\n    wrappers {\r\n        timestamps()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "toolenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "String..."
                                }
                            ],
                            "text": "toolenv(String... tools)",
                            "availableSince": "1.21",
                            "html": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment.\r\n     ",
                            "firstSentenceCommentText": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment."
                        }
                    ],
                    "plugin": "toolenv",
                    "examples": "job('example') {\r\n    wrappers {\r\n        toolenv('Ant 1.8.2', 'Maven 3.1')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "xvfb",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "xvfb(String installation, Closure closure = null)",
                            "availableSince": "1.31",
                            "html": "Controls the Xvfb virtual frame buffer X11 server.\r\n     ",
                            "firstSentenceCommentText": "Controls the Xvfb virtual frame buffer X11 server.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext"
                        }
                    ],
                    "plugin": "xvfb",
                    "examples": "job('example') {\r\n    wrappers {\r\n        xvfb('default') {\r\n            screen('1920x1080x24')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "xvnc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xvncClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "xvnc(Closure xvncClosure = null)",
                            "availableSince": "1.26",
                            "html": "Run a Xvnc session during a build.\r\n     ",
                            "firstSentenceCommentText": "Run a Xvnc session during a build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext"
                        }
                    ],
                    "plugin": "xvnc",
                    "examples": "job('example') {\r\n    wrappers {\r\n        xvnc {\r\n            takeScreenshot()\r\n            useXauthority(false)\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.MavenJob": {
            "type": "javaposse.jobdsl.dsl.jobs.MavenJob",
            "methods": [
                {
                    "name": "archivingDisabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "archivingDisabled",
                                    "type": "boolean"
                                }
                            ],
                            "text": "archivingDisabled(boolean archivingDisabled)",
                            "html": "If set, Jenkins  will not automatically archive all artifacts generated by this project, defaults to\r\n <code>false</code>.\r\n     ",
                            "firstSentenceCommentText": "If set, Jenkins  will not automatically archive all artifacts generated by this project, defaults to\r\n false."
                        }
                    ],
                    "examples": "mavenJob('example') {\r\n    archivingDisabled()\r\n}\r\n"
                },
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disableDownstreamTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableDownstreamTrigger",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disableDownstreamTrigger(boolean disableDownstreamTrigger = true)",
                            "availableSince": "1.35",
                            "html": "If set, Jenkins will not automatically trigger downstream builds, defaults to <code>false</code>.\r\n     ",
                            "firstSentenceCommentText": "If set, Jenkins will not automatically trigger downstream builds, defaults to false."
                        }
                    ],
                    "examples": "mavenJob('example') {\r\n    disableDownstreamTrigger()\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "goals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "goals",
                                    "type": "String"
                                }
                            ],
                            "text": "goals(String goals)",
                            "html": "Specifies the goals to execute including other command line options.\r\n When specified multiple times, the goals and options will be concatenated.\r\n     ",
                            "firstSentenceCommentText": "Specifies the goals to execute including other command line options.\r\n "
                        }
                    ],
                    "examples": "mavenJob('example-1') {\r\n    goals('clean install -DskipTests')\r\n}\r\n\r\nmavenJob('example-2') {\r\n    goals('clean')\r\n    goals('install')\r\n    goals('-DskipTests')\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "localRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.common.MavenContext.LocalRepositoryLocation"
                                }
                            ],
                            "text": "localRepository(javaposse.jobdsl.dsl.helpers.common.MavenContext.LocalRepositoryLocation location)",
                            "deprecated": true,
                            "availableSince": "1.17",
                            "html": "Set to use isolated local Maven repositories.\r\n\r\n Possible values are <TT>LocalToWorkspace</TT> and <TT>LocalToExecutor</TT>.\r\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.LocalRepositoryLocation"
                                }
                            ],
                            "text": "localRepository(javaposse.jobdsl.dsl.helpers.LocalRepositoryLocation location)",
                            "availableSince": "1.31",
                            "html": "Set to use isolated local Maven repositories.\r\n\r\n Possible values for are <TT>LocalRepositoryLocation.LOCAL_TO_WORKSPACE</TT> and\r\n <TT>LocalRepositoryLocation.LOCAL_TO_EXECUTOR</TT>.\r\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories."
                        }
                    ],
                    "examples": "mavenJob('example') {\r\n    localRepository(LocalRepositoryLocation.LOCAL_TO_WORKSPACE)\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "mavenInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenInstallation(String name)",
                            "availableSince": "1.20",
                            "html": "Selects which installation of Maven to use.\r\n     ",
                            "firstSentenceCommentText": "Selects which installation of Maven to use."
                        }
                    ],
                    "examples": "mavenJob('example-1') {\r\n    mavenInstallation('Maven 3.2.5')\r\n}\r\n"
                },
                {
                    "name": "mavenOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mavenOpts",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenOpts(String mavenOpts)",
                            "html": "Specifies the JVM options needed when launching Maven as an external process.\r\n\r\n When specified multiple times, the options will be concatenated.\r\n     ",
                            "firstSentenceCommentText": "Specifies the JVM options needed when launching Maven as an external process."
                        }
                    ],
                    "examples": "mavenJob('example-1') {\r\n    mavenOpts('-Xmx1536m -XX:MaxPermSize=384m -XX:ReservedCodeCacheSize=64m')\r\n}\r\n\r\nmavenJob('example-2') {\r\n    mavenOpts('-Xmx1536m')\r\n    mavenOpts('-XX:MaxPermSize=384m')\r\n    mavenOpts('-XX:ReservedCodeCacheSize=64m')\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "postBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildSteps(Closure postBuildClosure)",
                            "availableSince": "1.20",
                            "html": "Adds build steps to run after the Maven execution.\r\n     ",
                            "firstSentenceCommentText": "Adds build steps to run after the Maven execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "thresholdName",
                                    "type": "String"
                                },
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "postBuildSteps(String thresholdName, Closure postBuildClosure)",
                            "availableSince": "1.35",
                            "html": "Adds build steps to run after the Maven execution. The steps will only run of the build result is equal or\r\n better than the threshold.\r\n\r\n The threshold can be one of three values: <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.\r\n     ",
                            "firstSentenceCommentText": "Adds build steps to run after the Maven execution. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "mavenJob('example-1') {\r\n    postBuildSteps {\r\n        shell(\"echo 'run after Maven'\")\r\n    }\r\n}\r\n\r\n// run post build steps only when the build succeeds\r\nmavenJob('example-2') {\r\n    postBuildSteps('SUCCESS') {\r\n        shell(\"echo 'run after Maven'\")\r\n    }\r\n}\r\n"
                },
                {
                    "name": "preBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "preBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "preBuildSteps(Closure preBuildClosure)",
                            "availableSince": "1.20",
                            "html": "Adds build steps to run before the Maven execution.\r\n     ",
                            "firstSentenceCommentText": "Adds build steps to run before the Maven execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "mavenJob('example') {\r\n    preBuildSteps {\r\n        shell(\"echo 'run before Maven'\")\r\n    }\r\n}\r\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "providedSettings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "settingsName",
                                    "type": "String"
                                }
                            ],
                            "text": "providedSettings(String settingsName)",
                            "availableSince": "1.25",
                            "html": "Use managed Maven settings.\r\n     ",
                            "firstSentenceCommentText": "Use managed Maven settings."
                        }
                    ],
                    "plugin": "config-file-provider",
                    "examples": "mavenJob('example') {\r\n    providedSettings('central-mirror')\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.MavenPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "rootPOM",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rootPOM",
                                    "type": "String"
                                }
                            ],
                            "text": "rootPOM(String rootPOM)",
                            "html": "Specifies the path to the root POM.\r\n     ",
                            "firstSentenceCommentText": "Specifies the path to the root POM."
                        }
                    ],
                    "examples": "mavenJob('example-1') {\r\n    rootPOM('sub-project/pom.xml')\r\n}\r\n"
                },
                {
                    "name": "runHeadless",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "runHeadless",
                                    "type": "boolean"
                                }
                            ],
                            "text": "runHeadless(boolean runHeadless)",
                            "html": "Set to allow Jenkins to configure the build process in headless mode, defaults to <code>false</code>.\r\n     ",
                            "firstSentenceCommentText": "Set to allow Jenkins to configure the build process in headless mode, defaults to false."
                        }
                    ],
                    "examples": "mavenJob('example') {\r\n    runHeadless()\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.MavenTriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.MavenWrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext",
            "methods": [
                {
                    "name": "abortAllJobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "abortAllJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "abortAllJobs(boolean abortAllJob = true)",
                            "availableSince": "1.37"
                        }
                    ],
                    "plugin": "jenkins-multijob-plugin"
                },
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "boolParam(String paramName, boolean defaultValue = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure configureClosure)",
                            "availableSince": "1.30"
                        }
                    ]
                },
                {
                    "name": "currentJobParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "currentJobParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "currentJobParameters(boolean currentJobParameters = true)"
                        }
                    ]
                },
                {
                    "name": "disableJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disableJob(boolean disableJob = true)",
                            "availableSince": "1.25"
                        }
                    ],
                    "plugin": "jenkins-multijob-plugin"
                },
                {
                    "name": "exposedScm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "exposedScm",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "exposedScm(boolean exposedScm = true)"
                        }
                    ]
                },
                {
                    "name": "fileParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertyFile",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "fileParam(String propertyFile, boolean failTriggerOnMissing = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "gitRevision(boolean combineQueuedCommits = false)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "jobName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                }
                            ],
                            "text": "jobName(String jobName)"
                        }
                    ]
                },
                {
                    "name": "killPhaseCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "killPhaseCondition",
                                    "type": "String"
                                }
                            ],
                            "text": "killPhaseCondition(String killPhaseCondition)",
                            "availableSince": "1.25"
                        }
                    ],
                    "plugin": "jenkins-multijob-plugin"
                },
                {
                    "name": "matrixParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "String"
                                }
                            ],
                            "text": "matrixParam(String filter)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "text": "nodeLabel(String paramName, String nodeLabel)",
                            "deprecated": true,
                            "availableSince": "1.26"
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "text": "prop(Object key, Object value)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "text": "props(Map<String, String> map)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodeParam",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "sameNode(boolean nodeParam = true)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "subversionRevision(boolean includeUpstreamParameters = false)",
                            "deprecated": true
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.PhaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.PhaseContext",
            "methods": [
                {
                    "name": "continuationCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "continuationCondition",
                                    "type": "String"
                                }
                            ],
                            "text": "continuationCondition(String continuationCondition)"
                        }
                    ]
                },
                {
                    "name": "job",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "phaseJobClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "job(String jobName, Closure phaseJobClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "currentJobParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "phaseJobClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "job(String jobName, boolean currentJobParameters, Closure phaseJobClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "currentJobParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "exposedScm",
                                    "type": "boolean"
                                },
                                {
                                    "name": "phaseJobClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "job(String jobName, boolean currentJobParameters, boolean exposedScm, Closure phaseJobClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext"
                        }
                    ]
                },
                {
                    "name": "phaseName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "phaseName",
                                    "type": "String"
                                }
                            ],
                            "text": "phaseName(String phaseName)"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.MultiJobStepContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.MultiJobStepContext",
            "methods": [
                {
                    "name": "ant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(String targets, Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(String targets, String buildFile, Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antInstallation",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "ant(String targets, String buildFile, String antInstallation, Closure antClosure = null)",
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        }
                    ],
                    "plugin": "ant",
                    "examples": "job('example') {\r\n    steps {\r\n        ant {\r\n            target('test')\r\n            targets(['publish', 'deploy'])\r\n            prop('logging', 'info')\r\n            props('test.threads': 10, 'input.status':'release')\r\n            buildFile('dir1/build.xml')\r\n            javaOpt('-Xmx1g')\r\n            javaOpts(['-Dprop2=value2', '-Dprop3=value3'])\r\n            antInstallation('Ant 1.8')\r\n        }\r\n    }\r\n}"
                },
                {
                    "name": "batchFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "batchFile(String command)",
                            "html": "Runs a Windows batch script.\r\n\r\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\r\n the script from a file.",
                            "firstSentenceCommentText": "Runs a Windows batch script."
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        batchFile('echo Hello World!')\r\n        batchFile(readFileFromWorkspace('build.bat'))\r\n    }\r\n}\r\n"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regexp",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "buildDescription(String regexp, String description = null)",
                            "availableSince": "1.31",
                            "html": "Set a build description based upon a regular expression test of the log file.\r\n     ",
                            "firstSentenceCommentText": "Set a build description based upon a regular expression test of the log file."
                        }
                    ],
                    "plugin": "description-setter",
                    "examples": "job('example') {\r\n    steps {\r\n        buildDescription(/.*\\[INFO\\] Uploading project information for [^\\s]* ([^\\s]*)/)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "clangScanBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "clangScanBuild(Closure closure)",
                            "availableSince": "1.37",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext"
                        }
                    ],
                    "plugin": "clang-scanbuild-plugin"
                },
                {
                    "name": "conditionalSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionalStepsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "conditionalSteps(Closure conditionalStepsClosure)",
                            "availableSince": "1.20",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext"
                        }
                    ],
                    "plugin": "conditional-buildstep"
                },
                {
                    "name": "copyArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, String targetPath, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, String targetPath = '', boolean flattenFiles, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "optionalAllowed",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, String includeGlob, String targetPath = '', boolean flattenFiles, boolean optionalAllowed, Closure copyArtifactClosure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "copyArtifacts(String jobName, Closure copyArtifactClosure = null)",
                            "availableSince": "1.33",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext"
                        }
                    ],
                    "plugin": "copyartifact"
                },
                {
                    "name": "criticalBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "criticalBlock(Closure closure)",
                            "availableSince": "1.24",
                            "html": "Contains the build steps of the critical zone defined by the\r\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.\r\n     ",
                            "firstSentenceCommentText": "Contains the build steps of the critical zone defined by the\r\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "plugin": "Exclusion",
                    "examples": "job('example') {\r\n    wrappers {\r\n        exclusionResources('first', 'second')\r\n    }\r\n    steps {\r\n        criticalBlock {\r\n            shell('echo Hello World!')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "debianPackage(String path, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DebianContext"
                        }
                    ],
                    "plugin": "debian-package-builder"
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "downstreamParameterized(Closure downstreamClosure)",
                            "availableSince": "1.20",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamContext"
                        }
                    ],
                    "plugin": "parameterized-trigger"
                },
                {
                    "name": "dsl",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "dsl(Closure configure)",
                            "availableSince": "1.16",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DslContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "scriptText",
                                    "type": "String"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "dsl(String scriptText, String removedJobAction = null, boolean ignoreExisting = false)",
                            "availableSince": "1.16"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "externalScripts",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "dsl(Iterable<String> externalScripts, String removedJobAction = null, boolean ignoreExisting = false)",
                            "availableSince": "1.16"
                        }
                    ]
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "availableSince": "1.21",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example') {\r\n    steps {\r\n        environmentVariables {\r\n            env('ONE', '1')\r\n            envs(FOO: 'bar', TEST: '123')\r\n            propertiesFile('env.properties')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "gradle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gradleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "gradle(Closure gradleClosure)",
                            "availableSince": "1.27",
                            "html": "Invokes a Gradle build script.\r\n     ",
                            "firstSentenceCommentText": "Invokes a Gradle build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GradleContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "switches",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapper",
                                    "type": "Boolean",
                                    "defaultValue": "true"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "gradle(String tasks = null, String switches = null, Boolean useWrapper = true, Closure configure = null)",
                            "html": "Invokes a Gradle build script.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\r\n <TT>hudson.plugins.gradle.Gradle</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Gradle build script."
                        }
                    ],
                    "plugin": "gradle",
                    "examples": "job('example') {\r\n    steps {\r\n        gradle('check')\r\n        gradle {\r\n            tasks('clean')\r\n            tasks('check')\r\n            switches('--info')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "grails",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "grails(Closure grailsClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targetsArg",
                                    "type": "String"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "grails(String targetsArg, Closure grailsClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targetsArg",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapperArg",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "grails(String targetsArg = null, boolean useWrapperArg = false, Closure grailsClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        }
                    ],
                    "plugin": "grails"
                },
                {
                    "name": "groovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyCommand(String command, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyCommand(String command, String groovyName, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ]
                },
                {
                    "name": "groovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyScriptFile(String fileName, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "groovyScriptFile(String fileName, String groovyName, Closure groovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ]
                },
                {
                    "name": "httpRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "requestUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "httpRequest(String requestUrl, Closure closure = null)",
                            "availableSince": "1.28",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext"
                        }
                    ],
                    "plugin": "http_request"
                },
                {
                    "name": "maven",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "maven(Closure closure)",
                            "availableSince": "1.20",
                            "html": "Invokes a Maven build.\r\n     ",
                            "firstSentenceCommentText": "Invokes a Maven build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.MavenContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pom",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "maven(String targets = null, String pom = null, Closure configure = null)",
                            "html": "Invokes a Maven build.\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\r\n <TT>hudson.tasks.Maven</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Maven build."
                        }
                    ],
                    "plugin": "maven-plugin",
                    "examples": "job('example') {\r\n    steps {\r\n        maven('verify')\r\n        maven('clean verify', 'module-a/pom.xml')\r\n        maven {\r\n            goals('clean')\r\n            goals('verify')\r\n            mavenOpts('-Xms256m')\r\n            mavenOpts('-Xmx512m')\r\n            localRepository(LocalRepositoryLocation.LOCAL_TO_WORKSPACE)\r\n            properties(skipTests: true)\r\n            mavenInstallation('Maven 3.1.1')\r\n            providedSettings('central-mirror')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "nodejsCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commandScript",
                                    "type": "String"
                                },
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "text": "nodejsCommand(String commandScript, String installation)",
                            "availableSince": "1.31",
                            "html": "Executes a NodeJS script. Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read scripts from a file.\r\n     ",
                            "firstSentenceCommentText": "Executes a NodeJS script. "
                        }
                    ],
                    "plugin": "nodejs",
                    "examples": "job('example') {\r\n    steps {\r\n        nodejsCommand('console.log(\"Hello World!\")', 'Node 0.12.0')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "phase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "phaseContext",
                                    "type": "Closure"
                                }
                            ],
                            "text": "phase(Closure phaseContext)",
                            "html": "phaseName will have to be provided in the closure.",
                            "firstSentenceCommentText": "phaseName will have to be provided in the closure.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "phaseName",
                                    "type": "String"
                                },
                                {
                                    "name": "phaseContext",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "phase(String phaseName, Closure phaseContext = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "continuationConditionArg",
                                    "type": "String"
                                },
                                {
                                    "name": "phaseClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "phase(String name, String continuationConditionArg, Closure phaseClosure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseContext"
                        }
                    ]
                },
                {
                    "name": "powerShell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "powerShell(String command)",
                            "availableSince": "1.32",
                            "html": "Runs a Windows PowerShell script.\r\n\r\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\r\n the script from a file.\r\n     ",
                            "firstSentenceCommentText": "Runs a Windows PowerShell script."
                        }
                    ],
                    "plugin": "powershell",
                    "examples": "job('example') {\r\n    steps {\r\n        powerShell('Write-Output \"Hello World!\"')\r\n        powerShell(readFileFromWorkspace('build.ps1'))\r\n    }\r\n}\r\n"
                },
                {
                    "name": "prerequisite",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectList",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "warningOnlyBool",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "text": "prerequisite(String projectList = '', boolean warningOnlyBool = false)",
                            "availableSince": "1.19"
                        }
                    ],
                    "plugin": "prereq-buildstep"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishOverSsh(Closure publishOverSshClosure)",
                            "availableSince": "1.28",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "plugin": "publish-over-ssh"
                },
                {
                    "name": "python",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "python(Closure closure)",
                            "availableSince": "1.38",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PythonContext"
                        }
                    ],
                    "plugin": "shiningpanda"
                },
                {
                    "name": "rake",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rake(Closure rakeClosure = null)",
                            "availableSince": "1.25",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasksArg",
                                    "type": "String"
                                },
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "rake(String tasksArg, Closure rakeClosure = null)",
                            "availableSince": "1.25",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        }
                    ],
                    "plugin": "rake"
                },
                {
                    "name": "remoteTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteJenkins",
                                    "type": "String"
                                },
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "remoteTrigger(String remoteJenkins, String jobName, Closure closure = null)",
                            "availableSince": "1.22",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext"
                        }
                    ],
                    "plugin": "Parameterized-Remote-Trigger"
                },
                {
                    "name": "resolveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repositoryConnectorClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "resolveArtifacts(Closure repositoryConnectorClosure)",
                            "availableSince": "1.29",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext"
                        }
                    ],
                    "plugin": "repository-connector"
                },
                {
                    "name": "sbt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sbtName",
                                    "type": "String"
                                },
                                {
                                    "name": "actions",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sbtFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "jvmFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "subdirPath",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "sbt(String sbtName, String actions = null, String sbtFlags = null, String jvmFlags = null, String subdirPath = null, Closure configure = null)",
                            "availableSince": "1.16",
                            "html": "Invokes the Scala Build Tool (SBT).\r\n\r\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\r\n <TT>org.jvnet.hudson.plugins.SbtPluginBuilder</TT> node is passed into the configure block.\r\n     ",
                            "firstSentenceCommentText": "Invokes the Scala Build Tool (SBT)."
                        }
                    ],
                    "plugin": "sbt",
                    "examples": "job('example') {\r\n    steps {\r\n        sbt('SBT 0.12.3', 'test', '-Dsbt.log.noformat=true', '-Xmx2G -Xms512M', 'subproject')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "setBuildResult",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "result",
                                    "type": "String"
                                }
                            ],
                            "text": "setBuildResult(String result)",
                            "availableSince": "1.35",
                            "html": "Set the build status.\r\n\r\n Must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT>, <TT>'ABORTED'</TT> or <TT>'CYCLE'</TT>.\r\n     ",
                            "firstSentenceCommentText": "Set the build status."
                        }
                    ],
                    "plugin": "fail-the-build-plugin",
                    "examples": "job('example') {\r\n    steps {\r\n        setBuildResult('UNSTABLE')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "shell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "text": "shell(String command)",
                            "html": "Runs a shell script.\r\n\r\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\r\n the script from a file.",
                            "firstSentenceCommentText": "Runs a shell script."
                        }
                    ],
                    "examples": "job('example') {\r\n  steps {\r\n      shell('echo Hello World!')\r\n      shell(readFileFromWorkspace('build.sh'))\r\n  }\r\n}\r\n"
                },
                {
                    "name": "systemGroovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "systemGroovyCommand(String command, Closure systemGroovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ]
                },
                {
                    "name": "systemGroovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "systemGroovyScriptFile(String fileName, Closure systemGroovyClosure = null)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ]
                },
                {
                    "name": "vSpherePowerOff",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "text": "vSpherePowerOff(String server, String vm)",
                            "availableSince": "1.25"
                        }
                    ]
                },
                {
                    "name": "vSpherePowerOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "text": "vSpherePowerOn(String server, String vm)",
                            "availableSince": "1.25"
                        }
                    ]
                },
                {
                    "name": "vSphereRevertToSnapshot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                },
                                {
                                    "name": "snapshot",
                                    "type": "String"
                                }
                            ],
                            "text": "vSphereRevertToSnapshot(String server, String vm, String snapshot)",
                            "availableSince": "1.25"
                        }
                    ]
                },
                {
                    "name": "virtualenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "virtualenv(Closure closure)",
                            "availableSince": "1.38",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext"
                        }
                    ],
                    "plugin": "shiningpanda"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.MultiJob": {
            "type": "javaposse.jobdsl.dsl.jobs.MultiJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure closure)",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.MultiJobStepContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        shell('echo START')\r\n        gradle('check')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\r\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.NestedViewColumnsContext": {
            "type": "javaposse.jobdsl.dsl.views.NestedViewColumnsContext",
            "methods": [
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "status()",
                            "html": "Adds a column showing the status of the last build.",
                            "firstSentenceCommentText": "Adds a column showing the status of the last build."
                        }
                    ]
                },
                {
                    "name": "weather",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "weather()",
                            "html": "Adds a weather report showing the aggregated status of recent builds.",
                            "firstSentenceCommentText": "Adds a weather report showing the aggregated status of recent builds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.ListViewSectionContext": {
            "type": "javaposse.jobdsl.dsl.views.ListViewSectionContext",
            "methods": [
                {
                    "name": "alignment",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alignment",
                                    "type": "String"
                                }
                            ],
                            "text": "alignment(String alignment)",
                            "html": "Sets the alignment of the section. Either <TT>'CENTER'</TT>, <TT>'LEFT'</TT> or <TT>'RIGHT'</TT>.",
                            "firstSentenceCommentText": "Sets the alignment of the section. "
                        }
                    ]
                },
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "columns(Closure columnsClosure)",
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.ColumnsContext"
                        }
                    ]
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobFilters(Closure jobFiltersClosure)",
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\r\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ]
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "jobs(Closure jobsClosure)",
                            "html": "Adds jobs to the section.",
                            "firstSentenceCommentText": "Adds jobs to the section.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "html": "Sets the name of the section.",
                            "firstSentenceCommentText": "Sets the name of the section."
                        }
                    ]
                },
                {
                    "name": "width",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "width",
                                    "type": "String"
                                }
                            ],
                            "text": "width(String width)",
                            "html": "Sets the with of the section. Either <TT>'FULL'</TT>, <TT>'HALF'</TT>, <TT>'THIRD'</TT> or <TT>'TWO_THIRDS'</TT>.",
                            "firstSentenceCommentText": "Sets the with of the section. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.SectionsContext": {
            "type": "javaposse.jobdsl.dsl.views.SectionsContext",
            "methods": [
                {
                    "name": "listView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "listViewSectionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "listView(Closure listViewSectionClosure)",
                            "html": "Adds a list view section.",
                            "firstSentenceCommentText": "Adds a list view section.",
                            "contextClass": "javaposse.jobdsl.dsl.views.ListViewSectionContext"
                        }
                    ],
                    "examples": "sectionedView('example') {\r\n    sections {\r\n        listView {\r\n            name('project-A')\r\n            width('HALF')\r\n            alignment('LEFT')\r\n            jobs {\r\n                regex('project-A-.*')\r\n            }\r\n            columns {\r\n                status()\r\n                weather()\r\n                name()\r\n                lastSuccess()\r\n                lastFailure()\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.SectionedView": {
            "type": "javaposse.jobdsl.dsl.views.SectionedView",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "sectionedView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "sectionedView('project-a') {\r\n    description('View for project A')\r\n}\r\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterBuildQueue(boolean filterBuildQueue = true)",
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "sectionedView('example') {\r\n    filterBuildQueue()\r\n}\r\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterExecutors(boolean filterExecutors = true)",
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\r\n "
                        }
                    ],
                    "examples": "sectionedView('example') {\r\n    filterExecutors()\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "sections",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sectionsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "sections(Closure sectionsClosure)",
                            "html": "Creates a section containing a list of jobs.",
                            "firstSentenceCommentText": "Creates a section containing a list of jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.SectionsContext"
                        }
                    ],
                    "examples": "sectionedView('example') {\r\n    sections {\r\n        listView {\r\n            name('project-A')\r\n            width('HALF')\r\n            alignment('LEFT')\r\n            jobs {\r\n                regex('project-A-.*')\r\n            }\r\n            columns {\r\n                status()\r\n                weather()\r\n                name()\r\n                lastSuccess()\r\n                lastFailure()\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.View": {
            "type": "javaposse.jobdsl.dsl.View",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ]
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterBuildQueue(boolean filterBuildQueue = true)",
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ]
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterExecutors(boolean filterExecutors = true)",
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\r\n "
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.NestedViewsContext": {
            "type": "javaposse.jobdsl.dsl.views.NestedViewsContext",
            "methods": [
                {
                    "name": "buildMonitorView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "buildMonitorView(String name, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildMonitorView"
                        }
                    ],
                    "plugin": "build-monitor-plugin"
                },
                {
                    "name": "buildPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "buildPipelineView(String name, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildPipelineView"
                        }
                    ],
                    "plugin": "build-pipeline-plugin"
                },
                {
                    "name": "categorizedJobsView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "categorizedJobsView(String name, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.CategorizedJobsView"
                        }
                    ],
                    "plugin": "categorized-view"
                },
                {
                    "name": "deliveryPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineView(String name, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.DeliveryPipelineView"
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin"
                },
                {
                    "name": "listView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "listView(String name, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.ListView"
                        }
                    ]
                },
                {
                    "name": "nestedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "nestedView(String name, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedView"
                        }
                    ],
                    "plugin": "nested-view"
                },
                {
                    "name": "sectionedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "sectionedView(String name, Closure closure = null)",
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.SectionedView"
                        }
                    ],
                    "plugin": "sectioned-view"
                },
                {
                    "name": "view",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "arguments",
                                    "type": "Map<String, Object>",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "view(Map<String, Object> arguments = [:], Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.View"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "arguments",
                                    "type": "Map<String, Object>",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "view(Map<String, Object> arguments = [:], String name, Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.View"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.NestedView": {
            "type": "javaposse.jobdsl.dsl.views.NestedView",
            "methods": [
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "columns(Closure columnsClosure)",
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedViewColumnsContext"
                        }
                    ],
                    "examples": "nestedView('project-A') {\r\n    columns {\r\n        status()\r\n        weather()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "nestedView('example') {\r\n    configure { view ->\r\n        view / icon(class: 'org.example.MyViewIcon')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String description)",
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "nestedView('project-a') {\r\n    description('View for project A')\r\n}\r\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterBuildQueue(boolean filterBuildQueue = true)",
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "nestedView('example') {\r\n    filterBuildQueue()\r\n}\r\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "filterExecutors(boolean filterExecutors = true)",
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\r\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\r\n "
                        }
                    ],
                    "examples": "nestedView('example') {\r\n    filterExecutors()\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "views",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "views(Closure viewsClosure)",
                            "html": "Adds nested views.",
                            "firstSentenceCommentText": "Adds nested views.",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedViewsContext"
                        }
                    ],
                    "examples": "nestedView('project-a') {\r\n    views {\r\n        listView('overview') {\r\n            jobs {\r\n                regex(/project-A-.*/)\r\n            }\r\n            columns {\r\n                status()\r\n                weather()\r\n                name()\r\n                lastSuccess()\r\n                lastFailure()\r\n            }\r\n        }\r\n        buildPipelineView('pipeline') {\r\n            selectedJob('project-a-compile')\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.CpsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.CpsContext",
            "methods": [
                {
                    "name": "sandbox",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sandbox",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "sandbox(boolean sandbox = true)",
                            "html": "Enables the Groovy sandbox for the script.",
                            "firstSentenceCommentText": "Enables the Groovy sandbox for the script."
                        }
                    ]
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "script(String script)",
                            "html": "Sets the workflow DSL script. Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String)\r\n to read the script from a file.",
                            "firstSentenceCommentText": "Sets the workflow DSL script. "
                        }
                    ],
                    "examples": "workflowJob('example') {\r\n    definition {\r\n        cps {\r\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.WorkflowDefinitionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.WorkflowDefinitionContext",
            "methods": [
                {
                    "name": "cps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cpsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "cps(Closure cpsClosure)",
                            "html": "Defines a Groovy CPS DSL definition.",
                            "firstSentenceCommentText": "Defines a Groovy CPS DSL definition.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.CpsContext"
                        }
                    ],
                    "examples": "workflowJob('example') {\r\n    definition {\r\n        cps {\r\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\r\n            sandbox()\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.WorkflowJob": {
            "type": "javaposse.jobdsl.dsl.jobs.WorkflowJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "authorization(Closure closure)",
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "plugin": "matrix-auth",
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\r\njob('example-1') {\r\n    authorization {\r\n        permission('hudson.model.Item.Workspace:authenticated')\r\n    }\r\n}\r\n\r\n// adds the build permission for the special anonymous user\r\njob('example-2') {\r\n    authorization {\r\n        permission('hudson.model.Item.Build', 'anonymous')\r\n    }\r\n}\r\n\r\n// add all permissions for user joe, blocking inheritance of the global\r\n// authorization matrix\r\njob('example-3') {\r\n    authorization {\r\n        permissionAll('joe')\r\n        blocksInheritance()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "text": "batchTask(String name, String script)",
                            "availableSince": "1.24",
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n Can be called multiple times to add more batch tasks.\r\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\r\n "
                        }
                    ],
                    "plugin": "batch-task",
                    "examples": "job('example') {\r\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\r\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\r\n}\r\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(Iterable<String> projectNames, Closure closure)",
                            "availableSince": "1.36\r\n",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "text": "blockOn(String projectName)",
                            "html": "Block build if certain jobs are running.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "blockOn(String projectName, Closure closure)",
                            "availableSince": "1.36",
                            "html": "Block build if certain jobs are running.\r\n\r\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\r\n jobs.\r\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "plugin": "build-blocker-plugin",
                    "examples": "job('example-1') {\r\n    blockOn('project-a')\r\n}\r\n\r\njob('example-2') {\r\n    blockOn(['project-a', 'project-b']) {\r\n        blockLevel('GLOBAL')\r\n        scanQueueFor('ALL')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnDownstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnDownstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "blockOnUpstreamProjects()",
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\r\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\r\n    blockOnUpstreamProjects()\r\n}\r\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "text": "checkoutRetryCount(int times = 3)",
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\r\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\r\n    checkoutRetryCount(10)\r\n}"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "text": "compressBuildLog()",
                            "availableSince": "1.36",
                            "html": "Compresses the log file after build completion.\r\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "plugin": "compress-buildlog",
                    "examples": "job('example') {\r\n    compressBuildLog()\r\n}\r\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "concurrentBuild(boolean allowConcurrentBuild = true)",
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\r\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\r\n    concurrentBuild()\r\n}\r\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configure(Closure withXmlClosure)",
                            "html": "Allows direct manipulation of the generated XML.\r\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\r\n    configure { project ->\r\n        project / 'properties' / 'com.example.Test' {\r\n            'switch'('on')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "text": "customWorkspace(String workspacePath)",
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\r\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\r\n    customWorkspace('/tmp/my-workspace')\r\n}"
                },
                {
                    "name": "definition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "definitionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "definition(Closure definitionClosure)",
                            "html": "Adds a workflow definition.",
                            "firstSentenceCommentText": "Adds a workflow definition.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.WorkflowDefinitionContext"
                        }
                    ],
                    "examples": "workflowJob('example') {\r\n    definition {\r\n        cps {\r\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\r\n            sandbox()\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "deliveryPipelineConfiguration(String stageName, String taskName = null)",
                            "availableSince": "1.26",
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\r\n <TT>null</TT> to use the job name as stage or task name.\r\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "// use job name as task name\r\njob('example-1') {\r\n    deliveryPipelineConfiguration('qa')\r\n}\r\n\r\n// use custom task name\r\njob('example-2') {\r\n    deliveryPipelineConfiguration('qa', 'integration-tests')\r\n}\r\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "text": "description(String descriptionString)",
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\r\n    description('My first job')\r\n}\r\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "disabled(boolean shouldDisable = true)",
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\r\n    disabled()\r\n}\r\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "text": "displayName(String displayName)",
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\r\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\r\n    dispayName('Job DSL Example Project')\r\n}\r\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "environmentVariables(Closure envClosure)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "environmentVariables(Map<Object, Object> vars, Closure envClosure = null)",
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "plugin": "envinject",
                    "examples": "job('example-1') {\r\n    environmentVariables(FOO: 'bar', TEST: '123')\r\n}\r\n\r\njob('example-2') {\r\n    environmentVariables {\r\n        env('ONE', '1')\r\n        propertiesFile('env.properties')\r\n        keepBuildVariables()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "text": "jdk(String jdk)",
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\r\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\r\n    jdk('Java 8')\r\n}"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "text": "keepDependencies(boolean keep = true)",
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\r\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\r\n    keepDependencies()\r\n}\r\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "label(String labelExpression = null)",
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\r\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\r\n    label('x86 && ubuntu')\r\n}\r\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "text": "lockableResources(String resources, Closure lockClosure = null)",
                            "availableSince": "1.25",
                            "html": "Locks resources while a job is running.\r\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "plugin": "lockable-resources",
                    "examples": "// lock single resource\r\njob('example-1') {\r\n    lockableResources('lock-resource')\r\n}\r\n\r\n// notation that locks three resources at once\r\njob('example-2') {\r\n    lockableResources('resource1 resource2 resource3')\r\n}\r\n\r\n// lock two available resources from given three and capture locked resources in the variable name\r\njob('example-3') {\r\n    lockableResources('resource1 resource2 resource3') {\r\n        resourcesVariable('LOCKED_RESOURCES')\r\n        resourceNumber(2)\r\n    }\r\n    steps {\r\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "text": "logRotator(int daysToKeep = -1, int numToKeep = -1, int artifactDaysToKeep = -1, int artifactNumToKeep = -1)",
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "logRotator(Closure closure)",
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\r\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\r\n    logRotator(30, -1, 1, -1)\r\n}\r\n\r\njob('example-2') {\r\n    logRotator {\r\n        numToKeep(5)\r\n        artifactNumToKeep(1)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiscm(Closure closure)",
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "plugin": "multiple-scms",
                    "examples": "job('example') {\r\n    multiscm {\r\n        git {\r\n            remote {\r\n                github('jenkinsci/jenkins')\r\n            }\r\n            relativeTargetDir('jenkins')\r\n        }\r\n        git {\r\n            remote {\r\n                github('jenkinsci/job-dsl-plugin')\r\n            }\r\n            relativeTargetDir('job-dsl-plugin')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "name(String name)",
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "notifications(Closure notificationClosure)",
                            "availableSince": "1.26",
                            "html": "Configures notifications for the build.\r\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "plugin": "notification",
                    "examples": "job('example') {\r\n    notifications {\r\n        endpoint('http://example.com:8080/monitor')\r\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\r\n            event('started')\r\n            timeout(60000)\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "parameters(Closure closure)",
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\r\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    parameters {\r\n        booleanParam('FLAG', true)\r\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "text": "previousNames(String regex)",
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n The regular expression needs to match the full name of the job, i.e. with folders included.\r\n This can be useful to keep the build history.\r\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\r\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\r\njob('04-project-a-deploy') {\r\n    previousNames(/\\d+-project-a-deploy/)\r\n}\r\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "text": "priority(int value)",
                            "availableSince": "1.15",
                            "html": "Set the priority of the job. Default value is 100.\r\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "plugin": "PrioritySorter",
                    "examples": "job('example') {\r\n    priority(50)\r\n}\r\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "properties(Closure closure)",
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    properties {\r\n        customIcon('job.png')\r\n        sidebarLinks {\r\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "publishers(Closure closure)",
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    publishers {\r\n        archiveArtifacts('build/test-output/**/*.html')\r\n        archiveJunit('**/target/surefire-reports/*.xml')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "text": "quietPeriod(int seconds = 5)",
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\r\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\r\n    quietPeriod(120)\r\n}\r\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "scm(Closure closure)",
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "steps(Closure closure)",
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    steps {\r\n        shell('echo START')\r\n        gradle('check')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "throttleConcurrentBuilds(Closure throttleClosure)",
                            "availableSince": "1.20",
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\r\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "plugin": "throttle-concurrents",
                    "examples": "// throttle one job on its own\r\njob('example-1') {\r\n    throttleConcurrentBuilds {\r\n        maxPerNode(1)\r\n        maxTotal(2)\r\n    }\r\n}\r\n\r\n// throttle as part of a category\r\njob('example-2') {\r\n    throttleConcurrentBuilds {\r\n        categories(['cat-1'])\r\n    }\r\n}\r\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "triggers(Closure closure)",
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    triggers {\r\n        scm('@daily')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "text": "using(String templateName)",
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\r\n\r\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\r\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\r\n    using('project-template')\r\n}\r\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "text": "weight(int weight)",
                            "availableSince": "1.36",
                            "html": "Specifies the number of executors to block for this job.\r\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "plugin": "heavy-job",
                    "examples": "job('example') {\r\n    weight(2)\r\n}\r\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "wrappers(Closure closure)",
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\r\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\r\n    wrappers {\r\n        colorizeOutput()\r\n        timestamps()\r\n    }\r\n}\r\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.DslFactory": {
            "type": "javaposse.jobdsl.dsl.DslFactory",
            "methods": [
                {
                    "name": "buildFlowJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "buildFlowJob(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL.\r\n     ",
                            "firstSentenceCommentText": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "buildFlowJob(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL.\r\n     ",
                            "firstSentenceCommentText": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.BuildFlowJob"
                        }
                    ],
                    "plugin": "build-flow-plugin",
                    "examples": "// triple-quotes can be used for inline flow DSL definition\r\nbuildFlowJob('example-1') {\r\n    buildFlowJob('''\r\n        build(\"job1\")\r\n    ''')\r\n}\r\n\r\n// the build flow text can also be read from a file\r\nbuildFlowJob('example-2') {\r\n    buildFlowJob(readFileFromWorkspace('my-build-flow-text.groovy'))\r\n}\r\n"
                },
                {
                    "name": "buildMonitorView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "buildMonitorView(String name)",
                            "html": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "buildMonitorView(String name, Closure closure)",
                            "html": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs.",
                            "firstSentenceCommentText": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildMonitorView"
                        }
                    ],
                    "plugin": "build-monitor-plugin",
                    "examples": "buildMonitorView('project-A') {\r\n    description('All jobs for project A')\r\n    jobs {\r\n        name('release-projectA')\r\n        regex(/project-A-.+/)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "buildPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "buildPipelineView(String name)",
                            "html": "Create or updates a view of upstream and downstream connected jobs.\r\n     ",
                            "firstSentenceCommentText": "Create or updates a view of upstream and downstream connected jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "buildPipelineView(String name, Closure closure)",
                            "html": "Create or updates a view of upstream and downstream connected jobs.",
                            "firstSentenceCommentText": "Create or updates a view of upstream and downstream connected jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildPipelineView"
                        }
                    ],
                    "plugin": "build-pipeline-plugin",
                    "examples": "buildPipelineView('project-A') {\r\n    filterBuildQueue()\r\n    filterExecutors()\r\n    title('Project A CI Pipeline')\r\n    displayedBuilds(5)\r\n    selectedJob('project-A-compile')\r\n    alwaysAllowManualTrigger()\r\n    showPipelineParameters()\r\n    refreshFrequency(60)\r\n}\r\n"
                },
                {
                    "name": "categorizedJobsView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "categorizedJobsView(String name)",
                            "html": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\r\n jobs and categorize them according to regular expressions.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\r\n jobs and categorize them according to regular expressions."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "categorizedJobsView(String name, Closure closure)",
                            "html": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\r\n jobs and categorize them according to regular expressions.",
                            "firstSentenceCommentText": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\r\n jobs and categorize them according to regular expressions.",
                            "contextClass": "javaposse.jobdsl.dsl.views.CategorizedJobsView"
                        }
                    ],
                    "plugin": "categorized-view",
                    "examples": "categorizedJobsView('example') {\r\n    jobs {\r\n        regex(/configuration_.*/)\r\n    }\r\n    categorizationCriteria {\r\n        regexGroupingRule(/^configuration_([^_]+).*$/)\r\n    }\r\n    columns {\r\n        status()\r\n        categorizedJob()\r\n        buildButton()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "configFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configFile(Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.ConfigFile"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "arguments",
                                    "type": "Map<String, Object>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "configFile(Map<String, Object> arguments, Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.ConfigFile"
                        }
                    ],
                    "plugin": "config-file-provider"
                },
                {
                    "name": "customConfigFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "customConfigFile(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates a managed custom file.\r\n     ",
                            "firstSentenceCommentText": "Creates a managed custom file."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "customConfigFile(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates a managed custom file.\r\n     ",
                            "firstSentenceCommentText": "Creates a managed custom file.",
                            "contextClass": "javaposse.jobdsl.dsl.ConfigFile"
                        }
                    ],
                    "plugin": "config-file-provider",
                    "examples": "// creates a custom config file from a file named acme/settings.json in the seed job's workspace\r\ncustomConfigFile('acme-settings') {\r\n    comment('Settings for ACME tools')\r\n    content(readFileFromWorkspace('acme/settings.json'))\r\n}\r\n"
                },
                {
                    "name": "deliveryPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "deliveryPipelineView(String name)",
                            "html": "Creates or updates a view that renders pipelines based on upstream/downstream jobs.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that renders pipelines based on upstream/downstream jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "deliveryPipelineView(String name, Closure closure)",
                            "html": "Creates or updates a view that renders pipelines based on upstream/downstream jobs.",
                            "firstSentenceCommentText": "Creates or updates a view that renders pipelines based on upstream/downstream jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.DeliveryPipelineView"
                        }
                    ],
                    "plugin": "delivery-pipeline-plugin",
                    "examples": "deliveryPipelineView('project-a') {\r\n    pipelineInstances(5)\r\n    showAggregatedPipeline()\r\n    columns(2)\r\n    sorting(Sorting.TITLE)\r\n    updateInterval(60)\r\n    enableManualTriggers()\r\n    showAvatars()\r\n    showChangeLog()\r\n    pipelines {\r\n        component('Sub System A', 'compile-a')\r\n        component('Sub System B', 'compile-b')\r\n        regex(/compile-subsystem-(.*)/)\r\n    }\r\n}\r\n"
                },
                {
                    "name": "folder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "folder(Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.Folder"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "folder(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates or updates a folder.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a folder."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "folder(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates or updates a folder.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a folder.",
                            "contextClass": "javaposse.jobdsl.dsl.Folder"
                        }
                    ],
                    "plugin": "cloudbees-folder",
                    "examples": "folder('project-a') {\r\n    displayName('Project A')\r\n    description('Folder for project A')\r\n}\r\n\r\nfolder('project-a/testing') {\r\n    description('Folder containing all QA jobs for project A')\r\n}\r\n"
                },
                {
                    "name": "freeStyleJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "freeStyleJob(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates or updates a free style job.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "freeStyleJob(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates or updates a free style job.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.FreeStyleJob"
                        }
                    ],
                    "examples": "freeStyleJob('example') {\r\n    logRotator(-1, 10)\r\n    jdk('Java 6')\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin', 'master')\r\n    }\r\n    triggers {\r\n        githubPush()\r\n    }\r\n    steps {\r\n        gradle('clean build')\r\n    }\r\n    publishers {\r\n        archiveArtifacts('job-dsl-plugin/build/libs/job-dsl.hpi')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "ivyJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "ivyJob(String name)",
                            "availableSince": "1.38\r\n",
                            "html": "Creates or updates a job to build an Ivy project.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build an Ivy project."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "ivyJob(String name, Closure closure)",
                            "availableSince": "1.38",
                            "html": "Creates or updates a job to build an Ivy project.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build an Ivy project.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.IvyJob"
                        }
                    ],
                    "plugin": "ivy",
                    "examples": "ivyJob('example') {\r\n    ivyBuilder {\r\n        ant {\r\n            target('clean')\r\n            targets(['test', 'publish'])\r\n            buildFile('build.xml')\r\n            antInstallation('Ant 1.9')\r\n            prop('key', 'value')\r\n            javaOpt('-Xmx=1G')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "job",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "job(Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.Job"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "arguments",
                                    "type": "Map<String, Object>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "job(Map<String, Object> arguments, Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.Job"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "job(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates or updates a free style job.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "job(String name, Closure closure)",
                            "availableSince": "1.31\r\n",
                            "html": "Creates or updates a free style job.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.FreeStyleJob"
                        }
                    ],
                    "examples": "job('example') {\r\n    logRotator(-1, 10)\r\n    jdk('Java 6')\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin', 'master')\r\n    }\r\n    triggers {\r\n        githubPush()\r\n    }\r\n    steps {\r\n        gradle('clean build')\r\n    }\r\n    publishers {\r\n        archiveArtifacts('job-dsl-plugin/build/libs/job-dsl.hpi')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "listView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "listView(String name)",
                            "html": "Creates or updates a view that shows items in a simple list format.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that shows items in a simple list format."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "listView(String name, Closure closure)",
                            "html": "Creates or updates a view that shows items in a simple list format.",
                            "firstSentenceCommentText": "Creates or updates a view that shows items in a simple list format.",
                            "contextClass": "javaposse.jobdsl.dsl.views.ListView"
                        }
                    ],
                    "examples": "listView('project-A') {\r\n    description('All unstable jobs for project A')\r\n    filterBuildQueue()\r\n    filterExecutors()\r\n    jobs {\r\n        name('release-projectA')\r\n        regex(/project-A-.+/)\r\n    }\r\n    jobFilters {\r\n        status {\r\n            status(Status.UNSTABLE)\r\n        }\r\n    }\r\n    columns {\r\n        status()\r\n        weather()\r\n        name()\r\n        lastSuccess()\r\n        lastFailure()\r\n        lastDuration()\r\n        buildButton()\r\n    }\r\n}\r\n"
                },
                {
                    "name": "matrixJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "matrixJob(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates or updates a multi-configuration job.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-configuration job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "matrixJob(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates or updates a multi-configuration job.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-configuration job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.MatrixJob"
                        }
                    ],
                    "plugin": "matrix-project",
                    "examples": "matrixJob('example') {\r\n    axes {\r\n        jdk('jdk6', 'jdk7')\r\n    }\r\n    scm {\r\n        github('jenkinsci/job-dsl-plugin', 'master')\r\n    }\r\n    triggers {\r\n        githubPush()\r\n    }\r\n    steps {\r\n        gradle('clean build')\r\n    }\r\n    publishers {\r\n        archiveArtifacts('job-dsl-plugin/build/libs/job-dsl.hpi')\r\n    }\r\n}\r\n"
                },
                {
                    "name": "mavenJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenJob(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates or updates a job to build a Maven project.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build a Maven project."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "mavenJob(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates or updates a job to build a Maven project.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build a Maven project.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.MavenJob"
                        }
                    ],
                    "plugin": "maven-plugin",
                    "examples": "mavenJob('example') {\r\n    logRotator(-1, 10)\r\n    jdk('Java 7')\r\n    scm {\r\n        github('jenkinsci/jenkins', 'master')\r\n    }\r\n    triggers {\r\n        githubPush()\r\n    }\r\n    goals('clean verify')\r\n}\r\n"
                },
                {
                    "name": "mavenSettingsConfigFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "mavenSettingsConfigFile(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates a managed Maven settings file.\r\n     ",
                            "firstSentenceCommentText": "Creates a managed Maven settings file."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "mavenSettingsConfigFile(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates a managed Maven settings file.\r\n     ",
                            "firstSentenceCommentText": "Creates a managed Maven settings file.",
                            "contextClass": "javaposse.jobdsl.dsl.ConfigFile"
                        }
                    ],
                    "plugin": "config-file-provider",
                    "examples": "// creates a Maven settings file from a file named maven/settings.xml in the seed job's workspace\r\ncustomConfigFile('company-settings') {\r\n    comment('Company Maven Settings')\r\n    content(readFileFromWorkspace('maven/settings.xml'))\r\n}\r\n"
                },
                {
                    "name": "multiJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "multiJob(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Creates or updates a multi-job project, suitable for running other jobs.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-job project, suitable for running other jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "multiJob(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Creates or updates a multi-job project, suitable for running other jobs.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-job project, suitable for running other jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.MultiJob"
                        }
                    ],
                    "plugin": "jenkins-multijob-plugin",
                    "examples": "multiJob('example') {\r\n    steps {\r\n        phase() {\r\n            phaseName 'Second'\r\n            job('JobZ') {\r\n                parameters {\r\n                    propertiesFile('my1.properties')\r\n                }\r\n            }\r\n        }\r\n        phase('Third') {\r\n            job('JobA')\r\n            job('JobB')\r\n            job('JobC')\r\n        }\r\n        phase('Fourth') {\r\n            job('JobD', false, true) {\r\n                parameters {\r\n                    booleanParam('cParam', true)\r\n                    propertiesFile('my.properties')\r\n                    sameNode()\r\n                    matrixSubset('it.name==\"hello\"')\r\n                    subversionRevision()\r\n                    gitRevision()\r\n                    predefinedProp('prop1', 'value1')\r\n                    nodeLabel('lParam', 'my_nodes')\r\n                }\r\n                configure { phaseJobConfig ->\r\n                    phaseJobConfig / enableCondition << 'true'\r\n                    phaseJobConfig / condition << '${RUN_JOB} == \"true\"'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "nestedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "nestedView(String name)",
                            "html": "Creates or updates a view that allows grouping views into multiple levels.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that allows grouping views into multiple levels."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "nestedView(String name, Closure closure)",
                            "html": "Creates or updates a view that allows grouping views into multiple levels.",
                            "firstSentenceCommentText": "Creates or updates a view that allows grouping views into multiple levels.",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedView"
                        }
                    ],
                    "plugin": "nested-view",
                    "examples": "nestedView('project-a') {\r\n    views {\r\n        listView('overview') {\r\n            jobs {\r\n                regex(/project-A-.*/)\r\n            }\r\n            columns {\r\n                status()\r\n                weather()\r\n                name()\r\n                lastSuccess()\r\n                lastFailure()\r\n            }\r\n        }\r\n        buildPipelineView('pipeline') {\r\n            selectedJob('project-a-compile')\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "queue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                }
                            ],
                            "text": "queue(String jobName)",
                            "html": "Schedule a job to be run later. Validation of the job name isn't done until after the DSL has run.\r\n     ",
                            "firstSentenceCommentText": "Schedule a job to be run later. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "job",
                                    "type": "javaposse.jobdsl.dsl.Job"
                                }
                            ],
                            "text": "queue(javaposse.jobdsl.dsl.Job job)",
                            "html": "Schedule a job to be run later.\r\n     ",
                            "firstSentenceCommentText": "Schedule a job to be run later."
                        }
                    ],
                    "examples": "def example1 = job('example-1') {\r\n    displayName('first example')\r\n}\r\n\r\nqueue(example1)\r\n\r\njob('example-2') {\r\n    displayName('second example')\r\n}\r\n\r\nqueue('example-2')\r\n"
                },
                {
                    "name": "readFileFromWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filePath",
                                    "type": "String"
                                }
                            ],
                            "text": "readFileFromWorkspace(String filePath)",
                            "html": "Streams a file from the workspace of the seed job.\r\n     ",
                            "firstSentenceCommentText": "Streams a file from the workspace of the seed job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "filePath",
                                    "type": "String"
                                }
                            ],
                            "text": "readFileFromWorkspace(String jobName, String filePath)",
                            "html": "Reads a file from the workspace of a job.\r\n     ",
                            "firstSentenceCommentText": "Reads a file from the workspace of a job."
                        }
                    ],
                    "examples": "// read the file foo/bar.txt from the seed job's workspace\r\ndef bar = readFileFromWorkspace('foo/bar.txt')\r\n\r\n// read the file acme.xml from a workspace of job project-a\r\ndef acme = readFileFromWorkspace('project-a', 'acme.xml')\r\n"
                },
                {
                    "name": "sectionedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "sectionedView(String name)",
                            "html": "Creates or updates a view that can be divided into sections.\r\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that can be divided into sections."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "sectionedView(String name, Closure closure)",
                            "html": "Creates or updates a view that can be divided into sections.",
                            "firstSentenceCommentText": "Creates or updates a view that can be divided into sections.",
                            "contextClass": "javaposse.jobdsl.dsl.views.SectionedView"
                        }
                    ],
                    "plugin": "sectioned-view",
                    "examples": "sectionedView('project-summary') {\r\n    filterBuildQueue()\r\n    filterExecutors()\r\n    sections {\r\n        listView {\r\n            name('Project A')\r\n            jobs {\r\n                regex(/project-A-.*/)\r\n            }\r\n            columns {\r\n                status()\r\n                weather()\r\n                name()\r\n                lastSuccess()\r\n                lastFailure()\r\n            }\r\n        }\r\n        listView {\r\n            name('Project B')\r\n            jobs {\r\n                regex(/project-B-.*/)\r\n            }\r\n            jobFilters {\r\n                regex {\r\n                    matchValue(RegexMatchValue.DESCRIPTION)\r\n                    regex(/.*-project-B-.*/)\r\n                }\r\n            }\r\n            columns {\r\n                status()\r\n                weather()\r\n                name()\r\n                lastSuccess()\r\n                lastFailure()\r\n            }\r\n        }\r\n    }\r\n}\r\n"
                },
                {
                    "name": "streamFileFromWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filePath",
                                    "type": "String"
                                }
                            ],
                            "text": "streamFileFromWorkspace(String filePath)",
                            "html": "Streams a file from the workspace of the seed job.\r\n     ",
                            "firstSentenceCommentText": "Streams a file from the workspace of the seed job."
                        }
                    ],
                    "examples": "// read the file foo/bar.txt from the seed job's workspace\r\ndef bar = streamFileFromWorkspace('foo/bar.txt')\r\n"
                },
                {
                    "name": "userContent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                },
                                {
                                    "name": "content",
                                    "type": "java.io.InputStream"
                                }
                            ],
                            "text": "userContent(String path, java.io.InputStream content)",
                            "availableSince": "1.33",
                            "html": "Upload the stream as <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/User+Content\">user content</a>.\r\n Use <a href='../../../DslFactory.html#streamFileFromWorkspace(java.lang.String)' title='DslFactory.streamFileFromWorkspace'>DslFactory.streamFileFromWorkspace</a> to read the content from a file.\r\n     ",
                            "firstSentenceCommentText": "Upload the stream as user content.\r\n "
                        }
                    ],
                    "examples": "// save the file images/logo.png from the seed job's workspace as user content\r\nuserContent('company-logo.png', streamFileFromWorkspace('images/logo.png'))\r\n"
                },
                {
                    "name": "view",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "view(Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.View"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "arguments",
                                    "type": "Map<String, Object>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "view(Map<String, Object> arguments, Closure closure)",
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.View"
                        }
                    ]
                },
                {
                    "name": "workflowJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "text": "workflowJob(String name)",
                            "availableSince": "1.30\r\n",
                            "html": "Create or updates a workflow job.\r\n     ",
                            "firstSentenceCommentText": "Create or updates a workflow job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "text": "workflowJob(String name, Closure closure)",
                            "availableSince": "1.31",
                            "html": "Create or updates a workflow job.\r\n     ",
                            "firstSentenceCommentText": "Create or updates a workflow job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.WorkflowJob"
                        }
                    ],
                    "plugin": "workflow-aggregator",
                    "examples": "workflowJob('example') {\r\n    definition {\r\n        cps {\r\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\r\n            sandbox()\r\n        }\r\n    }\r\n}\r\n"
                }
            ]
        }
    }
}